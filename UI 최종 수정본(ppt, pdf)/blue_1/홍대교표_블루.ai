%!PS-Adobe-3.0 
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 14.0.0
%%For: (hongik) ()
%%Title: (\710\653\664\753\661\663\707\645_\672\755\667\747.ai)
%%CreationDate: 3/10/2011 11:56 AM
%%Canvassize: 16383
%%BoundingBox: 68 67 215 215
%%HiResBoundingBox: 68.2192 67.9307 214.5176 214.2305
%%DocumentProcessColors:
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset AGM_Gradient 1.0 0
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_pattern_AI5 1.0 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI7_ImageSettings: 0
%%DocumentCustomColors: (PANTONE 282 C)
%%CMYKCustomColor: 1 0.68 0 0.54 (PANTONE 282 C)
%%CMYKProcessColor: 1 1 1 1 ([\670\702\703\747\702\757\661\742])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 1 0 () 
%AI3_TemplateBox: 142.5 140.96 142.5 140.96
%AI3_TileBox: -143.75 -267.1699 426.25 549.79
%AI3_DocumentPreview: None
%AI5_ArtSize: 283.46 283.46
%AI5_RulerUnits: 1
%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI8_OpenToView: -110 291.46 3.15 1591 931 18 0 0 44 109 0 0
%AI5_OpenViewLayers: 7
%%PageOrigin:0 0
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%AI12_CMSettings: 00.MS
%AI7_Thumbnail: 128 128 8
%%BeginData: 20124 Hex Bytes
%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD35FF7E7E53532F5328532F5328532F5328532F532F7E5984A8FD
%64FF7E592F2F2853537E7EA9FD0CFFA8A8597E53532853537EA8FD5BFFA9
%5353285353A8AFFD06FFA97EA87EA8A9FFA8FF84A8A9FD07FF7E7E532F2F
%7EA8FD55FFA9532F28537DFD0BFF28060006007E280653060084FD0AFFA8
%7E532F287DA8FD50FF7E53285AA8FD0EFF53067E84A8A92F065A06067EFD
%0EFFA9535353A8FD4CFF7E28537EFD11FF28067EFFFFFF060653280684FD
%11FF7E282F53FD48FF532F53A9FD13FF2F00A8FFFFFF2F065306067EFD13
%FFA853287EFD44FF7E2853A8FFFFA8A8FD11FF28067EFFFFFF0606010600
%A8FD12FF53A8FFFF2F2F53FD40FF7E2F53FD04FF53017EFD11FF5306A9FF
%FFFF2F062F06067EFD10FF7E7E530653FFFFA85328A8FD3DFF2E2F7EFD05
%FF2F0606A9FD10FF28067EFFFFFF0606532800A8FD10FF06062E5906067D
%FFFFA82853A8FD39FF7E287EFFFFFF7E537EFFFF280628FD10FF5306A8FF
%FFFF2F065906067EFD10FF530606067E2F0628FFFFFF592F7DFD36FFA82F
%28A9FFFFA82800060028A8A9010653FD0FFF28067EFFFFFF060653280084
%FD0FFF7E0006280600532F7DFFA8FFFFA82F28FD34FF7E2F7DFD04FF5300
%537E2F002FFF7E0006A9FD0EFF53067EA8FFA82F067E06067EFD0FFF2F06
%53FFA80606067EA9062FA8FFFF7E28A8FD31FF5328A8FD05FF0606A8FFA8
%0600FFFF532853A8FD0DFF28060006000600062F06007EFD0DFFA87E7E00
%A8FF7E00280653280600A8FFFFFFA80659FD2FFF2853FD07FF2F067EFFFF
%0606FFFF59060053FD0DFF7E537E597E537E59A9597EA9FD0DFF0606532F
%2853060653FF5306017EFD06FF2E53FD2DFF2853FD08FF5306002F060653
%A8FD0406007EFD0EFFA8A87E847EA87EA8A8FFA8FD0CFF7E06060628062F
%53FF7E06002FFD08FF532FA8FD29FFAF287EFD0AFF530606292F53060653
%FF2F0606A9FD06FF847E53532F532F59537E537E535953532F532F597DA8
%FD0AFF53060653A8FFFF2F060606A9FD08FF7E2FA8FD27FFA806A8FD0CFF
%A8A9532800287EFFFFA906067EFFFFA953532853537E84FD0DFFA8A85959
%2F2F2E7EA8FD07FF7E2800067D7E00062828A8FD09FF7E287EFD25FFA928
%A9FD0EFF5306067EFD05FFA9A8FF5353287E7EFD18FFA853532F7EA8FD06
%FF7D0606285353FD0DFFA82984FD23FFA806A8FD0FFF7E28A9FD06FF7E53
%28537EFD04FFA97EA9FFFFA9FD0DFFA8A9FD05FFA8532F2884FD05FF7E00
%0606FD0FFF7E287EFD21FFA928A9FD17FF842F537EFD06FF7E28592F53A9
%FD0CFF842F532853FD07FF842F537EFFFFFF2806067EFD10FFA82FA8FD20
%FF06A8FD16FF7E2F28A8FD07FF5928FFFFFF5328A8FD0AFF7D28A9FFFF53
%2FFD08FF7E2F28A8FF280053FD12FF7E29A8FD1EFF2884FF53A8FD13FF2F
%537EFD08FF7E28FD05FF537EFD0AFF28FD05FF5353FD09FFA82853A87EA8
%FD13FF7E2FFD1DFF2859FF2F007EFD11FF7E287DFD09FF7E28FD06FFA82E
%FD09FF5953FD06FF532FFFFFA9FD07FF532F7DFD11FFA82828FF5353FD1B
%FF5353FF7E062853FD0FFFA8532FFD0AFF5928FD07FF537EFD09FFA928FD
%07FF532FFD0AFFA95328FD11FF280659FF2F59FD19FF7D2FA8A800060606
%53FFA87EFD0AFF7E2853FD0AFF2F28FD07FF282FFD0BFF7E06A9FD06FF53
%28A8FD0AFF7E0684FD10FF0606A8FF287EFD17FFA92F532F0606282F0653
%FF2F06FD09FF532FA8FD09FFA82F53FD07FF285328597EFD07FFA87E2F53
%28A8FD06FF7E2F7DFD0AFFA9287EFD0CFF53A9FF840628FFFF28FD17FF53
%595300062FFF53065353002F53A8FD06FF2E2FA8FD09FF53287EFD06FFA8
%067EFFFF535328532E532F53282F53A8FFA9067EFD06FFA82F28FD0BFF28
%53FFFFA9FD06FFA8060606FFFF530053FF7E28FD15FF7E2FFF530628FFFF
%530653FD0506A9FD04FF2F53FD09FFA92853FD07FFA828A9FD06FFA8A87E
%A8A8FD07FF287EFD07FF7E287EFD0AFF5353FFFFFF5953FFFF5906060659
%A8FFFF2F007EFF5359FD13FFA906FFA80600A9FF7E00280606287E280653
%FFFFFF2859FD08FFA8532884FD07FF7E28A9FD14FF2853FD07FFA9282FA8
%FD09FF5328FFFF0606532F000628A8530653FFA80600FFFF28A8FD12FF2F
%7EFF2F0606A87EFD040653FFFF7E0059FFFF287EFD08FF7D5359FD08FF7E
%28FD17FF2F53FD08FF7E2F53FD09FF532FFFA90606010653A828060053FF
%FF280606FF7D53FD11FF7D2FFF2F000606060028060628FFFFFF53067DFF
%2859FD07FF7E060628A9FFFFA9FD04FF7E28FD19FF2853FD08FF59060059
%A9FD07FF532FFF5900067D7D0106007EFF7E06060028A8FF287EFD10FF2F
%A8FF2F532F060653590606FFFFFFA92806FF5359FD06FFA953287E7E7E2F
%2FA8FD04FFA828FD1BFF2F59FD05FF7E287E7E7E2F2F7EFD07FF5353FF2F
%062F060628FFFF530606067EFFFFFFA928FD0FFF7D2EFD05FF7EA9A82800
%2FFFFFFF2F007E592FFD06FFA82859FFFFFFA82F2F2FA8FFFFA906A9FD1C
%FF287EFFFFFF53282F7EFFFFFF84287DFD07FF287EFF0600067DFF7E2800
%0628A9FD05FF5353FD0EFF28FD08FF2F000628FFA85300537E2FFD07FF53
%7DFFFFFF7E2F7EFF7E53FFFF2884FD1EFF28A9FFA82FFFA85353FFFFFFA9
%2FA8FD07FF28A9840628FF530600287DFD07FFA82FFD0DFF5353FD07FF7E
%0053FD04060053A828A8FD06FF7E28FFFFA8060653FFFF5306FF2F53FD1F
%FFA828FF2E28A9FFA806067EFFFF5353FD07FFA806FF53060006002FA8FD
%09FF5359FD0CFF53A9FD08FFA9FF7E0606067EFF5359FD07FF5384FFA906
%7EA8537E5A53595353FFA92F5953535359535353595353535953535359FD
%0553FD08FF7E535A532FA8537D84287EFFFF28FD08FF7E2FFF2806067EFD
%0CFF28FD0BFF7E2FFD0CFFAF84FFFF7E28FD08FF2FA8FF2E7EFFFFA8062F
%FF5306A8FF5353A8A87EA87EA87EA87EA87EA87EA87EA87EA87EA87E2FA9
%FD08FF2F06FF7E0653FFFFFF28FFFF537DFD08FF537DFF0006A9FD0CFF53
%53FD0AFF28A9FD10FF28FD09FF2FFFFF53FFFFFFA828FFFF2853FFFF7E7D
%FD15FF2FFD09FFA8067EFF5353FFFFFF597DFF537EFD08FFA82FFF7E53FD
%0DFFA82FFD09FF7D53FD10FF287DFD08FF7D53FFFF28FFFFFFA8FFFF7E06
%FFFFFF537EFD14FFA92FA8FD09FF532FFFFFA8FFFFFF537EFF7E53FD09FF
%5353FD10FF287EFD08FF537EFD0FFF7E2FFD09FF7E59FFFF7E53FD04FFA9
%28A9FFFFFF7E59FD06FFA92F5328532F5328532F5328532F5353532F5328
%532F53A8FFFFFF287EFD04FFA82FA9FFA953FD0AFF28A8FD0FFF842FFD07
%FFA928FD10FF2F7EFD09FF2F84FFFFFF53287D535328A8FD04FF537EFD06
%FF7E060006000600280606000600060653000600060006007EFD04FF2853
%7D7E532F7EFFFFFF28AFFD09FFA828FD10FF2FA8FD06FF5959FD0FFF7E28
%FD0AFF53A8FD04FFA8597E7DFD06FF7E53FD06FFA806062F5953537E7E53
%595353062853FD07067EFD05FF7D59537EA8FD04FF537EFD0AFF537EFD0F
%FF537EFD06FF2F7EFD0FFF287EFD09FFA828FD0FFF537DFD06FF7E060028
%0606287E592806280606065306060006060600A8FD0EFF5353FD0AFF7E2F
%FD0FFFA828FD06FF2FFD0FFF7E53FD0AFF537EFD0FFF7E59FD06FFA80606
%062F2F5A062F5353282806285328FD06067EFD0FFF2FFD0BFF2FA8FD0FFF
%53A8FD04FF5359FD0FFF537DFD0AFF2FA8FD0FFF537EFD06FF7E06002F53
%2F0106000628532806065306060106060600A8FD0FFF537EFD0AFF7E2FFD
%0FFF537DFD04FF537EFD0FFF28FD0AFF7E2EFD10FF7E53A97EA984A8A87E
%282F0629282F282F2828062F282F5328FD06067EFD0FFF7D53FD0BFF53A8
%FD0EFFA853FD04FF28FD0FFF5353FD0AFF2884FD10FF7E532F532E532F53
%28FD0F530006060600060184FD10FF28A9FD0AFF537DFD0EFFA82FA8FFFF
%7E53FD0FFF53A8FD09FF7E53FD19FFA9FD16067EFD10FF7E2FFD0AFFA92F
%FD0FFF53A8FFFF5953FD0EFFA928FD09FFA82FA8FD19FF7E060106000606
%0600060606000606060006060600060084FD11FF2F7EFD0AFF53A8FD0EFF
%7E53FFFF2FA8FD0EFF537EFD09FF5353FD1AFFA8282F282F282F282F282F
%282F282F282F282F282F282FA8FD11FFA82FFD0AFF537EFD06FF7E5353A9
%FD04FF7E53FFA92FA8FD04FF7E2F537EFD06FF537EFD08FF7E2EFD1DFFA9
%FFFFFFA8FD0FFFA9FD13FF5353FD09FF7E28FD05FF5306000606A8FD04FF
%28FFAF2FFD04FF7E0606010684FD05FF28FD09FF0653535A59A9FD3EFF7E
%7E537E067EFD09FF53FD04FFA8FD05062EFD04FF53A87E53FFFFFFAFFD04
%06002FFD04FF7E53FD08FF062F59A828532853A8FD0DFF28532F5353532F
%5353532F535353A8FFFF7E28532E5328532E5328532E2F28FD0EFF7E2853
%067D595306A8FD08FF2EA8FFFFFFA8010601060628A9FFFFFF2F7E7E53FF
%FFFFA8FD0606FD04FF7E53FD07FF5353FFFFA82FFFFF2F067EFD0BFF282F
%A8A87EA984A8A8AFA8A87EA97E2F7E7E28A9A8FFAFFFA8FFA9FFA8FFA828
%28FD0CFF5306A9FF7E59FFFF7E06FD08FF5953FFFFFFA8FD05062FFD04FF
%7E53537EFD04FF06060006002FFD04FF2F7EFD06FF7E2FFFFFFF2F7DFFA8
%2F7D287DFD09FF06532FFD06FF7E53FD05FFA82828FFFFFFA8FFFFFFA8FD
%05FF2F5328FD0AFF2F53537DFFA82FA8FFFF5353FD07FF5953FD04FF5306
%000606A9FD04FF59535384FD04FF7E06060629A8FD04FF53A8FD06FF7E59
%FFFF7E062F7E537EFFA82FA9FD07FF53287D59FD06FF2806FD09FFA8597E
%06845329A9FD04FF537E2953FD08FF5353FFA92FA8590653FFFFA953FD07
%FFA92FFD05FFA87E59FD06FFA82F28A9FD05FFA8537EA8FD05FF28FD07FF
%537EFFFF7EA9A82828FFFFFF5353FD06FF285353592FFD06FF2F01FD09FF
%A9FFA806842F06FD05FF2F7E532F28FD06FFA828FFFFFF530653FF2F84FF
%FF28FD07FFA82FA8FD0DFFA82F53A9FD0DFFA953FD07FF5953FD05FF5359
%FD04FF28FD05FF532F597E5353FD06FF28067EFD08FFA9287E28FF287EFD
%04FFA9537D59535353FD05FF537EFD04FF06FD05FFA853FD08FF2FFD0FFF
%2F28FD0EFFA92EFD07FFA828A8FD04FF2F7EFD04FF5353FFFFFF53067E59
%53592FFD05FFA8062F53FD08FF7E06537EA8287DFD05FF2E7E53537D0653
%FFFFFFA82FA8FD04FF2F7EFD04FF5353FD08FF53A8FD0DFFA82F53FD0EFF
%8453FD08FF532FA8FFA85353FD05FF7D7EFFFF7E535384537E5353FD05FF
%8406FF067EFD07FFA92F7E067E537E2FFD04FF597D59537E5353A9FFFFA9
%2FFD05FF7E2F84FFFF7E28FD09FF53A8FD0EFF2F28FD0EFF7E53FD09FF7D
%53282F53FD06FFA82FFFFF7E53597D59537E53FD05FF0653FF7D007EFD08
%FFA828537EFF067DFFFFFF2F7EFD0553FFFFFF7D53FD06FF7E2F28532FFD
%0AFF537DFD0EFF5353FD0EFF7D7EFD14FFA853FFFF7E59537E537E5353FD
%04FF2F2FFFFFFF2F00A8FD06FFA853062828530653FFFFFF535959537E53
%59FFFFFF7E53FD09FFAFFD0BFF537EFD0EFF2828FD0EFF7E53FD15FF28FF
%FF7E5353597D53592EFFFFFF597EFD04FFA87EA8FD06FF7E06592E7EA853
%59FFFFFF2F7E535953532FFFFFFF537EFD15FF5359FD0EFF2F53FD0EFF7D
%7EFD14FFA953FFFF7E7E5384537E5359FD06FFA9FD0CFFA9A8AFA87EFD05
%FF537D5A537E5359FFFFFF7E59FD15FF537EFD0EFF2828FD0EFF7E53FD15
%FF2EFFFF7E53537D5353592FFFFFFF532853282E2F532859FD07FF06537E
%5300A8FD04FF537E535959532FFFFFFF537EFD15FF5359FD0EFF2F53FD0E
%FF7E59FD14FFA853FFFF7D7E537E537E5953FFFFFF7E065906530653067E
%FD06FF2F537DA87D530653FFFFA9537D53537E5353A9FFFF7E53FD15FF53
%7EFD0EFF2F28FD0EFFA82FFD0DFFA9FD06FF7E2FFFFF7E53537D5353592F
%FFFFFF5906532853062E067EFD05FF7E7E7EA87E7E537E7EFFFFFF2E7EFD
%0553FFFFFF7D53FD15FF537EFD0EFF2F53FD0EFFA853FD0CFF53532F7EFD
%04FF537EFFFF7E7E537E537E5353FFFFFF7E287E287E067E28A8FD07FF28
%7EFFA82F7EFD04FF597D59537E5359FD04FF2FFD05FF535353A9FD0CFF53
%A9FD0EFF2F28FD0FFF28FD0BFF2859A8A9287EFFFFFF2F7EFFFF7E53597E
%FD0453FFFFFF532853062F067D2F7EFD05FFA92F067E7DA828062EFFFFFF
%2F7EFD0553FD04FF2FA8FFFFFF287EA87E067EFD0AFFA953A8FD0DFFA82F
%53A8FD0EFF53AFFD09FF2F7EFFFFFFAF28FFFFA928FFFFFF7E5953A9537D
%5359FFFFFF7E287E065306A828A8FD05FFA953290628062F28A9FFFFFF53
%5959537E5359FD04FF537EFFFF5353FFFFFFA928FD0BFF28FD0EFFAF2828
%A8FD0EFF28A8FD08FFA82FA8FFFFFFA8067DFF2F59FFFFFF7E53537E5353
%532FFFFFFF53285306530653067DFD06FFA9062806282828A8FFFFFF2F7E
%535953532FFD04FFA928FFFF0653FD04FF537DFD09FFA853FD0EFF7E537E
%7EFD0EFF7E7EFD09FF2FFFA9FD05537E2FFD04FF7E7E53A9537E5359FFFF
%FF7E28A97DFFA87E06A9FD06FF532F282F28530653FFFFFF537D5A537E53
%59FD05FF537D7E2F5353597EFF537EFD09FF7E53FD0EFF7E53537EFD0AFF
%A87E7EFF5359FD09FF2F7EFF53067EFF7E067DFD04FF7E53537E5353532F
%FFFFFFA8FD0EFFA9A8FFFFFFA8FD05FF537E535959532FFD05FFA80628FF
%A82F06FFFF2F7EFD09FF537EFD0EFF537D7E53FD07FF7E7E28060059FFA8
%2FFD09FF7E2FFFFF2FFFFF5353FD05FF7D7E53A8537E532F2F5353532FFD
%04537E5359537EFFFF59595359FD08532F2F5959537E5353A9FD05FF7E2F
%A8FF53A8FF7E28FD0AFF53A8FFA853FD0BFF597EA82FFFFFFFAF59530606
%002853A8A8FFA82FA8FD09FF2828592F282F53FD06FF7E53537E53530653
%A87EA87EA87EA87EA87EA87EA8287D53537D7E7D7E7D7E7D7E7D7E7D7E2E
%065359535353FD07FF7E2F2828595300A8FD0AFF28FFFF7E0059FD0AFF28
%A9FF2EFFFF53060606530653FD06FF2FA9FD0AFF067E597EA8FD07FF7E7E
%53A92F532F595359535353595353535953532FFF535959535359537E5359
%537E537E537E2F53537E5359FD09FF7E537E285AFD0AFF7E53FFFFFF5301
%7EFD08FFA953FFFF537EFF532F7DFFFF5900FD06FF7D53FD0AFF5359FD0A
%FF7E5359A8060659FD0D535928FF7D2F7D595359535953595359FD045306
%287D5353FD0CFF2FA8FD0AFF5353FD04FF2F00A8FD07FFA82EFFFF537EFD
%06FFA8067EFD05FFA853FD0AFFA82FFD04FF7E7E53A9FFFF7E7E532F53A8
%7E847E7E7E847E7E7E84FD047E2F7E2F535353A8FFA9FFA8FFA9A9A8A9A8
%A9A8FF532F5359FD04FFA9532FA9FFFFFF7E53FD0BFF2FA9FD05FF2F06FD
%07FF597DFFFF842FFD07FF0653FD06FF28A8FD0AFF2E7EFFA90606062F59
%FFFF7E532F06532F532E532F532E532F532E532F532E7E28532F53A8532F
%5353532FFD0953005353FD04FF2F282F06A9FFFF28FD0BFF7E2FFD06FFA8
%0606A8FD05FF537EFFFFFF53FD07FF5906FFA859067EFF7E53FD0AFFA82F
%FFFFFFA853287EFFFF7E0653FD10FF7E53A97EA9A82F7DFFA8A9A8A9A8A9
%A8A9A8A9A8A9A8A92853FFFFFFA953FFFF7E53FF7D59FD0BFF7E59FFFFFF
%A87E532F0606012F53A8FFFF2FFD04FF2F84FD06FF5306060600287DFFA8
%2FFD0BFF2FA8FFFFFF7D53A8FFFFA806532E532F5328532F5328532F5328
%532853FF5328532F2F84A82FFD0E532806FFFFFF8453A9FF537EFF537EFD
%0BFF28FFFFA806060006287E7E59060606FF7E53FD04FF7E53FFFFA9532F
%0606062F59FD05FF537EFD0AFF537EFFA95353282FFD06FFA9FFFFFFA9FF
%FFFFA9FFFFFFA9FF5353FD05FFA828A884A984A87EA984A87EA984A87EA9
%A8FD05FF5306062FA9FF28FD0BFF7E53FFFF532F53A9FD06FFA8A9FF5953
%FD04FFA82FFFFF060606537DFD08FFA828FD0AFFA82EFF7D2F00532EA8FD
%14FF532FFD045328A9FD14FF7D847D7EA9FF7D53FD0BFF537EFFA8067EFD
%0BFF28A8FD05FF2FA9FFA97EFD04FF7E2806062F59FFFF537EFD0AFF53FF
%FFFD042FA8FD15FFA8A9A8A87EFD16FF53062F2FA8FF7E59FD0AFFA82FFF
%FF5306FD0BFFA853FD06FF7E53FD05FFA8280006285306062EFF7E2FFD0A
%FF2FA8A853FFFF84FD0FFFA8FD05FFA8FD0BFFA8A9FD0DFFA853FF7E537D
%FF28A9FD0AFF287EFFA8007EFD0BFF5353FD06FFA853FD04FFA806007EFD
%04FF53067DFF28A8FD09FF7E53FFFF7E062853FD0DFF53287EFFFFFF2853
%2FFD04FF5306FFFFFF7E537EFD0DFF53A9FFFFA8FFFF53FD0AFF7E2FFFFF
%2F067EFD0BFF28FD08FF287EFFFFFF2F0084FD06FF2828FFA828FD09FF7E
%53FFA9067EFF7D53FD0BFFA87E06A8FFFF7E06A8287DFFFFA82828FFFFFF
%2853FD0EFF2F84FFFF53A9842FFD0AFF2F7EFF7E06000628A9FD08FF7D53
%FD08FFA82FFFFFFF0653FD07FF8406A9FF5359FD09FF2FFF847EFFFF7E53
%FD0DFF28A8FFFFFF2F53067EFFFF537E06FFFFFF065328A9FD0CFF530653
%5353FF537EFD09FF7E2FFFFF5306A92F060653A8FD06FF537EFD09FF2FA8
%FF84067DFD07FF7E067EFFA828A8FD08FF5953FF2F7E530653FD0DFF06A8
%FD04FF7E06A8FFA85328067DFFA8067E2953FD0BFF2FA8532F53FFFF53A8
%FD09FF06FFFF7E007EFFFF7E53000653FD04FFA928FD0AFF5353FFFF067E
%FD07FF5306A9FFFF5953FD08FFA853FFAF282F53FD0DFFA82FA8FFFFFF7E
%5359FD04FFA828FFFFFF53532FFD0BFF7E530653A8FFFF8453FD09FF2F7E
%FFFF7E2FFD05FFA92806067EFFFF2F7EFD0BFF28A9FF2F00FD06FF7E002F
%FD04FF287EFD08FF287EFD05FFA97EFD0BFFA8FD05FFA8FD05FFA8FD05FF
%A8FD0BFF8453FFA82806A8FF2F84FD08FF532FFFFF2E7EFFFFA9FD05FF7E
%2806FFA82FA8FD0BFF7E53FFA80628FFFFFFA853002FA9FF7E84FFFF28FD
%08FFA82FFD04FFA90653FD29FF532859A8FFA8FFA853FD08FFA82FA9FFA9
%2F0153A9FD0AFF5953FD0CFFA82FA8FF7D06012806060053A8FF590600A9
%FF7E06FD08FF537EFFFF7E0028FD29FF7E7E53007EFFFFFF537EFD08FF28
%7DFFFFFFA95300067EFD08FFA928FD0EFF5353FFFFA859282F53A9FFFF2F
%060606A8FFFF7D28FD07FF7E2FFFFF067E7E7E287EFD25FF7E28A984A806
%A8FFA82FFD08FF5353FD06FFA806062FFD07FF2F7EFD0FFF28A8FD08FF06
%0653062EFD04FF532FFD07FF2E53FFFFFF7E0053A8A8A8FFA9FD20FF8453
%0606AFA8A9FFFF28A8FD07FF5328FFFF7D062953FFFFFF2E0606A8FFFFA9
%FF7E28FD10FFA82FFD06FFA8060684A906A8FD05FF5353FD07FF28A8FFA8
%067EA82F2F53A8FD21FF7E7EA82F2F53FFFF537EFD07FF5928FFFF53002F
%062FFD04FF7E280653A9FFFF537EFD11FF5359FD04FF590028A8FF2806FD
%04FFA9FFFF2F53FD06FFA806FFA8A8FF062FFFA82FFD1EFFA85353A953A8
%A82FA8FF7E53FD07FF5928FFFF53007EFD04FFA9FFFFFFA85300A8FF7E2E
%FD12FFA82FA9FFFF530053FFFFA90653FFFFFF5328A8FFFF2F53FD06FF7E
%28FFFFFF06FFFFA906FF53FD1AFFA853A8FD042806FFFFFFA82FA8FD06FF
%5928FFFFFF067EFD04FF5328067EFFFFFFA9FFFF28FD14FF5353FFFF2859
%FFFFFF7E00A8FFFF280628FD04FF2F53FD06FF5906FFFF59537E01535306
%A8FF7DA9A8FFFFFFA9FD0EFFA97DFF0653A8A853FFA87EA8FFA82F84FFA9
%FD04FF5328FFFFFF7E06A8FFFFA806062806007EFD04FF287EFD15FF2F7E
%FD06FF282FFFFF060653FD06FF532FFD06FF7E28FFFF7E2F7EA85306FF53
%06A82FA884FD0CFFA9FFFF7E2853597E067EFF7E53FFFFFFA853A8FD06FF
%5353FD05FF0653A87E06067EFFFF2F28FFFFFF7D53FD17FF28A8FD04FFA8
%067DA800067EFFFFA8597EA8FFFF5906A9FD05FF7E0684FFFFFF537E2828
%2F2FA806FF0059FF7D7D2FFFFF53A853FFA928A8FF7E282853FF06537EA8
%A8FFFF7D2FA8FD05FFA82853FFFFFFA8FFFF590006002FA8FFFFFF2829FF
%FFA82FA8FD17FFA828FD04FF7E0653062FA8FFA82F0006060653FFFF8428
%7EFD05FFA92853FFFFA8FF2FA8287E5353A85306A8537E28FFA8597E0684
%A80684FFFF285928A87D297DFFFFFF2F53FD06FF592F7EFFFF7E060628FF
%FF845384FD04FFA80653FFFF2F7EFD19FF5328FFFFFF06060053FFFF7E06
%007DA8A9530628FFFFA92853A8FD05FF532953FD04FF2F7E287D7E7E5906
%7E7D2FFFA953A92828532F53FFFF53062F7EFFFFFFA87D287EFD06FF282F
%A8FFFF53002F530628FD05FFA8FFA82806FFFF5353FD1BFF5353FFFF2F06
%7EFFFFA92806A9FD04FF7D067DFFFFFF592F59FD05FFA853287EAFFFFFFF
%7EFF59A9FF2853FF06FF597E7EA8287E7E2FFFFFA87EFD04FF535353FD06
%FF7E287EFFFFFF2F007EFFFF5906A8FFFFFF0628532806A9FF7E2FFD1DFF
%2859FFA8A8FFFFFF530084FD06FF282FFD04FFA85328A8FD05FFA82F2F2F
%7EA8FD05FFA8A9FF7E2F59FFA8A8A9A8FF7EFD05FF7D532859A8FD05FF7E
%2F28FFFFFF7E2806A8FFFFFFA801A8FFFFFF7E060628FFFF7E28FD1EFFA9
%2F7EFD05FF062FFD07FF2F06FFFFFFA9FFFFA828537EFD06FF84532F2E7E
%7EA9A8FD0DFFA87E53532F537EFD06FFA828537EFD04FF53007EFD04FF28
%06012FA9FD06FFA828FD1EFFA9FFA8287EFFFFFF7E0653FFFFFF0653FFFF
%062FFFFF7E067DFFFFFF7D2F287EA8FD05FFA9A853532E2F28532F535359
%53532E53282F2853537E7EFD07FF592F287EFFFFFF7E067EFF2F0084FFAF
%0606537D0028FD05FFA806A9FD21FFA82FA8FFFFFF067EFFFFFF7E0653FF
%FFA8FFFF2806FFA87EFFFFFFA82F5353A9FD0AFFA8A8FD057EA9A8AFA9FD
%09FFA85928537EFFFFFFA82F002F84FFA929067E0629A8FFFFA806287EFF
%FFA928A9FD23FF7E2884FFFF2F06FD04FFA80028FFFFFF53007EFF2F06FD
%05FFA87E282F53A8A9FD17FF7E53285353A9FFFFFFA92806067EFD04FF7E
%06002FFD05FF7E06A8FFA806A8FD25FF842F7EFFA80606A9FFFF590628FF
%FFA80053FF84007EFD08FFA87E2F53537E7DA9AFFD0DFFA87E5353285359
%A9FD05FF7E060653FD07FF7D062FFD08FFA806A9FD27FFA82859FFA82800
%28060628FFFFFF0606A8FF0628FD04FF7E5984FD05FFA8A85353282F2853
%2EFD0453595353285328532F7E7EFD07FF287E590659FD04FF7E28A9FFFF
%530653FD06FF7E06A8FD29FFA92F53FFFFA8530606FFFFFF53067DFF7D06
%7EFF7E5306060653A9FD0BFFA8A97E7E7DFD047EA9A9FD0BFFA80653FF28
%28FFFFA82F002FA9FFFFFF2F067EFD04FF7E28FD2DFF2F28FFFFFF06A9FF
%FF7E0628FFA828062F060606537DFD07FF287EFD12FFA8FFA85359FD04FF
%A90053FF8400532E06067EFD06FF0628FFFFFF5328FD2FFF5928A9FD05FF
%2F06FFFF7D002828062FFD09FFA90653FD04FFAF53A9FFA8A8FD05FF59FF
%FF2F28FF0606A8FFFFFFA8067DFFFF5300287DFD09FFA9FFA82F53FD31FF
%7E067EFFFFFF7E007EFFFF002FA9FF062FFD09FFA8007EFD04FF59067EFF
%0006A8FFFFFFA80659FF2E06FFFF0106A8FFFFA8007EFFFF7E0653FD05FF
%2F2FFD04FF53287DFD34FF2F53A8FFFF84FFFF5306A8FFFF2F28FD09FF59
%06A8FD04FF7E06FFA828062FFFFFFFA9067EFF7E06A9FFA80053FFFFA806
%7EFFFFFF2F06A8FFFF7E060653FFFFFF2F53A9FD36FF592853FFFFFFA806
%2FFFFFFF2E06A8FD08FF5306FD05FF2806FFA9062F0059FFFFA80653FF7E
%067DFFFF53007EFFA8007EFFFFFFA900537E28002FA8FFFF7E067EFD39FF
%A95328A9FFFFA8FD04FF5906FD09FF282FFD05FF2828FFA8067E5906A9FF
%A9067EFFFF0659FFFFFF2F00FFA9067EFD04FF53000628A9FFFF84532FFD
%3DFF7E2853A8FD05FF53067EFD07FFA90628FD05FF0053FFFF017EFF0628
%FFA80659FFA80628FFFFFFA80606A8067EFD04FFA82F7DFFFFA92E287DFD
%40FF592F53FD04FFA8067EFD08FF067EFD04FFA80659FFFF0653FF7E0659
%FF067EFFFF282FFD04FFA806282884FD07FFA859287EFD44FF7D2853A8FF
%FF7E7EFD07FFA9062EFD04FF7E00A8FFFF0153FFFF2806A80653FFFF5301
%FD05FF530600A9FD05FFA92F2F53FD48FF53532F7EFD0AFF2F067EFFFFAF
%062FFFFFA90653FFFFFF062F067EFFFF5906A8FD05FF535AFD04FF7E5328
%7EFD4CFF7E282F53A8FD08FF0606062F00067EFFFFFF0059FFFFFF7E0006
%53FFFF84007EFD08FF7E5328537EFD50FFA87E2F5353A8FD06FF7D532F53
%A8FD04FF0653FD04FF53007EFFFFA97EA8FD05FF7E7E2F5353FD56FFA87D
%2E2F2F597EFD0BFF7DA9FD05FFA8A8FD05FFA8A85353285353A9FD5BFFA9
%A853532853537E7DA9A8FD0DFF7E7E53532E53537D7EFD64FFA87E535328
%2F282F282F282F282F282F282F2853537E7DA8A8FD32FFFF
%%EndData
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c false def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
		pop pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade true put
userdict /_aicmykps false put
userdict /_forceToCMYK false put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Tracing Object) (\303\337\300\373) (TracingSuite.aip)
%AI8_PluginGroupInfo
(Adobe Flare Plugin) (Flare) (flare.aip)
%AI8_PluginGroupInfo
(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)
%AI8_PluginGroupInfo
(Adobe Planar Group) (Adobe \266\363\300\314\272\352 \306\344\300\316\306\256 \307\303\267\257\261\327\300\316) (Live Paint.aip)
%AI8_PluginGroupInfo
(Adobe Path Blends) (Adobe \272\355\267\273\265\345 \307\303\267\257\261\327-\300\316) (Live Blends.aip)
%AI8_PluginGroupInfo
(Adobe Symbolism) (Adobe \275\311\272\274\310\255) (Symbolism.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe \306\320\305\317 \272\352\267\257\275\254 \307\303\267\257\261\327-\300\316) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe \306\320\305\317 \272\352\267\257\275\254 \307\303\267\257\261\327-\300\316) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe \276\306\306\256 \272\352\267\257\275\254 \307\303\267\257\261\327-\300\316) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe \276\306\306\256 \272\352\267\257\275\254 \307\303\267\257\261\327-\300\316) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (Adobe \272\327\261\333\276\276 \272\352\267\257\275\254 \307\303\267\257\261\327-\300\316) (Calligraphic Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe \273\352\306\367 \272\352\267\257\275\254 \307\303\267\257\261\327-\300\316) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe \273\352\306\367 \272\352\267\257\275\254 \307\303\267\257\261\327-\300\316) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Pathfinder Suite) (\276\356\265\265\272\361 \304\304\306\304\277\356\265\345 \270\360\276\347) (PathFinder Suite.aip)
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
12 Bn
%AI5_BeginGradient: (Unnamed gradient 17)
(Unnamed gradient 17) 0 6 Bd
[
<
FEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7
D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AF
AEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887
868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F
5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837
363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F
0E0D0C0B0A09080706050403020100
>
<
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFEFE
FEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFE
FEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFD
FDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFD
FDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFC
FCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFBFBFBFB
FBFBFBFBFBFBFBFBFBFBFBFBFBFBFB
>
<
2E2E2E2E2E2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D
2D2D2D2D2D2D2D2D2D2D2D2D2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C
2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B
2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2A2A2A2A2A2A2A2A2A2A2A2A2A
2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A292929292929
29292929292929292929292929292929292929292929292929292929292929292929292929292929
292928282828282828282828282828
>
<
2B2B2B2B2A2A2A2A2A2A292929292929282828282827272727272726262626262625252525252524
24242424242323232323232222222222222121212121212020202020201F1F1F1F1F1F1E1E1E1E1E
1D1D1D1D1D1D1C1C1C1C1C1C1B1B1B1B1B1B1A1A1A1A1A1A19191919191918181818181817171717
17171616161616161515151515151414141414131313131313121212121212111111111111101010
1010100F0F0F0F0F0F0E0E0E0E0E0E0D0D0D0D0D0D0C0C0C0C0C0C0B0B0B0B0B0B0A0A0A0A0A0909
09090909080808080808070707070707060606060606050505050505040404040404030303030303
020202020202010101010101000000
>
1 %_Br
<
C3C3C4C4C4C5C5C5C5C6C6C6C7C7C7C8C8C8C8C9C9C9CACACACBCBCBCCCCCCCCCDCDCDCECECECFCF
CFD0D0D0D0D1D1D1D2D2D2D3D3D3D4D4D4D4D5D5D5D6D6D6D7D7D7D7D8D8D8D9D9D9DADADADBDBDB
DBDCDCDCDDDDDDDEDEDEDFDFDFDFE0E0E0E1E1E1E2E2E2E3E3E3E3E4E4E4E5E5E5E6E6E6E6E7E7E7
E8E8E8E9E9E9EAEAEAEAEBEBEBECECECEDEDEDEEEEEEEEEFEFEFF0F0F0F1F1F1F2F2F2F2F3F3F3F4
F4F4F5F5F5F5F6F6F6F7F7F7F8F8F8F9F9F9F9FAFAFAFBFBFBFCFCFCFDFDFDFDFEFEFE
>
<
3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364
65666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C
8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4
B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDC
DDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
3B3B3B3B3B3A3A3A3A3A3A3A3A3A3A3A3A3A3A3A3939393939393939393939393939393838383838
38383838383838383837373737373737373737373737373736363636363636363636363636363635
35353535353535353535353535343434343434343434343434343434333333333333333333333333
33333332323232323232323232323232323131313131313131313131313131313030303030303030
3030303030302F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2E2E2E2E2E2E2E2E2E2E2E2E2E2E
>
<
00010101010102020202030303030304040404050505050506060606060707070708080808080909
09090A0A0A0A0A0B0B0B0B0C0C0C0C0C0D0D0D0D0E0E0E0E0E0F0F0F0F1010101010111111111212
12121213131313131414141415151515151616161617171717171818181819191919191A1A1A1A1B
1B1B1B1B1C1C1C1C1D1D1D1D1D1E1E1E1E1F1F1F1F1F202020202021212121222222222223232323
2424242424252525252626262626272727272828282828292929292A2A2A2A2A2B2B2B
>
1 %_Br
<
DADADAD9D9D9D9D9D9D9D9D8D8D8D8D8D8D8D8D8D7D7D7D7D7D7D7D7D6D6D6D6D6D6D6D6D6D5D5D5
D5D5D5D5D5D5D4D4D4D4D4D4D4D4D3D3D3D3D3D3D3D3D3D2D2D2D2D2D2D2D2D1D1D1D1D1D1D1D1D1
D0D0D0D0D0D0D0D0D0CFCFCFCFCFCFCFCFCECECECECECECECECECDCDCDCDCDCDCDCDCDCCCCCCCCCC
CCCCCCCBCBCBCBCBCBCBCBCBCACACACACACACACAC9C9C9C9C9C9C9C9C9C8C8C8C8C8C8C8C8C8C7C7
C7C7C7C7C7C7C6C6C6C6C6C6C6C6C6C5C5C5C5C5C5C5C5C5C4C4C4C4C4C4C4C4C3C3C3C3C3
>
<
3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E
3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D
3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D
3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D
3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B
>
<
1A1A1A1A1A1A19191919191919191818181818181817171717171717171616161616161615151515
15151515141414141414141313131313131313121212121212121211111111111111101010101010
10100F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0C0C0C0C0C0C0C0C0B0B0B0B0B0B0B0A
0A0A0A0A0A0A0A090909090909090908080808080808070707070707070706060606060606050505
05050505050404040404040403030303030303030202020202020202010101010101010000
>
1 %_Br
<
1415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B
3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F60616263
6465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7F808182838485868788898A8B8C
8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4
B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DA
>
<
000001010102020203030303040404050505060606070707080808080909090A0A0A0B0B0B0C0C0C
0D0D0D0D0E0E0E0F0F0F101010111111121212131313131414141515151616161717171818181819
19191A1A1A1B1B1B1C1C1C1D1D1D1D1E1E1E1F1F1F20202021212122222223232323242424252525
262626272727282828282929292A2A2A2B2B2B2C2C2C2D2D2D2D2E2E2E2F2F2F3030303131313232
3232333333343434353535363636373737383838383939393A3A3A3B3B3B3C3C3C3D3D3D3D3E
>
<
EDEDEEEEEEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F0F0F0F1F1F1F1
F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F4F4
F5F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8
F8F8F8F8F8F9F9F9F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFBFBFCFC
FCFCFCFCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFFFFFFFFFFFF
>
<
00000000010101010101010102020202020202030303030303030304040404040404050505050505
05050606060606060607070707070707070808080808080809090909090909090A0A0A0A0A0A0A0B
0B0B0B0B0B0B0B0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F101010
10101010111111111111111112121212121212131313131313131314141414141414151515151515
15151616161616161616171717171717171818181818181818191919191919191A1A1A1A1A1A
>
1 %_Br
<
00000000000000010101010101010101010101020202020202020202020202020303030303030303
03030303040404040404040404040404040505050505050505050505050606060606060606060606
06060707070707070707070707070708080808080808080808080809090909090909090909090909
0A0A0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0C0C0D0D0D
0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F0F0F0F0F1010101010
10101010101010101111111111111111111111111212121212121212121212121213131313131313
131313131314141414141414141414
>
<
FEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7
D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AF
AEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887
868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F
5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837
363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F
0E0D0C0B0A09080706050403020100
>
<
FFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFCFC
FCFCFCFCFCFCFCFCFCFCFCFBFBFBFBFBFBFBFBFBFBFBFBFBFBFAFAFAFAFAFAFAFAFAFAFAFAFAFAFA
F9F9F9F9F9F9F9F9F9F9F9F9F9F9F8F8F8F8F8F8F8F8F8F8F8F8F8F8F7F7F7F7F7F7F7F7F7F7F7F7
F7F7F7F6F6F6F6F6F6F6F6F6F6F6F6F6F6F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F4F4F4F4F4F4F4F4
F4F4F4F4F4F4F3F3F3F3F3F3F3F3F3F3F3F3F3F3F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F1F1F1F1F1
F1F1F1F1F1F1F1F1F1F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0EFEFEFEFEFEFEFEFEFEFEFEFEFEFEEEE
EEEEEEEEEEEEEEEEEEEEEEEEEDEDED
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000
>
1 %_Br
[
0.000031 0.985199 0.157778 0.000031 1 50 100 %_BS
%_0.000031 0.985199 0.157778 0.000031 1 50 100 Bs
0.997467 1 0.178775 0.168856 1 50 80 %_BS
%_0.997467 1 0.178775 0.168856 1 50 80 Bs
0.764675 0.238682 0.230686 0.001251 1 50 60 %_BS
%_0.764675 0.238682 0.230686 0.001251 1 50 60 Bs
0.85388 0.242313 1 0.102846 1 50 40 %_BS
%_0.85388 0.242313 1 0.102846 1 50 40 Bs
0.079316 0.000031 0.930816 0.000031 1 50 20 %_BS
%_0.079316 0.000031 0.930816 0.000031 1 50 20 Bs
0.000031 0.99472 1 0.001282 1 50 0 %_BS
%_0.000031 0.99472 1 0.001282 1 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 18)
(Unnamed gradient 18) 1 6 Bd
[
<
00000000000000010101010101010101010101020202020202020202020202020303030303030303
03030303040404040404040404040404040505050505050505050505050606060606060606060606
06060707070707070707070707070708080808080808080808080809090909090909090909090909
0A0A0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0C0C0D0D0D
0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F0F0F0F0F1010101010
10101010101010101111111111111111111111111212121212121212121212121213131313131313
131313131314141414141414141414
>
<
FEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7
D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AF
AEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887
868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F
5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837
363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F
0E0D0C0B0A09080706050403020100
>
<
FFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFCFC
FCFCFCFCFCFCFCFCFCFCFCFBFBFBFBFBFBFBFBFBFBFBFBFBFBFAFAFAFAFAFAFAFAFAFAFAFAFAFAFA
F9F9F9F9F9F9F9F9F9F9F9F9F9F9F8F8F8F8F8F8F8F8F8F8F8F8F8F8F7F7F7F7F7F7F7F7F7F7F7F7
F7F7F7F6F6F6F6F6F6F6F6F6F6F6F6F6F6F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F4F4F4F4F4F4F4F4
F4F4F4F4F4F4F3F3F3F3F3F3F3F3F3F3F3F3F3F3F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F1F1F1F1F1
F1F1F1F1F1F1F1F1F1F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0EFEFEFEFEFEFEFEFEFEFEFEFEFEFEEEE
EEEEEEEEEEEEEEEEEEEEEEEEEDEDED
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000
>
1 %_Br
<
1415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B
3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F60616263
6465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7F808182838485868788898A8B8C
8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4
B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DA
>
<
000001010102020203030303040404050505060606070707080808080909090A0A0A0B0B0B0C0C0C
0D0D0D0D0E0E0E0F0F0F101010111111121212131313131414141515151616161717171818181819
19191A1A1A1B1B1B1C1C1C1D1D1D1D1E1E1E1F1F1F20202021212122222223232323242424252525
262626272727282828282929292A2A2A2B2B2B2C2C2C2D2D2D2D2E2E2E2F2F2F3030303131313232
3232333333343434353535363636373737383838383939393A3A3A3B3B3B3C3C3C3D3D3D3D3E
>
<
EDEDEEEEEEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F0F0F0F1F1F1F1
F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F4F4
F5F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8
F8F8F8F8F8F9F9F9F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFBFBFCFC
FCFCFCFCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFFFFFFFFFFFF
>
<
00000000010101010101010102020202020202030303030303030304040404040404050505050505
05050606060606060607070707070707070808080808080809090909090909090A0A0A0A0A0A0A0B
0B0B0B0B0B0B0B0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F101010
10101010111111111111111112121212121212131313131313131314141414141414151515151515
15151616161616161616171717171717171818181818181818191919191919191A1A1A1A1A1A
>
1 %_Br
<
DADADAD9D9D9D9D9D9D9D9D8D8D8D8D8D8D8D8D8D7D7D7D7D7D7D7D7D6D6D6D6D6D6D6D6D6D5D5D5
D5D5D5D5D5D5D4D4D4D4D4D4D4D4D3D3D3D3D3D3D3D3D3D2D2D2D2D2D2D2D2D1D1D1D1D1D1D1D1D1
D0D0D0D0D0D0D0D0D0CFCFCFCFCFCFCFCFCECECECECECECECECECDCDCDCDCDCDCDCDCDCCCCCCCCCC
CCCCCCCBCBCBCBCBCBCBCBCBCACACACACACACACAC9C9C9C9C9C9C9C9C9C8C8C8C8C8C8C8C8C8C7C7
C7C7C7C7C7C7C6C6C6C6C6C6C6C6C6C5C5C5C5C5C5C5C5C5C4C4C4C4C4C4C4C4C3C3C3C3C3
>
<
3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E
3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D
3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D
3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D
3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B
>
<
1A1A1A1A1A1A19191919191919191818181818181817171717171717171616161616161615151515
15151515141414141414141313131313131313121212121212121211111111111111101010101010
10100F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0C0C0C0C0C0C0C0C0B0B0B0B0B0B0B0A
0A0A0A0A0A0A0A090909090909090908080808080808070707070707070706060606060606050505
05050505050404040404040403030303030303030202020202020202010101010101010000
>
1 %_Br
<
C3C3C4C4C4C5C5C5C5C6C6C6C7C7C7C8C8C8C8C9C9C9CACACACBCBCBCCCCCCCCCDCDCDCECECECFCF
CFD0D0D0D0D1D1D1D2D2D2D3D3D3D4D4D4D4D5D5D5D6D6D6D7D7D7D7D8D8D8D9D9D9DADADADBDBDB
DBDCDCDCDDDDDDDEDEDEDFDFDFDFE0E0E0E1E1E1E2E2E2E3E3E3E3E4E4E4E5E5E5E6E6E6E6E7E7E7
E8E8E8E9E9E9EAEAEAEAEBEBEBECECECEDEDEDEEEEEEEEEFEFEFF0F0F0F1F1F1F2F2F2F2F3F3F3F4
F4F4F5F5F5F5F6F6F6F7F7F7F8F8F8F9F9F9F9FAFAFAFBFBFBFCFCFCFDFDFDFDFEFEFE
>
<
3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364
65666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C
8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4
B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDC
DDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
3B3B3B3B3B3A3A3A3A3A3A3A3A3A3A3A3A3A3A3A3939393939393939393939393939393838383838
38383838383838383837373737373737373737373737373736363636363636363636363636363635
35353535353535353535353535343434343434343434343434343434333333333333333333333333
33333332323232323232323232323232323131313131313131313131313131313030303030303030
3030303030302F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2E2E2E2E2E2E2E2E2E2E2E2E2E2E
>
<
00010101010102020202030303030304040404050505050506060606060707070708080808080909
09090A0A0A0A0A0B0B0B0B0C0C0C0C0C0D0D0D0D0E0E0E0E0E0F0F0F0F1010101010111111111212
12121213131313131414141415151515151616161617171717171818181819191919191A1A1A1A1B
1B1B1B1B1C1C1C1C1D1D1D1D1D1E1E1E1E1F1F1F1F1F202020202021212121222222222223232323
2424242424252525252626262626272727272828282828292929292A2A2A2A2A2B2B2B
>
1 %_Br
<
FEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7
D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AF
AEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887
868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F
5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837
363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F
0E0D0C0B0A09080706050403020100
>
<
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFEFE
FEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFE
FEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFD
FDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFD
FDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFC
FCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFBFBFBFB
FBFBFBFBFBFBFBFBFBFBFBFBFBFBFB
>
<
2E2E2E2E2E2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D
2D2D2D2D2D2D2D2D2D2D2D2D2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C
2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B
2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2A2A2A2A2A2A2A2A2A2A2A2A2A
2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A292929292929
29292929292929292929292929292929292929292929292929292929292929292929292929292929
292928282828282828282828282828
>
<
2B2B2B2B2A2A2A2A2A2A292929292929282828282827272727272726262626262625252525252524
24242424242323232323232222222222222121212121212020202020201F1F1F1F1F1F1E1E1E1E1E
1D1D1D1D1D1D1C1C1C1C1C1C1B1B1B1B1B1B1A1A1A1A1A1A19191919191918181818181817171717
17171616161616161515151515151414141414131313131313121212121212111111111111101010
1010100F0F0F0F0F0F0E0E0E0E0E0E0D0D0D0D0D0D0C0C0C0C0C0C0B0B0B0B0B0B0A0A0A0A0A0909
09090909080808080808070707070707060606060606050505050505040404040404030303030303
020202020202010101010101000000
>
1 %_Br
[
0.000031 0.99472 1 0.001282 1 50 0 %_BS
%_0.000031 0.99472 1 0.001282 1 50 0 Bs
0.079316 0.000031 0.930816 0.000031 1 50 20 %_BS
%_0.079316 0.000031 0.930816 0.000031 1 50 20 Bs
0.85388 0.242313 1 0.102846 1 50 40 %_BS
%_0.85388 0.242313 1 0.102846 1 50 40 Bs
0.764675 0.238682 0.230686 0.001251 1 50 60 %_BS
%_0.764675 0.238682 0.230686 0.001251 1 50 60 Bs
0.997467 1 0.178775 0.168856 1 50 80 %_BS
%_0.997467 1 0.178775 0.168856 1 50 80 Bs
0.000031 0.985199 0.157778 0.000031 1 50 100 %_BS
%_0.000031 0.985199 0.157778 0.000031 1 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 20)
(Unnamed gradient 20) 0 2 Bd
[
<
0001020303040506070708090A0B0C0C0D0E0F1011111213141516161718191A1B1B1C1D1E1F2020
212223242525262728292A2A2B2C2D2E2F2F3031323334343536373839393A3B3C3D3E3E3F404142
4343444546474848494A4B4C4D4D4E4F5051525253545556575758595A5B5B5C5D5E5F6060616263
646565666768696A6A6B6C6D6E6F6F7071727374747576777879797A7B7C7D7E7E7F808182838384
8586878888898A8B8C8D8D8E8F9091929293949596979798999A9B9C9C9D9E9FA0A1A1A2A3A4A5A6
A6A7A8A9AAABABACADAEAFB0B0B1B2B3B4B4B5B6B7B8B9B9BABBBCBDBEBEBF
>
<
000102020304050506070808090A0B0B0C0D0E0E0F101111121314141516171718191A1A1B1C1D1D
1E1F20202122232324252626272829292A2B2C2C2D2E2F2F303132323334353636373839393A3B3C
3C3D3E3F3F404142424344454546474848494A4B4B4C4D4E4E4F505151525354545556575758595A
5A5B5C5D5D5E5F606061626363646566666768696A6A6B6C6D6D6E6F707071727373747576767778
79797A7B7C7C7D7E7F7F808182828384858586878888898A8B8B8C8D8E8E8F909191929394949596
979798999A9A9B9C9D9D9E9FA0A1A1A2A3A4A4A5A6A7A7A8A9AAAAABACADAD
>
<
000101020304040506070708090A0A0B0C0D0D0E0F10101112131314151616171819191A1B1C1C1D
1E1E1F202121222324242526272728292A2A2B2C2D2D2E2F30303132333334353636373838393A3B
3B3C3D3E3E3F404141424344444546474748494A4A4B4C4D4D4E4F50505152525354555556575858
595A5B5B5C5D5E5E5F606161626364646566676768696A6A6B6C6C6D6E6F6F707172727374757576
777878797A7B7B7C7D7E7E7F80818182838484858686878889898A8B8C8C8D8E8F8F909192929394
959596979898999A9B9B9C9D9E9E9FA0A1A1A2A3A3A4A5A6A6A7A8A9A9AAAB
>
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6
>
1 %_Br
[
0.75021 0.679683 0.670222 0.90164 1 50 100 %_BS
%_0.75021 0.679683 0.670222 0.90164 1 50 100 Bs
0.000031 0.000031 0.000031 0.000031 1 50 0 %_BS
%_0.000031 0.000031 0.000031 0.000031 1 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 21)
(Unnamed gradient 21) 0 5 Bd
[
<
04050505050505050505050505060606060606060606060606070707070707070707070707070808
080808080808080808080809090909090909090909090909090A0A0A0A0A0A0A0A0A0A0A0A0A0A0B
0B0B0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0D0D0D
0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F
0F0F0F10101010101010101010101010101010101010101010111111111111111111111111111111
11111111111111111111111212121212121212121212121212121212121212121212121212121212
1212121212121212121213131313131313131313131313131313
>
<
E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCDCCCBCAC9C8C7C6C5C4C3C2C1C0BF
BFBEBDBCBBBAB9B8B7B6B6B5B4B3B2B1B0AFAFAEADACABAAA9A8A8A7A6A5A4A3A3A2A1A09F9E9E9D
9C9B9A9A9998979696959493929291908F8F8E8D8C8B8B8A89888887868585848383828180807F7E
7E7D7C7B7B7A7979787777767575747373727171706F6F6E6D6D6C6B6B6A6A696868676766656564
64636262616160605F5E5E5D5D5C5C5B5B5A5A59595857575656555554545353535252515150504F
4F4E4E4E4D4D4C4C4B4B4B4A4A494949484848474746464645454544444443434343424242414141
41404040403F3F3F3F3F3E3E3E3E3E3E3D3D3D3D3D3D3D3D3D3D
>
<
FFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFD
FDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFC
FCFCFCFCFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFAFAFAFAFAFAFAFA
FAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAF9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9
F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8
F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F7F7F7F7F7F7F7
F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000
>
1 %_Br
<
14141414141414141414141313131313131313131313131313131212121212121212121212121212
11111111111111111111111111111110101010101010101010101010100F0F0F0F0F0F0F0F0F0F0F
0F0F0F0F0E0E0E0E0E0E0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0C0C0C0C0C0C0C
0C0C0C0C0C0C0C0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0A0A0A0A0A0A0A0A0A0A0A0A0A0A09090909
09090909090909090909090808080808080808080808080808070707070707070707070707070707
060606060606060606060606060605050505050505050505050505050504
>
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5
>
<
EDEDEEEEEEEEEEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F0F0F0
F0F1F1F1F1F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F3F3F3F3F3F3
F4F4F4F4F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F6F6F6F6F7
F7F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8F8F8F8F8F8F9F9F9F9F9F9F9F9F9F9F9F9F9FAFA
FAFAFAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFBFBFBFBFCFCFCFCFCFCFCFCFCFCFCFCFCFDFDFD
FDFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFEFEFFFFFFFFFFFFFF
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
>
1 %_Br
<
1F1F1F1F1F1F1F1F1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1D1D1D1D1D1D1D1D1D1D1D
1D1D1D1D1D1D1D1D1D1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1B1B1B1B1B1B1B1B1B1B
1B1B1B1B1B1B1B1B1B1B1B1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A191919191919191919
19191919191919191919191918181818181818181818181818181818181818181717171717171717
17171717171717171717171717161616161616161616161616161616161616161615151515151515
1515151515151515151515151515141414141414
>
<
848382828181807F7F7E7E7D7C7C7B7B7A79797878777676757574737372727170706F6F6E6D6D6C
6C6B6A6A69696867676666656464636362616160605F5E5E5D5D5C5B5B5A5A595858575756555554
545352525151504F4F4E4E4D4C4C4B4B4A49494848474646454544434342424140403F3E3E3D3D3C
3B3B3A3A393838373736353534343332323131302F2F2E2E2D2C2C2B2B2A29292828272626252524
232322222120201F1F1E1D1D1C1C1B1A1A19191817171616151414131312111110100F0E0E0D0D0C
0B0B0A0A09080807070605050404030202010100
>
<
131415161718191A1B1B1C1D1E1F202122232425262728292A2B2C2D2E2F30313233343536373839
3A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061
62636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F80818283848586878889
8A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1
B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9
DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECED
>
0.000031
1 %_Br
<
C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A99
98979694939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A79787776757473727170
6F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A4948
47464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A29282726252423222120
1F
>
<
2E2F303031313232333334343535363637383839393A3A3B3B3C3C3D3D3E3E3F3F40414142424343
44444545464647474849494A4A4B4B4C4C4D4D4E4E4F4F5051515252535354545555565657575859
595A5A5B5B5C5C5D5D5E5E5F5F6060616262636364646565666667676868696A6A6B6B6C6C6D6D6E
6E6F6F707071727273737474757576767777787879797A7B7B7C7C7D7D7E7E7F7F80808181828383
84
>
<
424141414040403F3F3F3F3E3E3E3D3D3D3D3C3C3C3B3B3B3A3A3A3A393939383838383737373636
363535353534343433333333323232313131303030302F2F2F2E2E2E2E2D2D2D2C2C2C2B2B2B2B2A
2A2A292929292828282727272626262625252524242424232323222222212121212020201F1F1F1F
1E1E1E1D1D1D1C1C1C1C1B1B1B1A1A1A1A1919191818181817171716161615151515141414131313
13
>
0.000031
1 %_Br
[
0.073152 0.237522 0.969482 0.000031 1 50 100 %_BS
%_0.073152 0.237522 0.969482 0.000031 1 50 100 Bs
0.017517 0.897581 1 0.001343 1 35.5263 79.7753 %_BS
%_0.017517 0.897581 1 0.001343 1 35.5263 79.7753 Bs
0.079316 0.000031 0.930816 0.000031 1 50 55.618 %_BS
%_0.079316 0.000031 0.930816 0.000031 1 50 55.618 Bs
0.121096 0.516075 0.072572 0.000031 1 50 44.9438 %_BS
%_0.121096 0.516075 0.072572 0.000031 1 50 44.9438 Bs
0.751858 0.182254 0.256992 0.000031 1 50 19.1011 %_BS
%_0.751858 0.182254 0.256992 0.000031 1 50 19.1011 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 396)
(Unnamed gradient 396) 1 2 Bd
[
0.000031
0.000031
0.000031
0.000031
1 %_Br
[
0.000031 0.000031 0.000031 0.000031 1 87 44.4444 %_BS
%_0.000031 0.000031 0.000031 0.000031 1 87 44.4444 Bs
0.000031 0.000031 0.000031 0.000031 1 50 100 %_BS
%_0.000031 0.000031 0.000031 0.000031 1 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 72)
(Unnamed gradient 72) 0 2 Bd
[
<
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCDCDCDCDCDCDCDCDCDCDCDCDCDCDCD
CDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCD
CDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCECECECECECECECECECE
CECE
>
<
09090A0B0C0C0D0E0E0F10111112131414151617171819191A1B1C1C1D1E1F1F2021222223242425
26272728292A2A2B2C2D2D2E2F2F303132323334353536373838393A3A3B3C3D3D3E3F4040414242
4344454546474848494A4B4B4C4D4D4E4F50505152535354555656575858595A5B5B5C5D5E5E5F60
616162636364656666676869696A6B6C6C6D6E6E6F70717172737474757677777879797A7B7C7C7D
7E7F
>
<
FFFFFFFFFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFBFBFBFBFBFBFBFAFAFAFAFAFAFA
FAF9F9F9F9F9F9F9F8F8F8F8F8F8F8F7F7F7F7F7F7F7F7F6F6F6F6F6F6F6F5F5F5F5F5F5F5F4F4F4
F4F4F4F4F4F3F3F3F3F3F3F3F2F2F2F2F2F2F2F1F1F1F1F1F1F1F0F0F0F0F0F0F0F0EFEFEFEFEFEF
EFEEEEEEEEEEEEEEEDEDEDEDEDEDEDEDECECECECECECECEBEBEBEBEBEBEBEAEAEAEAEAEAEAEAE9E9
E9E9
>
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F4041424344454647494A4B4C4D4E4F50
5152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778
797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0
A1A2
>
1 %_Br
[
0.806394 0.496437 0.913573 0.634302 1 50 98.3146 %_BS
%_0.806394 0.496437 0.913573 0.634302 1 50 98.3146 Bs
0.798978 0.033753 1 0.00119 1 50 0 %_BS
%_0.798978 0.033753 1 0.00119 1 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (\660\713\701\644\673\766\700\670\667\716 \710\761\671\714\707\717\660\724 \707\717\661\742)
(\660\713\701\644\673\766\700\670\667\716 \710\761\671\714\707\717\660\724 \707\717\661\742) 0 2 Bd
[
0
0 %_Br
[
0 0 0 1 1 50 100 %_BS
%_0 0 0 1 1 50 100 Bs
0 0 0 1 1 50 0 %_BS
%_0 0 0 1 1 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (\661\670\670\656\673\766 \671\746\673\747\707\774)
(\661\670\670\656\673\766 \671\746\673\747\707\774) 1 4 Bd
[
0
<
0A0B0B0C0D0D0E0F0F1011111212131414151616171818191A1A1B1C1C1D1E1E1F20202122222324
24252627272829292A2B2B2C2D2D2E2F2F303131323333343536
>
<
242525262728292A2B2C2D2E2F303132333435363738393A3B3C3D3D3E3F40414243444546474849
4A4B4C4D4E4F505152535455565758595A5B5C5D5E5F60616263
>
<
0001010202030404050606070808090A0A0B0C0C0D0E0E0F1010111212131414151616171818191A
1A1B1C1C1D1E1E1F2020212222232424252627272829292A2B2B
>
1 %_Br
<
00010102020303040405060607070808090A0A0B0B0C0C0D0E0E0F0F101111121213131415151616
17181819191A1B1B1C1C1D1E1E1F1F202121222223242425252627272828292A2A2B2B2C2D2D2E2E
2F30303131323333343435363637383839393A3B3B3C3C3D3E3E3F3F404141424343444445464647
474849494A4A4B4C4C4D4E4E4F4F50515152525354545556565757585959
>
<
3636373839393A3B3C3D3D3E3F4041424243444546464748494A4B4B4C4D4E4F5051515253545556
565758595A5B5C5C5D5E5F6061626263646566676868696A6B6C6D6E6E6F70717273747475767778
797A7A7B7C7D7E7F8081818283848586878788898A8B8C8D8E8E8F90919293949595969798999A9B
9C9C9D9E9FA0A1A2A3A3A4A5A6A7A8A9AAAAABACADAEAFB0B1B2B2B3B4B5
>
<
636465666768696A6B6C6C6D6E6F707172737475767778797A7B7C7C7D7E7F808182838485868788
898A8B8C8D8E8F90919293949596979898999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAF
B0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7
D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5
>
<
2B2B2C2C2C2C2C2C2C2C2C2D2D2D2D2D2D2D2D2D2E2E2E2E2E2E2E2E2F2F2F2F2F2F2F2F2F303030
30303030303131313131313131323232323232323232333333333333333334343434343434343535
3535353535353536363636363636363737373737373737383838383838383839393939393939393A
3A3A3A3A3A3A3A3A3B3B3B3B3B3B3B3B3C3C3C3C3C3C3C3C3D3D3D3D3D3D
>
1 %_Br
<
595A5A5A5A5B5B5B5B5C5C5C5C5D5D5D5D5E5E5E5E5F5F5F5F606060606161616162626262636363
636464646465656565666666666767676768686868696969696A6A6A6A6B6B6B6B6C6C6C6C6D6D6D
6D6E
>
<
B5B6B6B7B8B8B9BABABBBCBCBDBEBEBFC0C0C1C2C2C3C4C4C5C6C6C7C8C8C9CACACBCCCCCDCECECF
CFD0D1D1D2D3D3D4D5D5D6D7D7D8D9D9DADBDBDCDDDDDEDFDFE0E1E1E2E3E3E4E5E5E6E7E7E8E9E9
EAEB
>
<
F5F5F4F4F4F4F3F3F3F3F2F2F2F2F1F1F1F1F0F0F0F0EFEFEFEFEEEEEEEDEDEDEDECECECECEBEBEB
EBEAEAEAEAE9E9E9E9E8E8E8E8E7E7E7E7E6E6E6E6E5E5E5E5E4E4E4E4E3E3E3E3E2E2E2E2E1E1E1
E1E0
>
<
3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364
656768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D
8E8F
>
1 %_Br
[
0 0.04 0.14 0 1 51.0204 0.395812 %_BS
%_0 0.04 0.14 0 1 51.0204 0.395812 Bs
0 0.21 0.39 0.17 1 51.0204 30.8989 %_BS
%_0 0.21 0.39 0.17 1 51.0204 30.8989 Bs
0.35 0.71 0.96 0.24 1 50 78.0899 %_BS
%_0.35 0.71 0.96 0.24 1 50 78.0899 Bs
0.43 0.92 0.88 0.56 1 50 100 %_BS
%_0.43 0.92 0.88 0.56 1 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (\671\746\673\747\707\774 \661\727\666\763\665\760\676\760\706\656)
(\671\746\673\747\707\774 \661\727\666\763\665\760\676\760\706\656) 1 2 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
[
0 0 0 0 1 50 0 %_BS
%_0 0 0 0 1 50 0 Bs
0 0 0 1 1 50 100 %_BS
%_0 0 0 1 1 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (\673\747\670\667\700\707 \700\717\670\764)
(\673\747\670\667\700\707 \700\717\670\764) 0 6 Bd
[
<
38393A3A3B3C3D3E3E3F404141424344444546474748494A4A4B4C4C4D4E4F4F5051515253535455
555657575859595A5B5B5C5D5D5E5F5F60616162626364646565666767686869696A6B6B6C6C6D6D
6E6E6F6F7070717172727373747475757676777778787879797A7A7B7B7B7C7C7C7D7D7E7E7E7E7F
7F7F80808080818181818282828282
>
<
5758595A5B5C5D5E5F60616263636465666768696A6B6C6D6E6F70717272737475767778797A7A7B
7C7D7E7F808081828384858586878889898A8B8C8D8D8E8F90909192939394959696979899999A9B
9B9C9D9D9E9F9FA0A1A1A2A2A3A4A4A5A5A6A7A7A8A8A9A9AAAAABABACACADADAEAEAFAFB0B0B1B1
B1B2B2B2B3B3B3B4B4B4B4B5B5B5B5
>
<
2E2E2F2F2F3030303131313232323333333434343535353636363737373838383939393A3A3A3A3B
3B3B3C3C3C3D3D3D3D3E3E3E3F3F3F3F404040414141414242424243434344444444454545454646
464646474747474848484849494949494A4A4A4A4A4B4B4B4B4B4C4C4C4C4C4C4D4D4D4D4D4D4D4E
4E4E4E4E4E4E4E4F4F4F4F4F4F4F4F
>
0
1 %_Br
<
1F1F202122222324242526272728292A2A2B2C2C2D2E2F2F303132323334343536373738
>
<
4040414242434444454646474848494A4A4B4C4C4D4E4E4F4F5051515253535455555657
>
<
5251504F4E4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E
>
0
1 %_Br
<
050606070808090A0A0B0B0C0D0D0E0F0F101111121213141415151617171818191A1A1B1B1C1C1D
1E1E1F
>
<
2B2C2C2D2D2E2E2F2F30303131323233333434353536363737383839393A3A3B3B3C3C3D3D3E3E3F
3F3F40
>
<
7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5B5A595857565554
535252
>
0
1 %_Br
<
00000000000000000001010101010101010101010101010101010202020202020202020202020202
02020303030303030303030303030303030304040404040404040404040404040405050505050505
050505
>
<
7A7A79787776757474737271706F6E6D6C6B6A69686766666564636261605F5E5D5C5B5A59585756
5554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E
2D2C2B
>
<
9E9E9D9D9D9C9C9B9B9B9A9A99999998989797969696959594949393939292919190908F8F8F8E8E
8D8D8C8C8C8B8B8A8A898988888887878686858584848383838282818180807F7F7E7E7E7D7D7C7C
7B7B7A
>
<
03030202020202020202020202020202020202020202020202020202020202020202020201010101
01010101010101010101010101010101010101010101010101010100000000000000000000000000
000000
>
1 %_Br
<
05050505050505050404040404040404040404030303030303030303030303020202020202020202
020202010101010101010101010101000000000000
>
<
91919190908F8F8F8E8E8E8D8D8C8C8C8B8B8A8A8A89898988888787878686858585848484838382
828281818180807F7F7F7E7E7D7D7D7C7C7C7B7B7A
>
<
DBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4
B3B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E
>
<
2928282726262524242322222121201F1F1E1D1D1C1B1B1A19191818171616151414131212111110
0F0F0E0D0D0C0B0B0A0A0908080706060504040303
>
1 %_Br
[
0.51 0.71 0.31 0 1 50 100 %_BS
%_0.51 0.71 0.31 0 1 50 100 Bs
0.22 0.34 0.18 0 1 38.4615 71.0424 %_BS
%_0.22 0.34 0.18 0 1 38.4615 71.0424 Bs
0.12 0.25 0.32 0 1 50 53.6679 %_BS
%_0.12 0.25 0.32 0 1 50 53.6679 Bs
0.02 0.17 0.48 0 1 48 38.764 %_BS
%_0.02 0.17 0.48 0 1 48 38.764 Bs
0.000031 0.48 0.62 0.01 1 51.6129 13.1273 %_BS
%_0.000031 0.48 0.62 0.01 1 51.6129 13.1273 Bs
0.02 0.57 0.86 0.16 1 50 0 %_BS
%_0.02 0.57 0.86 0.16 1 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (\674\661\707\774 \661\727\666\763\665\760\676\760\706\656)
(\674\661\707\774 \661\727\666\763\665\760\676\760\706\656) 0 2 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
[
0 0 0 1 1 50 100 %_BS
%_0 0 0 1 1 50 100 Bs
0 0 0 0 1 50 0 %_BS
%_0 0 0 0 1 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (\677\666\700\672 \660\713\701\644\673\766 \672\761\663\727\706\703)
(\677\666\700\672 \660\713\701\644\673\766 \672\761\663\727\706\703) 1 3 Bd
[
0.2
0.2
0.2
1
1 %_Br
0.2
0.2
0.2
1
1 %_Br
[
0.2 0.2 0.2 1 1 68.3944 73.8792 %_BS
%_0.2 0.2 0.2 1 1 68.3944 73.8792 Bs
0.2 0.2 0.2 1 1 31.8603 88.7329 %_BS
%_0.2 0.2 0.2 1 1 31.8603 88.7329 Bs
0.2 0.2 0.2 1 1 50 100 %_BS
%_0.2 0.2 0.2 1 1 50 100 Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI3_BeginPattern: (\671\660\660\755\661\742 \706\720\705\717)
(\671\660\660\755\661\742 \706\720\705\717) 77.5215 31.4824 155.3037 96.7959 [
%AI3_Tile
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.6924 38.085 m
26.7441 24.5742 7.7324 50.1514 v
7.7324 0.7559 l
26.7441 26.334 48.6924 12.8223 y
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.6924 38.085 m
26.7441 24.5742 7.7324 50.1514 v
7.7324 0.7559 l
26.7441 26.334 48.6924 12.8223 y
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.4736 38.085 m
104.5264 24.5742 85.5137 50.1514 v
85.5137 0.7559 l
104.5264 26.334 126.4736 12.8223 y
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.4736 38.085 m
104.5264 24.5742 85.5137 50.1514 v
85.5137 0.7559 l
104.5264 26.334 126.4736 12.8223 y
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.01 1 1 0 k
 0.01 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
122.4521 70.7412 m
144.4004 57.2314 163.4121 82.8076 v
163.4121 33.4131 l
144.4004 58.9902 122.4521 45.4785 y
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
122.4521 70.7412 m
144.4004 57.2314 163.4121 82.8076 v
163.4121 33.4131 l
144.4004 58.9902 122.4521 45.4785 y
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.7764 78.6689 m
122.4805 70.8115 l
144.4277 57.3008 163.4404 82.8779 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.7764 78.6689 m
122.4805 70.8115 l
144.4277 57.3008 163.4404 82.8779 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.4736 103.3984 m
104.5264 89.8877 85.5137 115.4648 v
85.5137 66.0693 l
104.5264 91.6475 126.4736 78.1357 y
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.4736 103.3984 m
104.5264 89.8877 85.5137 115.4648 v
85.5137 66.0693 l
104.5264 91.6475 126.4736 78.1357 y
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.7764 102.8643 m
122.4805 110.7227 l
144.4277 124.2334 163.4404 98.6563 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.7764 102.8643 m
122.4805 110.7227 l
144.4277 124.2334 163.4404 98.6563 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.01 1 1 0 k
 0.01 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
164.7207 98.3916 m
158.3359 102.5957 153.498 106.7451 141.2617 106.7451 c
121.0918 106.7451 123.8242 93.9854 103.6523 93.9854 C
99.5859 94.7793 99.5859 90.6816 v
99.5859 86.9863 103.6016 87.5869 Y
123.7754 87.5869 121.0439 74.8252 141.2168 74.8252 c
151.6201 74.8252 160.1045 79.6699 163.8457 82.3398 c
164.7344 82.9736 165.3613 83.4873 165.6768 83.7822 c
165.7119 83.8154 165.7529 83.8525 165.79 83.8867 c
167.4775 85.4463 170.8945 88.2871 170.8945 90.7666 c
170.8945 93.6357 164.7207 98.3916 Y
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
164.7207 98.3916 m
158.3359 102.5957 153.498 106.7451 141.2617 106.7451 c
121.0918 106.7451 123.8242 93.9854 103.6523 93.9854 C
99.5859 94.7793 99.5859 90.6816 v
99.5859 86.9863 103.6016 87.5869 Y
123.7754 87.5869 121.0439 74.8252 141.2168 74.8252 c
151.6201 74.8252 160.1045 79.6699 163.8457 82.3398 c
164.7344 82.9736 165.3613 83.4873 165.6768 83.7822 c
165.7119 83.8154 165.7529 83.8525 165.79 83.8867 c
167.4775 85.4463 170.8945 88.2871 170.8945 90.7666 c
170.8945 93.6357 164.7207 98.3916 Y
s
%AI6_EndPatternLayer
) &
(0 O 0 R 1 0.89 0.01 0 k
 1 0.89 0.01 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
157.2695 96.7959 m
157.2695 95.71 156.3896 94.8291 155.3027 94.8291 c
154.2168 94.8291 153.3369 95.71 153.3369 96.7959 c
153.3369 97.8828 154.2168 98.7637 155.3027 98.7637 c
156.3896 98.7637 157.2695 97.8828 157.2695 96.7959 c
f
142.3477 90.6719 m
142.3477 96.1738 146.54 100.6943 151.9033 101.2197 C
151.5596 101.2529 151.2109 101.2715 150.8584 101.2715 c
145.0039 101.2715 140.2588 96.5264 140.2588 90.6719 c
140.2588 84.8184 145.0039 80.0723 150.8584 80.0723 c
151.2109 80.0723 151.5596 80.0918 151.9033 80.125 C
146.54 80.6494 142.3477 85.1709 142.3477 90.6719 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.9941 78.6689 m
44.6982 70.8115 l
66.6465 57.3008 85.6582 82.8779 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.9941 78.6689 m
44.6982 70.8115 l
66.6465 57.3008 85.6582 82.8779 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.01 1 1 0 k
 0.01 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
44.6699 70.7412 m
66.6182 57.2314 85.6299 82.8076 v
85.6299 33.4131 l
66.6182 58.9902 44.6699 45.4785 y
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
44.6699 70.7412 m
66.6182 57.2314 85.6299 82.8076 v
85.6299 33.4131 l
66.6182 58.9902 44.6699 45.4785 y
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.6924 103.3984 m
26.7441 89.8877 7.7324 115.4648 v
7.7324 66.0693 l
26.7441 91.6475 48.6924 78.1357 y
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.6924 103.3984 m
26.7441 89.8877 7.7324 115.4648 v
7.7324 66.0693 l
26.7441 91.6475 48.6924 78.1357 y
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.9941 102.8643 m
44.6982 110.7227 l
66.6465 124.2334 85.6582 98.6563 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.9941 102.8643 m
44.6982 110.7227 l
66.6465 124.2334 85.6582 98.6563 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.01 1 1 0 k
 0.01 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
86.9395 98.3916 m
80.5547 102.5957 75.7168 106.7451 63.4805 106.7451 c
43.3105 106.7451 46.042 93.9854 25.8701 93.9854 C
21.8037 94.7793 21.8037 90.6816 v
21.8037 86.9863 25.8193 87.5869 Y
45.9932 87.5869 43.2617 74.8252 63.4355 74.8252 c
73.8389 74.8252 82.3223 79.6699 86.0645 82.3398 c
86.9521 82.9736 87.5791 83.4873 87.8945 83.7822 c
87.9307 83.8154 87.9707 83.8525 88.0088 83.8867 c
89.6963 85.4463 93.1123 88.2871 93.1123 90.7666 c
93.1123 93.6357 86.9395 98.3916 Y
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
86.9395 98.3916 m
80.5547 102.5957 75.7168 106.7451 63.4805 106.7451 c
43.3105 106.7451 46.042 93.9854 25.8701 93.9854 C
21.8037 94.7793 21.8037 90.6816 v
21.8037 86.9863 25.8193 87.5869 Y
45.9932 87.5869 43.2617 74.8252 63.4355 74.8252 c
73.8389 74.8252 82.3223 79.6699 86.0645 82.3398 c
86.9521 82.9736 87.5791 83.4873 87.8945 83.7822 c
87.9307 83.8154 87.9707 83.8525 88.0088 83.8867 c
89.6963 85.4463 93.1123 88.2871 93.1123 90.7666 c
93.1123 93.6357 86.9395 98.3916 Y
s
%AI6_EndPatternLayer
) &
(0 O 0 R 1 0.89 0.01 0 k
 1 0.89 0.01 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
79.4883 96.7959 m
79.4883 95.71 78.6084 94.8291 77.5215 94.8291 c
76.4355 94.8291 75.5557 95.71 75.5557 96.7959 c
75.5557 97.8828 76.4355 98.7637 77.5215 98.7637 c
78.6084 98.7637 79.4883 97.8828 79.4883 96.7959 c
f
64.5654 90.6719 m
64.5654 96.1738 68.7578 100.6943 74.1211 101.2197 C
73.7773 101.2529 73.4297 101.2715 73.0762 101.2715 c
67.2227 101.2715 62.4766 96.5264 62.4766 90.6719 c
62.4766 84.8184 67.2227 80.0723 73.0762 80.0723 c
73.4297 80.0723 73.7773 80.0918 74.1211 80.125 C
68.7578 80.6494 64.5654 85.1709 64.5654 90.6719 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.01 1 1 0 k
 0.01 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
44.3682 46.0117 m
48.6641 38.1553 l
26.7158 24.6436 7.7041 50.2217 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
44.3682 46.0117 m
48.6641 38.1553 l
26.7158 24.6436 7.7041 50.2217 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.01 1 1 0 k
 0.01 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
44.3682 70.207 m
48.6641 78.0654 l
26.7158 91.5762 7.7041 65.999 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
44.3682 70.207 m
48.6641 78.0654 l
26.7158 91.5762 7.7041 65.999 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
67.4922 61.3281 m
47.3203 61.3281 50.0518 74.0879 29.8818 74.0879 c
17.6455 74.0879 12.8076 69.9395 6.4229 65.7354 C
0.25 60.9795 0.25 58.1104 v
0.25 55.6309 3.666 52.79 5.3535 51.2305 c
5.3916 51.1963 5.4326 51.1592 5.4678 51.126 c
5.7832 50.8311 6.4102 50.3174 7.2979 49.6836 c
11.04 47.0137 19.5234 42.1689 29.9268 42.1689 c
50.1006 42.1689 47.3691 54.9307 67.543 54.9307 C
71.5586 54.3301 71.5586 58.0254 v
71.5586 62.123 67.4922 61.3281 Y
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
67.4922 61.3281 m
47.3203 61.3281 50.0518 74.0879 29.8818 74.0879 c
17.6455 74.0879 12.8076 69.9395 6.4229 65.7354 C
0.25 60.9795 0.25 58.1104 v
0.25 55.6309 3.666 52.79 5.3535 51.2305 c
5.3916 51.1963 5.4326 51.1592 5.4678 51.126 c
5.7832 50.8311 6.4102 50.3174 7.2979 49.6836 c
11.04 47.0137 19.5234 42.1689 29.9268 42.1689 c
50.1006 42.1689 47.3691 54.9307 67.543 54.9307 C
71.5586 54.3301 71.5586 58.0254 v
71.5586 62.123 67.4922 61.3281 Y
s
%AI6_EndPatternLayer
) &
(0 O 0 R 1 0.89 0.01 0 k
 1 0.89 0.01 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
13.874 64.1396 m
13.874 63.0527 14.7539 62.1729 15.8408 62.1729 c
16.9268 62.1729 17.8066 63.0527 17.8066 64.1396 c
17.8066 65.2266 16.9268 66.1064 15.8408 66.1064 c
14.7539 66.1064 13.874 65.2266 13.874 64.1396 c
f
28.7969 58.0156 m
28.7969 63.5176 24.6045 68.0381 19.2412 68.5635 C
19.585 68.5967 19.9326 68.6152 20.2861 68.6152 c
26.1396 68.6152 30.8857 63.8691 30.8857 58.0156 c
30.8857 52.1611 26.1396 47.416 20.2861 47.416 c
19.9326 47.416 19.585 47.4355 19.2412 47.4688 C
24.6045 47.9932 28.7969 52.5146 28.7969 58.0156 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.01 1 1 0 k
 0.01 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
122.1504 46.0117 m
126.4463 38.1553 l
104.498 24.6436 85.4863 50.2217 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
122.1504 46.0117 m
126.4463 38.1553 l
104.498 24.6436 85.4863 50.2217 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.01 1 1 0 k
 0.01 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
122.1504 70.207 m
126.4463 78.0654 l
104.498 91.5762 85.4863 65.999 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
122.1504 70.207 m
126.4463 78.0654 l
104.498 91.5762 85.4863 65.999 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
145.2734 61.3281 m
125.1025 61.3281 127.834 74.0879 107.6641 74.0879 c
95.4277 74.0879 90.5898 69.9395 84.2051 65.7354 C
78.0322 60.9795 78.0322 58.1104 v
78.0322 55.6309 81.4482 52.79 83.1357 51.2305 c
83.1729 51.1963 83.2139 51.1592 83.25 51.126 c
83.5654 50.8311 84.1914 50.3174 85.0801 49.6836 c
88.8223 47.0137 97.3057 42.1689 107.709 42.1689 c
127.8828 42.1689 125.1514 54.9307 145.3242 54.9307 C
149.3408 54.3301 149.3408 58.0254 v
149.3408 62.123 145.2734 61.3281 Y
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
145.2734 61.3281 m
125.1025 61.3281 127.834 74.0879 107.6641 74.0879 c
95.4277 74.0879 90.5898 69.9395 84.2051 65.7354 C
78.0322 60.9795 78.0322 58.1104 v
78.0322 55.6309 81.4482 52.79 83.1357 51.2305 c
83.1729 51.1963 83.2139 51.1592 83.25 51.126 c
83.5654 50.8311 84.1914 50.3174 85.0801 49.6836 c
88.8223 47.0137 97.3057 42.1689 107.709 42.1689 c
127.8828 42.1689 125.1514 54.9307 145.3242 54.9307 C
149.3408 54.3301 149.3408 58.0254 v
149.3408 62.123 145.2734 61.3281 Y
s
%AI6_EndPatternLayer
) &
(0 O 0 R 1 0.89 0.01 0 k
 1 0.89 0.01 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
91.6563 64.1396 m
91.6563 63.0527 92.5361 62.1729 93.623 62.1729 c
94.709 62.1729 95.5889 63.0527 95.5889 64.1396 c
95.5889 65.2266 94.709 66.1064 93.623 66.1064 c
92.5361 66.1064 91.6563 65.2266 91.6563 64.1396 c
f
106.5781 58.0156 m
106.5781 63.5176 102.3867 68.0381 97.0234 68.5635 C
97.3662 68.5967 97.7148 68.6152 98.0684 68.6152 c
103.9219 68.6152 108.668 63.8691 108.668 58.0156 c
108.668 52.1611 103.9219 47.416 98.0684 47.416 c
97.7148 47.416 97.3662 47.4355 97.0234 47.4688 C
102.3867 47.9932 106.5781 52.5146 106.5781 58.0156 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.7764 13.3555 m
122.4805 5.498 l
144.4277 -8.0127 163.4404 17.5645 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.7764 13.3555 m
122.4805 5.498 l
144.4277 -8.0127 163.4404 17.5645 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.7764 37.5508 m
122.4805 45.4092 l
144.4277 58.9199 163.4404 33.3428 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.7764 37.5508 m
122.4805 45.4092 l
144.4277 58.9199 163.4404 33.3428 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.01 1 1 0 k
 0.01 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
164.7207 33.0781 m
158.3359 37.2822 153.498 41.4316 141.2617 41.4316 c
121.0918 41.4316 123.8242 28.6719 103.6523 28.6719 C
99.5859 29.4658 99.5859 25.3691 v
99.5859 21.6729 103.6016 22.2734 Y
123.7754 22.2734 121.0439 9.5117 141.2168 9.5117 c
151.6201 9.5117 160.1045 14.3564 163.8457 17.0273 c
164.7344 17.6602 165.3613 18.1738 165.6768 18.4688 c
165.7119 18.502 165.7529 18.54 165.79 18.5732 c
167.4775 20.1338 170.8945 22.9736 170.8945 25.4531 c
170.8945 28.3232 164.7207 33.0781 Y
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
164.7207 33.0781 m
158.3359 37.2822 153.498 41.4316 141.2617 41.4316 c
121.0918 41.4316 123.8242 28.6719 103.6523 28.6719 C
99.5859 29.4658 99.5859 25.3691 v
99.5859 21.6729 103.6016 22.2734 Y
123.7754 22.2734 121.0439 9.5117 141.2168 9.5117 c
151.6201 9.5117 160.1045 14.3564 163.8457 17.0273 c
164.7344 17.6602 165.3613 18.1738 165.6768 18.4688 c
165.7119 18.502 165.7529 18.54 165.79 18.5732 c
167.4775 20.1338 170.8945 22.9736 170.8945 25.4531 c
170.8945 28.3232 164.7207 33.0781 Y
s
%AI6_EndPatternLayer
) &
(0 O 0 R 1 0.89 0.01 0 k
 1 0.89 0.01 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
157.2695 31.4824 m
157.2695 30.3965 156.3896 29.5156 155.3027 29.5156 c
154.2168 29.5156 153.3369 30.3965 153.3369 31.4824 c
153.3369 32.5693 154.2168 33.4502 155.3027 33.4502 c
156.3896 33.4502 157.2695 32.5693 157.2695 31.4824 c
f
142.3477 25.3594 m
142.3477 30.8604 146.54 35.3809 151.9033 35.9063 C
151.5596 35.9395 151.2109 35.959 150.8584 35.959 c
145.0039 35.959 140.2588 31.2129 140.2588 25.3594 c
140.2588 19.5049 145.0039 14.7598 150.8584 14.7598 c
151.2109 14.7598 151.5596 14.7783 151.9033 14.8115 C
146.54 15.3359 142.3477 19.8574 142.3477 25.3594 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.9941 13.3555 m
44.6982 5.498 l
66.6465 -8.0127 85.6582 17.5645 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.9941 13.3555 m
44.6982 5.498 l
66.6465 -8.0127 85.6582 17.5645 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.9941 37.5508 m
44.6982 45.4092 l
66.6465 58.9199 85.6582 33.3428 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.9941 37.5508 m
44.6982 45.4092 l
66.6465 58.9199 85.6582 33.3428 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.01 1 1 0 k
 0.01 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
86.9395 33.0781 m
80.5547 37.2822 75.7168 41.4316 63.4805 41.4316 c
43.3105 41.4316 46.042 28.6719 25.8701 28.6719 C
21.8037 29.4658 21.8037 25.3691 v
21.8037 21.6729 25.8193 22.2734 Y
45.9932 22.2734 43.2617 9.5117 63.4355 9.5117 c
73.8389 9.5117 82.3223 14.3564 86.0645 17.0273 c
86.9521 17.6602 87.5791 18.1738 87.8945 18.4688 c
87.9307 18.502 87.9707 18.54 88.0088 18.5732 c
89.6963 20.1338 93.1123 22.9736 93.1123 25.4531 c
93.1123 28.3232 86.9395 33.0781 Y
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
86.9395 33.0781 m
80.5547 37.2822 75.7168 41.4316 63.4805 41.4316 c
43.3105 41.4316 46.042 28.6719 25.8701 28.6719 C
21.8037 29.4658 21.8037 25.3691 v
21.8037 21.6729 25.8193 22.2734 Y
45.9932 22.2734 43.2617 9.5117 63.4355 9.5117 c
73.8389 9.5117 82.3223 14.3564 86.0645 17.0273 c
86.9521 17.6602 87.5791 18.1738 87.8945 18.4688 c
87.9307 18.502 87.9707 18.54 88.0088 18.5732 c
89.6963 20.1338 93.1123 22.9736 93.1123 25.4531 c
93.1123 28.3232 86.9395 33.0781 Y
s
%AI6_EndPatternLayer
) &
(0 O 0 R 1 0.89 0.01 0 k
 1 0.89 0.01 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
79.4883 31.4824 m
79.4883 30.3965 78.6084 29.5156 77.5215 29.5156 c
76.4355 29.5156 75.5557 30.3965 75.5557 31.4824 c
75.5557 32.5693 76.4355 33.4502 77.5215 33.4502 c
78.6084 33.4502 79.4883 32.5693 79.4883 31.4824 c
f
64.5654 25.3594 m
64.5654 30.8604 68.7578 35.3809 74.1211 35.9063 C
73.7773 35.9395 73.4297 35.959 73.0762 35.959 c
67.2227 35.959 62.4766 31.2129 62.4766 25.3594 c
62.4766 19.5049 67.2227 14.7598 73.0762 14.7598 c
73.4297 14.7598 73.7773 14.7783 74.1211 14.8115 C
68.7578 15.3359 64.5654 19.8574 64.5654 25.3594 c
f
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginBrushPattern
(Unnamed 20)0 A
u
u
0 J 0 j 1 w 4 M []0 d0 XR
-4176.5 4459.895 m
-3962.8999 4459.895 L
-3962.8999 4452.0942 L
-4176.5 4452.0942 L
-4176.5 4459.895 L
n
0 O
0 0 0 1 k
-4176.5 4455.9951 m
-4166.4854 4458.4868 -4159.6865 4459.835 -4147.7007 4459.895 c
-4134.7188 4459.96 -4069.6997 4459.895 y
-4004.6816 4459.96 -3991.6997 4459.895 v
-3979.7124 4459.835 -3972.9136 4458.4868 -3962.8999 4455.9951 C
-3972.9136 4453.5034 -3979.7124 4452.1553 -3991.6997 4452.0942 c
-4004.6816 4452.0288 -4069.6997 4452.0942 y
-4134.7188 4452.0288 -4147.7007 4452.0942 v
-4159.6865 4452.1553 -4166.4854 4453.5034 -4176.5 4455.9951 C
f
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 12)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-8049 8332.46 m
-7951.2451 8332.46 L
-7951.2451 8311.7441 L
-8049 8311.7441 L
-8049 8332.46 L
n
0 O
0 g
1 XR
-7951.5586 8327.7783 m
-7966.8247 8313.9902 -7984.5537 8334.9092 -7999.9277 8322.626 C
-7998.4199 8316.9736 -7992.7598 8323.9277 -7990.5176 8319.2813 C
-7990.4341 8317.6807 -7993.6313 8319.1807 -7993.5127 8317.0605 C
-7991.6245 8313.6514 -7986.8955 8314.1484 -7985.5664 8318.1973 C
-7979.3115 8316.2275 -7972.7734 8310.2842 -7966.7847 8312.0771 C
-7965.2671 8313.4277 -7966.0708 8314.6113 -7965.6211 8315.8877 C
-7958.2871 8311.4521 -7949.4644 8320.5879 -7951.5586 8327.7783 C
f
-7995.2842 8329.3926 m
-7995.8247 8329.7686 -7994.9277 8330.8799 -7995.2529 8331.3682 C
-7997.3237 8330.6162 -7999.6919 8326.5381 -8001.4731 8323.7705 C
-8001.2632 8325.2998 -8002.6641 8326.624 -8004.0781 8324.3926 C
-8004.2383 8323.5752 -8003.3667 8323.2881 -8003.6729 8322.3965 C
-8004.8306 8320.8281 -8005.8472 8322.3135 -8006.7798 8322.085 C
-8007.3184 8321.3213 -8007.6143 8320.6787 -8007.6816 8320.1543 C
-8001.5537 8317.334 -7994.9263 8329.1367 -7988.7456 8329.5625 C
-7988.9048 8332.5752 -7992.8555 8334.2607 -7995.2842 8329.3926 C
f
u
u
0 XR
-7992.1602 8324.1201 m
-8007.0142 8317.5801 -8028.4731 8321.8018 -8044.3687 8321.7793 c
-8050.2988 8321.7725 -8039.8965 8321.7813 -8045.8267 8321.7861 c
N
0 O
0 g
-7989.8052 8322.8994 m
-8007.1475 8315.7236 -8026.9341 8320.5156 -8045.0532 8320.4463 C
-8045.8608 8321.333 -8046.6685 8322.2217 -8047.4751 8323.1074 C
-8046.6973 8323.1074 -8045.9194 8323.1064 -8045.1421 8323.1133 C
-8044.3345 8322.2256 -8043.5273 8321.3389 -8042.7202 8320.4521 C
-8043.3516 8320.4619 -8043.9844 8320.4551 -8044.6157 8320.4551 c
-8046.3735 8320.458 -8050.9165 8323.1221 -8047.0376 8323.1172 c
-8046.4063 8323.1172 -8045.7734 8323.124 -8045.1421 8323.1133 c
-8043.4155 8323.0859 -8038.8184 8320.4834 -8042.7202 8320.4521 c
-8043.4976 8320.4434 -8044.2759 8320.4463 -8045.0532 8320.4463 c
-8046.8081 8320.4453 -8051.3574 8323.0928 -8047.4751 8323.1074 c
-8030.1177 8323.1748 -8011.1025 8318.4736 -7994.5151 8325.3389 c
-7993.1035 8325.9238 -7987.8081 8323.7266 -7989.8052 8322.8994 c
-7989.8052 8322.8994 l
f
U
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 158)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-8049 8332.46 m
-8037.0078 8332.46 L
-8037.0078 8321.8232 L
-8049 8321.8232 L
-8049 8332.46 L
n
-8048.3218 8321.8232 m
-8048.3218 8325.7725 L
-8048.3218 8326.8076 L
-8048.3218 8327.4463 L
-8048.3218 8328.5449 L
-8048.3218 8332.46 L
-8037.6865 8332.46 L
-8037.6865 8328.5449 L
-8037.6865 8327.4463 L
-8037.6865 8326.8076 L
-8037.6865 8325.7725 L
-8037.6865 8321.8232 L
-8048.3218 8321.8232 L
n
u
0 O
0.746094 0.675781 0.667969 0.898438 k
-8037.0078 8328.5449 m
-8037.0078 8327.8994 L
-8049 8327.9014 L
-8049 8328.5449 L
-8049 8328.6104 L
-8037.0078 8328.6094 L
-8037.0078 8328.5449 L
f
-8037.0078 8325.7725 m
-8049 8325.7725 L
-8049 8326.4814 L
-8037.0078 8326.4814 L
-8037.0078 8325.7725 L
f
0.15 1 0.9 0.1 k
-8037.0078 8327.5117 m
-8049 8327.5117 L
-8049 8327.9014 L
-8037.0078 8327.8994 L
-8037.0078 8327.5117 L
f
-8037.0078 8326.8076 m
-8037.0078 8326.4814 L
-8049 8326.4814 L
-8049 8326.8076 L
-8049 8326.8721 L
-8037.0078 8326.8721 L
-8037.0078 8326.8076 L
f
0 1 1 0 k
-8037.0078 8327.4463 m
-8037.0078 8326.8721 L
-8049 8326.8721 L
-8049 8327.4463 L
-8049 8327.5117 L
-8037.0078 8327.5117 L
-8037.0078 8327.4463 L
f
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 160)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-8049 8331.2646 m
-8038.3638 8331.2646 L
-8038.3638 8320.6279 L
-8049 8320.6279 L
-8049 8331.2646 L
n
-8049 8320.6279 m
-8049 8324.5186 L
-8049 8325.2285 L
-8049 8325.6113 L
-8049 8326.2529 L
-8049 8326.6416 L
-8049 8327.3506 L
-8049 8331.2646 L
-8038.3638 8331.2646 L
-8038.3638 8320.6279 L
-8049 8320.6279 L
n
u
0 O
0.746094 0.675781 0.667969 0.898438 k
-8042.9585 8332.46 m
-8042.2515 8332.46 L
-8042.2607 8327.416 L
-8036.5229 8327.415 L
-8036.5229 8326.7041 L
-8042.9707 8326.707 L
-8042.9585 8332.46 L
f
-8044.6055 8324.9941 m
-8044.8696 8325.2568 -8045.0215 8325.623 -8045.0215 8325.9961 C
-8045.0073 8332.46 L
-8044.2979 8332.46 L
-8044.3125 8325.9961 L
-8044.3125 8325.8096 -8044.2363 8325.6279 -8044.1045 8325.4951 c
-8043.9717 8325.3633 -8043.7891 8325.2881 -8043.6021 8325.2881 C
-8036.5229 8325.2881 L
-8036.5229 8324.5781 L
-8043.6021 8324.5781 L
-8043.9761 8324.5781 -8044.3418 8324.7295 -8044.6055 8324.9941 c
f
0.15 1 0.9 0.1 k
-8043.2827 8332.46 m
-8042.9585 8332.46 L
-8042.9707 8326.707 L
-8036.5229 8326.7041 L
-8036.5229 8326.3154 L
-8043.2827 8326.3154 L
-8043.2827 8332.46 L
f
-8044.1045 8325.4951 m
-8044.2363 8325.6279 -8044.3125 8325.8096 -8044.3125 8325.9961 C
-8044.2979 8332.46 L
-8043.9219 8332.46 L
-8043.9219 8325.9961 L
-8043.9219 8325.9121 -8043.8877 8325.8311 -8043.8281 8325.7705 c
-8043.7695 8325.7119 -8043.6865 8325.6787 -8043.6025 8325.6787 C
-8036.5229 8325.6787 L
-8036.5229 8325.2881 L
-8043.6021 8325.2881 L
-8043.7891 8325.2881 -8043.9717 8325.3633 -8044.1045 8325.4951 c
f
0 1 1 0 k
-8043.8281 8325.7705 m
-8043.8877 8325.8311 -8043.9219 8325.9121 -8043.9219 8325.9961 C
-8043.9219 8332.46 L
-8043.2827 8332.46 L
-8043.2827 8326.3154 L
-8036.5229 8326.3154 L
-8036.5229 8325.6787 L
-8043.6025 8325.6787 L
-8043.6865 8325.6787 -8043.7695 8325.7119 -8043.8281 8325.7705 c
f
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 161)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-8049 8332.46 m
-8037.0078 8332.46 L
-8037.0078 8321.8232 L
-8049 8321.8232 L
-8049 8332.46 L
n
-8048.0117 8321.8232 m
-8048.0117 8325.7725 L
-8048.0117 8326.8076 L
-8048.0117 8327.4463 L
-8048.0117 8328.5449 L
-8048.0117 8332.46 L
-8037.3765 8332.46 L
-8037.3765 8328.5449 L
-8037.3765 8327.4463 L
-8037.3765 8326.8076 L
-8037.3765 8325.7725 L
-8037.3765 8321.8232 L
-8048.0117 8321.8232 L
n
0 O
0.15 1 0.9 0.1 k
-8037.0078 8327.5117 m
-8049 8327.5117 L
-8049 8327.9014 L
-8037.0078 8327.8994 L
-8037.0078 8327.5117 L
f
-8037.0078 8326.8076 m
-8037.0078 8326.4814 L
-8049 8326.4814 L
-8049 8326.8076 L
-8049 8326.8721 L
-8037.0078 8326.8721 L
-8037.0078 8326.8076 L
f
0 1 1 0 k
-8037.0078 8327.4463 m
-8037.0078 8326.8721 L
-8049 8326.8721 L
-8049 8327.4463 L
-8049 8327.5117 L
-8037.0078 8327.5117 L
-8037.0078 8327.4463 L
f
1 Ap
0.746094 0.675781 0.667969 0.898438 k
-8047.2715 8328.6104 m
-8049 8328.6104 L
-8049 8325.7725 L
-8047.2715 8325.7725 L
-8047.2715 8328.6104 L
f
0.15 1 0.9 0.1 k
-8046.5967 8328.5938 m
-8047.4492 8328.5938 L
-8047.4492 8325.7568 L
-8046.5967 8325.7568 L
-8046.5967 8328.5938 L
f
0 Ap
0.746094 0.675781 0.667969 0.898438 k
-8037.0078 8328.5449 m
-8037.0078 8327.8994 L
-8049 8327.9014 L
-8049 8328.5449 L
-8049 8328.6104 L
-8037.0078 8328.6094 L
-8037.0078 8328.5449 L
f
-8037.0078 8325.7725 m
-8049 8325.7725 L
-8049 8326.4814 L
-8037.0078 8326.4814 L
-8037.0078 8325.7725 L
f
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 162)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-8049 8332.46 m
-8037.6099 8332.46 L
-8037.6099 8321.8232 L
-8049 8321.8232 L
-8049 8332.46 L
n
-8048.2461 8328.5449 m
-8048.2461 8332.46 L
-8037.6099 8332.46 L
-8037.6099 8321.8232 L
-8048.2461 8321.8232 L
-8048.2461 8325.7148 L
-8048.2461 8328.5449 L
n
u
0 O
0.746094 0.675781 0.667969 0.898438 k
-8042.6245 8328.4814 m
-8042.6245 8327.8369 L
-8049 8327.8369 L
-8049 8328.4814 L
-8049 8328.5449 L
-8042.6245 8328.5449 L
-8042.6245 8328.4814 L
f
-8042.6245 8325.708 m
-8049 8325.708 L
-8049 8326.418 L
-8042.6245 8326.418 L
-8042.6245 8325.708 L
f
0.15 1 0.9 0.1 k
-8042.6245 8327.4463 m
-8049 8327.4463 L
-8049 8327.8369 L
-8042.6245 8327.8369 L
-8042.6245 8327.4463 L
f
-8042.6245 8326.7432 m
-8042.6245 8326.418 L
-8049 8326.418 L
-8049 8326.7432 L
-8049 8326.8086 L
-8042.6245 8326.8086 L
-8042.6245 8326.7432 L
f
0 1 1 0 k
-8042.6245 8327.3809 m
-8042.6245 8326.8086 L
-8049 8326.8086 L
-8049 8327.3809 L
-8049 8327.4463 L
-8042.6245 8327.4463 L
-8042.6245 8327.3809 L
f
U
-8048.2461 8332.46 m
-8037.6099 8332.46 L
-8037.6099 8321.8232 L
-8048.2461 8321.8232 L
-8048.2461 8332.46 L
n
-8037.7241 8327.1416 m
-8045.8125 8331.8115 L
N
0 O
0.746094 0.675781 0.667969 0.898438 k
-8045.4814 8326.4199 m
-8045.4814 8323.6006 L
-8039.3535 8327.1377 L
-8045.4814 8330.6758 L
-8045.4814 8327.8369 L
-8045.8125 8327.8369 L
-8045.8125 8328.5449 L
-8045.8125 8331.8115 L
-8037.7241 8327.1416 L
-8045.8125 8322.4727 L
-8045.8125 8325.7109 L
-8045.8125 8326.4199 L
-8045.4814 8326.4199 L
f
0.15 1 0.9 0.1 k
-8045.4814 8330.6758 m
-8039.3535 8327.1377 L
-8045.4814 8323.6006 L
-8045.4814 8326.4199 L
-8045.4814 8326.8076 L
-8045.3472 8326.8076 L
-8045.2148 8326.4355 -8044.8633 8326.167 -8044.4453 8326.167 c
-8043.9155 8326.167 -8043.4849 8326.5967 -8043.4849 8327.127 c
-8043.4849 8327.6572 -8043.9155 8328.0869 -8044.4453 8328.0869 c
-8044.8633 8328.0869 -8045.2148 8327.8193 -8045.3472 8327.4463 C
-8045.4814 8327.4463 L
-8045.4814 8327.8369 L
-8045.4814 8330.6758 L
f
0 1 1 0 k
-8044.4453 8328.0869 m
-8043.9155 8328.0869 -8043.4849 8327.6572 -8043.4849 8327.127 c
-8043.4849 8326.5967 -8043.9155 8326.167 -8044.4453 8326.167 c
-8044.8633 8326.167 -8045.2148 8326.4355 -8045.3472 8326.8076 c
-8045.3828 8326.9072 -8045.4058 8327.0137 -8045.4058 8327.127 c
-8045.4058 8327.2393 -8045.3828 8327.3447 -8045.3472 8327.4463 c
-8045.2148 8327.8193 -8044.8633 8328.0869 -8044.4453 8328.0869 c
f
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 4)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-8048.8833 8332.415 m
-7957.0479 8332.415 L
-7957.0479 8328.1357 L
-8048.8833 8328.1357 L
-8048.8833 8332.415 L
n
0 O
0 0 0 1 k
-8048.6631 8329.7354 m
-8049 8329.8018 -8048.4814 8329.9912 -8048.8833 8329.8486 C
-8048.8379 8329.7305 -8048.7725 8329.6416 -8048.6631 8329.7354 C
f
-7958.1675 8329.9014 m
-7959.2524 8330.6641 -7960.6816 8329.8936 -7961.8701 8330.3799 C
-7962.0098 8330.4121 -7961.8345 8329.9619 -7962.1484 8330.0625 C
-7963.3008 8330.6553 -7965.1162 8330.3018 -7966.5195 8329.8447 C
-7966.4346 8329.7266 L
-7966.7017 8329.6416 -7967.0283 8330.0322 -7967.3115 8329.9775 C
-7967.3135 8329.8994 -7967.2207 8329.8662 -7967.2861 8329.7588 C
-7967.3574 8329.9951 -7967.7983 8329.8682 -7967.9185 8330.0439 C
-7968.0303 8329.9521 -7968.0195 8329.7646 -7968.1641 8329.6611 C
-7968.3262 8329.9297 L
-7968.7769 8330.5693 -7969.4209 8329.8857 -7970.0361 8330.2158 C
-7970.0063 8330.1533 -7969.9453 8330.1045 -7969.9941 8330.0439 C
-7970.9814 8330.4326 -7972.2168 8330.3604 -7973.3208 8330.5029 C
-7973.2769 8330.4082 -7973.2363 8330.2354 -7973.3008 8330.1279 C
-7973.3555 8330.4111 -7973.6963 8330.4824 -7973.9922 8330.5381 C
-7974.1255 8330.2471 -7974.4995 8330.8037 -7974.8467 8330.6436 C
-7974.8169 8330.5791 L
-7975.0732 8330.8838 -7975.1973 8330.4033 -7975.4053 8330.7686 C
-7975.5684 8330.54 L
-7975.6807 8330.9502 -7975.9395 8330.3271 -7976.1514 8330.5361 C
-7976.1445 8330.6201 L
-7976.3442 8330.7197 -7976.4482 8330.5137 -7976.6338 8330.583 C
-7976.6514 8330.5361 L
-7977.0854 8330.6436 -7977.3379 8330.415 -7977.3271 8330.7354 C
-7977.4795 8330.4785 -7976.9063 8330.6182 -7977.1455 8330.2451 C
-7978.5732 8330.5752 -7980.0459 8330.5107 -7981.4834 8330.5166 C
-7981.6465 8330.3877 -7981.7505 8330.3486 -7981.7871 8330.2275 C
-7981.9307 8330.292 -7982.3281 8330.2861 -7982.4585 8330.4502 C
-7982.4102 8330.4434 -7982.5513 8330.2861 -7982.6274 8330.2705 C
-7982.8887 8330.1494 -7982.9131 8330.6221 -7983.2002 8330.4785 C
-7983.0859 8330.3936 -7983.0469 8330.29 -7983.0854 8330.1709 C
-7983.3301 8330.4209 -7983.6577 8330.3809 -7983.9473 8330.4619 C
-7983.9023 8330.4082 -7983.8325 8330.376 -7983.8433 8330.2754 C
-7984.1602 8330.5586 -7984.4209 8330.2158 -7984.6982 8330.3945 C
-7984.5947 8330.21 L
-7985.0415 8329.9854 -7984.7266 8330.5967 -7985.1128 8330.4639 C
-7985.02 8330.4053 -7985.0527 8330.333 -7985.0361 8330.2578 C
-7985.3965 8330.5938 -7985.9795 8330.4824 -7986.3389 8330.5967 C
-7986.3174 8330.5713 -7986.3232 8330.5205 Y
-7986.7148 8330.5625 -7987.1245 8330.458 -7987.5552 8330.6045 C
-7987.7119 8330.5225 -7987.5039 8330.1533 -7987.9185 8330.2217 C
-7987.9033 8330.5928 -7988.6221 8330.374 -7988.3779 8330.7939 C
-7988.7319 8330.7334 -7989.2925 8330.5938 -7989.5283 8330.7197 C
-7989.3691 8330.5791 -7989.7007 8330.2666 -7989.4063 8330.2354 C
-7989.6289 8330.0098 L
-7989.5957 8329.8584 -7989.3999 8330.0615 -7989.4707 8329.8701 C
-7989.6182 8329.8857 -7990.0479 8330.0322 -7990.1797 8329.9717 C
-7990.4531 8330.1992 -7990.7041 8330.624 -7991.1465 8330.6709 C
-7990.9385 8330.5264 -7991.2646 8330.2617 -7991.1235 8330.1982 C
-7991.7407 8330.9092 L
-7991.8877 8330.9268 -7991.7725 8330.6162 -7991.9854 8330.7129 C
-7991.9746 8330.8115 -7992.0674 8330.8721 -7992.1318 8330.9521 C
-7992.1875 8330.9092 -7992.7441 8331.0439 -7992.8081 8330.6787 C
-7992.8735 8330.5361 -7992.5684 8330.6025 -7992.7314 8330.4717 C
-7993.0029 8330.4756 -7993.0151 8330.6006 -7993.2871 8330.6064 C
-7993.2925 8330.5576 L
-7993.4717 8330.5029 -7993.8213 8330.7129 -7993.6265 8330.915 C
-7993.5015 8330.9268 -7993.6738 8330.6953 -7993.4888 8330.8018 C
-7993.6152 8331.0137 -7993.9312 8331.0732 -7994.2031 8331.0771 C
-7994.1104 8331.0186 -7994.1216 8330.9209 -7994.0845 8330.8174 C
-7994.4497 8331.1045 -7994.8369 8331.1953 -7995.2451 8331.3154 C
-7995.2515 8331.4893 -7995.0928 8330.999 -7995.0327 8331.0908 C
-7995.5557 8330.8496 -7996.1128 8331.4326 -7996.5479 8331.0801 C
-7996.4766 8331.0498 -7996.5098 8331.3271 -7996.5146 8331.2783 C
-7996.7666 8331.2568 -7996.7549 8331.0049 -7996.9189 8331.0977 C
-7996.9355 8330.9502 -7997.1255 8331.1455 -7997.2944 8331.1904 C
-7997.3818 8331.2969 -7997.3384 8331.1182 -7997.1914 8331.1025 C
-7997.4268 8331.2275 -7998.3691 8331.4541 -7998.9131 8331.2393 C
-7998.9023 8331.3369 -7999.2471 8331.5977 -7999.3721 8331.5869 C
-7999.3232 8331.3584 L
-7999.4375 8331.2217 -7999.7422 8331.3779 -7999.7632 8331.1826 C
-8000.0303 8331.46 -7998.7344 8330.9463 -7999.0957 8331.1602 C
-7999.1895 8330.9697 -7999.5991 8331.5244 -7999.5215 8331.2129 C
-7999.7725 8331.2217 -8000.0161 8331.4785 -8000.2559 8331.2646 C
-8000.1865 8331.3018 -8000.0522 8330.9473 -8000.2549 8330.9639 C
-8000.6123 8331.0049 -8000.3564 8331.0732 -8000.6465 8331.1494 C
-8000.8281 8331.2432 L
-8000.8398 8331.4658 -8001.1475 8331.2129 -8001.0146 8331.4619 C
-8001.0586 8331.2783 -8001.5337 8331.5752 -8001.4971 8331.2061 C
-8001.4473 8330.915 L
-8001.6016 8330.9365 -8001.7002 8331.2217 -8001.8213 8331.3496 C
-8001.8418 8331.3232 -8001.8823 8331.2646 -8001.8745 8331.2178 C
-8001.8994 8331.6631 -8002.2432 8331.1807 -8002.4268 8331.5244 C
-8002.7505 8331.3701 -8003.2495 8331.5107 -8003.4023 8331.2334 C
-8003.6514 8331.3682 -8003.8784 8331.5283 -8004.1621 8331.4326 C
-8004.1055 8331.3906 -8004.0283 8331.3779 -8004.0122 8331.2822 C
-8004.1904 8331.1514 -8004.2344 8331.2686 -8004.3975 8331.3408 C
-8004.3608 8331.2744 -8004.7539 8331.0801 -8004.9521 8330.9229 C
-8005.1992 8331.0557 -8005.1143 8331.2959 -8005.1392 8331.4424 C
-8005.3652 8331.0029 -8005.8379 8331.7256 -8006.1211 8331.3271 C
-8006.0352 8331.2666 -8005.7598 8331.1113 -8005.9658 8331.001 C
-8006.1919 8330.5625 -8006.4219 8331.3252 -8006.7861 8331.1143 C
-8006.6968 8331.4785 L
-8006.8594 8331.2529 -8007.2334 8331.6904 -8007.1963 8331.3193 C
-8007.3184 8331.4502 -8007.6265 8331.1982 -8007.5859 8331.5537 C
-8008.1846 8331.2529 -8009.0425 8331.7354 -8009.4102 8331.0977 C
-8009.4961 8331.1572 -8009.7104 8331.0967 -8009.6665 8331.2793 C
-8009.5239 8331.4775 -8009.4673 8331.1377 -8009.4141 8331.2725 C
-8009.4912 8331.2832 -8009.5078 8331.3809 -8009.5161 8331.4297 C
-8009.7021 8331.3486 -8009.8486 8331.3232 -8009.6729 8331.0273 C
-8010.0869 8330.8076 -8010.1001 8331.6318 -8010.6274 8331.4932 C
-8010.6035 8331.3457 -8010.6436 8331.29 -8010.7979 8331.3135 C
-8011.0903 8331.5654 L
-8011.4312 8331.5068 -8011.2842 8331.2305 -8011.2925 8330.9814 C
-8011.4746 8331.0244 -8011.6973 8331.0127 -8011.7803 8331.1982 C
-8012.0015 8330.8857 L
-8011.8398 8331.1113 -8012.1514 8331.0361 -8012.2368 8331.0967 C
-8012.1514 8331.0361 L
-8012.1846 8330.9297 -8012.3955 8330.9951 -8012.5024 8331.0264 C
-8012.4766 8331.1807 -8012.2617 8331.2432 -8012.1445 8331.2881 C
-8012.2373 8331.3975 -8012.3823 8331.3721 -8012.5059 8331.501 C
-8012.4648 8331.2568 -8012.8027 8331.3271 -8012.9473 8331.3018 C
-8013.1133 8331.249 -8013.1348 8331.5205 -8013.1831 8331.5127 C
-8013.1875 8331.3857 -8013.4541 8331.4912 -8013.3247 8331.3135 C
-8013.2681 8331.2725 -8013.1953 8331.4365 -8013.1016 8331.3252 C
-8013.2109 8331.2305 -8013.1982 8331.0098 -8013.4258 8331.1709 C
-8013.5967 8331.292 -8013.3818 8331.6533 -8013.7061 8331.499 C
-8013.6211 8331.4385 -8013.6055 8331.3408 -8013.5391 8331.2529 C
-8013.8433 8331.126 L
-8013.8564 8331.3486 L
-8013.8975 8331.292 -8013.8691 8331.2725 -8013.8877 8331.2432 C
-8013.9785 8331.4775 -8014.3521 8331.3154 -8014.4209 8331.5791 C
-8014.5742 8331.6025 -8014.7441 8331.4248 -8014.8906 8331.3994 C
-8014.8623 8331.3799 L
-8015.0415 8331.249 -8015.2793 8331.335 -8015.4297 8331.4854 C
-8015.4219 8331.4365 L
-8015.5195 8331.4189 -8015.7505 8331.4541 -8015.8735 8331.585 C
-8016.1201 8331.417 -8015.9561 8330.7441 -8016.2295 8331.0244 C
-8016.48 8331.0322 -8016.6221 8331.4326 -8016.5215 8331.5752 C
-8016.9717 8331.4248 -8017.4834 8331.7881 -8017.9009 8331.4424 C
-8017.9658 8331.5322 -8017.9248 8331.5889 -8018.0586 8331.6416 C
-8018.7197 8331.5537 -8019.4551 8331.9053 -8019.9814 8331.4678 C
-8019.79 8331.374 -8019.9688 8331.2451 -8019.9727 8331.1182 C
-8020.1309 8331.3174 -8020.1631 8330.9111 -8020.2197 8331.2529 C
-8020.2041 8331.4541 -8020.2197 8331.5518 -8020.0337 8331.6328 C
-8020.4282 8331.7412 -8021.0283 8331.7412 -8021.2471 8331.5537 C
-8021.1377 8331.6465 -8021.2227 8331.708 -8021.3086 8331.7686 C
-8021.2803 8331.4473 -8021.5713 8331.3994 -8021.7915 8331.5127 C
-8021.8223 8331.708 L
-8021.9658 8331.5068 L
-8022.0503 8331.5693 -8022.0591 8331.917 -8022.2773 8331.7295 C
-8022.2891 8331.6533 -8022.3018 8331.5762 -8022.3418 8331.5205 C
-8022.5693 8331.6807 -8022.8906 8331.9521 -8023.1377 8331.7861 C
-8023.3398 8331.501 L
-8023.4453 8331.5322 -8023.6235 8331.7041 -8023.4375 8331.7861 C
-8023.8594 8331.6143 -8024.1309 8331.5928 -8024.2646 8331.3457 C
-8024.9912 8331.9473 -8026.0459 8331.9717 -8026.8906 8331.9287 C
-8026.8652 8331.7822 L
-8027.0923 8331.6455 -8026.9834 8332.0381 -8027.1416 8331.9365 C
-8027.0684 8331.7969 -8027.3145 8331.6328 -8027.1362 8331.4619 C
-8027.4609 8331.3076 -8027.5547 8331.7158 -8027.7656 8331.7822 C
-8027.7979 8331.9746 -8027.5957 8331.6592 -8027.6367 8331.9033 C
-8027.6729 8331.9717 -8028.0859 8331.7529 -8028.1362 8332.0439 C
-8028.2178 8331.9297 -8028.1543 8331.7158 -8028.1104 8331.5977 C
-8028.3086 8331.7393 L
-8028.5513 8331.3994 -8027.7559 8331.1318 -8028.0107 8330.7129 C
-8028.1934 8330.7588 L
-8028.3682 8330.4541 -8027.71 8330.415 -8028.1689 8330.3105 C
-8028.3682 8330.4541 -8028.5381 8330.876 -8028.3608 8331.0049 C
-8028.7754 8331.085 -8028.5527 8331.6982 -8028.9985 8331.6738 C
-8029.1201 8331.5029 -8028.6416 8331.6328 -8028.7275 8331.3936 C
-8028.9375 8331.1592 -8029.1484 8331.5244 -8029.3354 8331.4424 C
-8029.1279 8331.5518 -8029.3032 8331.8457 -8029.4375 8331.8994 C
-8029.6641 8331.7617 -8029.29 8331.624 -8029.6113 8331.5938 C
-8029.6641 8331.7617 -8029.9595 8331.8877 -8029.7041 8332.0049 C
-8029.8203 8332.3857 -8030.0381 8331.8994 -8030.2129 8332.1943 C
-8030.3174 8331.9268 -8029.8823 8331.5752 -8030.2354 8331.4414 C
-8030.1792 8331.6992 -8030.6704 8331.792 -8030.4839 8332.1748 C
-8030.6221 8332.1006 -8030.6367 8331.8975 -8030.5361 8331.7393 C
-8030.7334 8331.5801 -8031.0151 8332.21 -8031.0801 8331.6982 C
-8031.1479 8331.9619 L
-8031.21 8331.876 -8031.2983 8331.8115 -8031.3994 8331.6689 C
-8031.5732 8331.6641 -8031.96 8332.0264 -8031.9443 8331.6279 C
-8032 8331.6689 -8032.3975 8331.6514 -8032.2441 8331.9268 C
-8031.9971 8332.0947 -8031.96 8331.7256 -8031.8223 8332.0977 C
-8031.9971 8331.7939 -8032.1787 8332.1377 -8032.3213 8332.2393 C
-8032.3447 8332.085 L
-8032.4297 8332.1455 -8032.6255 8332.1113 -8032.6787 8332.2783 C
-8032.6133 8332.1904 -8032.6475 8332.085 -8032.7148 8332.0479 C
-8032.8042 8332.2822 L
-8033.1494 8332.3994 -8032.8857 8331.8701 -8033.2217 8331.9385 C
-8032.9663 8331.7568 L
-8033.0225 8331.7959 -8033.1367 8331.5762 -8033.2979 8331.6494 C
-8033.3604 8331.8633 -8033.4775 8332.1201 -8033.5313 8332.2861 C
-8033.7207 8332.3799 -8033.6162 8332.0449 -8033.8027 8332.2646 C
-8033.5586 8332.0068 L
-8033.5215 8331.9365 -8033.7231 8331.6533 -8033.9761 8331.6592 C
-8034.1377 8331.7334 -8034.3887 8332.042 -8034.1338 8332.1592 C
-8034.2607 8332.1631 -8034.4385 8332.0322 -8034.3379 8331.876 C
-8034.6255 8331.9502 -8034.2998 8332.1064 -8034.5479 8332.2393 C
-8034.6494 8332.0967 -8034.9658 8331.8936 -8035.1563 8331.6865 C
-8034.8975 8331.3281 L
-8035.0693 8331.3252 L
-8034.8467 8331.0381 -8035.1826 8331.1064 -8035.0566 8330.8037 C
-8035.1743 8330.7568 -8035.3169 8330.8594 -8035.4307 8330.9385 C
-8035.0864 8331.4229 -8035.8159 8331.6006 -8035.7158 8332.042 C
-8036.1875 8332.1631 -8036.0107 8330.9678 -8036.5024 8331.6592 C
-8036.4219 8331.7744 -8036.6533 8332.1104 -8036.3564 8331.9824 C
-8036.6494 8331.9346 -8036.5557 8332.4258 -8036.9014 8332.2432 C
-8036.6455 8332.0615 -8037.1763 8331.7959 -8036.8066 8331.5322 C
-8036.8311 8331.6787 -8036.6001 8331.6436 -8036.5435 8331.6025 C
-8036.6641 8331.4326 -8036.5186 8331.1572 -8036.8184 8331.1572 C
-8037.0015 8331.1992 -8037.2524 8331.208 -8037.2158 8331.4385 C
-8037.2085 8331.6914 -8036.9365 8331.4111 -8037.0537 8331.667 C
-8037.4185 8331.7549 -8037.4795 8331.3701 -8037.6304 8331.8193 C
-8037.3999 8331.7832 -8037.3423 8332.0439 -8037.3467 8332.2178 C
-8037.6143 8332.3232 L
-8037.5625 8332.1553 L
-8037.9922 8332.0342 -8037.6895 8332.46 -8038.1055 8332.415 C
-8038.3008 8332.083 L
-8038.2017 8331.7969 -8037.6953 8332.21 -8037.7695 8331.7441 C
-8038.04 8331.7256 -8038.1299 8331.9619 -8038.3848 8331.8418 C
-8038.3281 8331.8018 -8038.2505 8331.79 -8038.1943 8331.749 C
-8038.2915 8331.7334 -8038.3877 8331.1162 -8038.7734 8331.4775 C
-8038.9727 8331.6182 -8038.8262 8331.6436 -8038.8311 8331.8174 C
-8039.2656 8331.8701 -8039.3955 8332.0479 -8039.6753 8332.0752 C
-8039.6177 8331.7354 -8040.1699 8332.042 -8039.8608 8331.6943 C
-8039.7188 8331.8936 -8039.0903 8331.874 -8038.9365 8331.5498 C
-8039.0947 8331.1465 -8038.5952 8331.6064 -8038.5024 8331.1982 C
-8038.8506 8331.1885 -8038.8335 8330.792 -8038.8896 8330.5322 C
-8038.9863 8330.5137 -8039.0801 8330.624 -8039.1377 8330.6641 C
-8039.1787 8330.9092 -8039.0522 8330.9053 -8039.0449 8331.1572 C
-8039.4336 8331.0908 -8039.8081 8331.2275 -8040.0225 8331.4658 C
-8040.1523 8331.3447 -8040.1113 8331.1006 -8039.9575 8331.0771 C
-8040.4199 8331.1494 -8040.9141 8331.1162 -8041.3535 8331.042 C
-8041.0693 8331.4414 -8041.8433 8331.1357 -8041.6494 8331.4678 C
-8041.4141 8331.5576 -8041.2119 8331.8418 -8041.3418 8332.0205 C
-8041.4888 8331.9951 -8041.3369 8331.8457 -8041.3984 8331.7607 C
-8041.5859 8331.9785 -8041.6895 8331.4111 -8041.8735 8331.7549 C
-8041.4512 8331.626 -8041.7915 8331.2686 -8041.7139 8330.9561 C
-8042.0186 8331.1318 -8041.7007 8330.7334 -8042.0024 8330.7334 C
-8042.3057 8330.9072 -8042.6787 8331.0439 -8043.0161 8331.1113 C
-8043.4399 8330.8154 -8044.0898 8331.1064 -8044.4683 8331.1182 C
-8044.6665 8330.96 -8044.5322 8330.6064 -8044.7471 8330.5449 C
-8044.9995 8330.5518 -8044.5601 8330.9268 -8044.9336 8330.7646 C
-8044.8975 8330.6943 L
-8045.0107 8330.7764 -8045.5825 8330.4541 -8045.6929 8330.9619 C
-8045.5776 8330.5791 L
-8045.6475 8330.5439 -8045.7119 8330.6318 -8045.7695 8330.6729 C
-8045.7725 8330.5479 -8045.8535 8330.4346 -8045.7402 8330.3525 C
-8045.9707 8330.0889 -8046.2241 8330.3945 -8046.4746 8330.4053 C
-8046.3135 8330.6318 L
-8046.7422 8330.8096 -8047.0293 8330.585 -8047.4443 8330.6641 C
-8047.4316 8330.4424 L
-8047.6787 8330.5752 L
-8047.6182 8330.3604 -8047.8447 8330.2217 -8047.9751 8330.4014 C
-8047.3335 8329.8584 L
-8047.1553 8329.9893 -8047.5283 8330.126 -8047.4165 8330.3447 C
-8047.3213 8330.5361 -8046.9375 8330.4756 -8046.8755 8330.2617 C
-8047.0225 8330.2373 -8047.0293 8330.2861 -8047.1436 8330.3662 C
-8047.1919 8330.0576 -8046.9688 8330.0693 -8046.8584 8329.8633 C
-8046.9355 8329.876 -8047.0449 8329.7822 -8047.0615 8329.8799 C
-8046.9102 8329.7295 -8046.7578 8329.7061 -8046.5059 8329.6982 C
-8046.6763 8329.8193 -8046.4131 8329.8896 -8046.4775 8329.9775 C
-8046.4575 8329.7061 -8046.2168 8329.6221 -8045.9053 8329.6982 C
-8045.6831 8330.0127 -8045.3208 8329.4961 -8044.96 8329.583 C
-8045.1064 8329.8584 -8045.2935 8330.0791 -8045.5127 8330.1904 C
-8045.2861 8330.3281 -8045.2607 8330.1826 -8045.0337 8330.3213 C
-8044.9238 8330.1162 -8044.8457 8329.8018 -8044.5503 8329.6768 C
-8044.5342 8329.8799 L
-8044.2666 8329.7764 -8044.2666 8329.4756 -8043.9258 8329.5322 C
-8043.3418 8329.6318 -8042.7407 8329.6318 -8042.2949 8329.6572 C
-8042.2783 8329.8594 L
-8042.0303 8329.4258 -8041.4521 8329.6992 -8041.1182 8329.5068 C
-8040.5503 8329.7021 -8039.8848 8329.3135 -8039.5938 8329.6631 C
-8038.5913 8329.5068 -8037.7148 8329.3545 -8036.6768 8329.4287 C
-8036.8516 8329.7236 L
-8036.6655 8329.5068 -8036.7305 8329.8936 -8036.5479 8329.8496 C
-8036.7578 8329.6143 -8036.2949 8329.5439 -8036.1665 8329.3633 C
-8035.7041 8329.5928 -8035.1104 8329.3428 -8034.7007 8329.1357 C
-8034.6846 8329.3389 L
-8034.2705 8328.958 -8033.7759 8329.292 -8033.2598 8329.3545 C
-8033.2007 8329.4385 -8033.1074 8329.6289 -8032.9536 8329.6064 C
-8032.6738 8329.2783 -8032.5273 8329.3018 -8032.1167 8329.0967 C
-8031.8169 8329.0967 -8031.3301 8329.1777 -8031.0254 8329.3057 C
-8029.8975 8328.8447 -8028.7456 8329.1396 -8027.5732 8328.8623 C
-8027.4888 8329.1006 L
-8026.3521 8328.5908 -8024.9541 8329.0537 -8023.9839 8328.792 C
-8024.0776 8329.1992 L
-8023.7734 8329.3252 -8023.3843 8329.0928 -8023.4619 8328.8037 C
-8023.1567 8328.9287 -8022.7007 8328.6064 -8022.5068 8328.9414 C
-8022.1953 8329.0166 -8022.1255 8328.7529 -8021.8662 8328.6982 C
-8021.2422 8328.8525 -8021.0107 8328.8174 -8020.4224 8328.7412 C
-8020.5684 8328.7158 L
-8020.6328 8328.8057 -8020.6387 8328.9785 -8020.4922 8329.0049 C
-8020.2725 8328.8916 -8019.6846 8329.1143 -8019.9033 8328.6279 C
-8019.2754 8328.9092 -8018.4385 8328.3994 -8017.8271 8328.7783 C
-8017.8789 8328.6455 -8017.7246 8328.6201 -8017.6602 8328.5303 C
-8017.1089 8328.5244 -8016.5293 8328.7959 -8016.0898 8328.5693 C
-8016.0024 8328.6357 -8016.2295 8328.7959 -8016.0049 8328.8096 C
-8015.8721 8328.7588 -8016.0024 8328.6357 -8015.8384 8328.5615 C
-8014.9453 8328.3135 -8014.0303 8328.8174 -8013.2188 8328.7529 C
-8011.7754 8328.4961 -8010.2695 8328.626 -8008.8867 8328.583 C
-8008.9023 8328.6807 L
-8008.4395 8328.3076 -8007.8159 8329.0625 -8007.4463 8328.501 C
-8007.3369 8328.5938 -8007.0283 8328.5449 -8007.1094 8328.7334 C
-8006.7407 8328.4697 -8006.0771 8328.9814 -8005.5439 8328.6465 C
-8005.5928 8328.6377 -8005.6211 8328.6572 -8005.6777 8328.6992 C
-8005.1392 8328.915 -8004.6641 8328.6201 -8004.0957 8328.8154 C
-8004.1533 8328.8574 -8004.2583 8328.8877 -8004.2754 8328.9854 C
-8004.0557 8329.1729 -8003.7549 8328.5732 -8003.6348 8329.0439 C
-8003.5088 8329.04 -8003.5449 8328.8076 -8003.6221 8328.8213 C
-8002.3779 8329.0049 -8001.0498 8328.7041 -7999.7549 8328.5967 C
-7998.8271 8328.8779 -7999.6982 8329.3896 -7998.9663 8329.0381 C
-7998.9063 8329.1289 -7998.9229 8328.8584 -7998.9131 8328.9561 C
-7998.6299 8328.8242 -7998.4717 8329.4814 -7998.2754 8329.2354 C
-7998.3564 8328.9463 -7998.1445 8329.0732 -7998.1387 8328.8975 C
-7997.5713 8329.085 -7997.4575 8329.3457 -7997.0098 8329.126 C
-7997.0435 8329.2783 L
-7996.5186 8328.8486 -7995.9102 8329.0791 -7995.4673 8328.583 C
-7992.5728 8328.4932 -7989.7983 8328.2178 -7986.9761 8328.1602 C
-7984.1865 8328.2549 -7981.4551 8328.0322 -7978.6221 8328.2959 C
-7977.9585 8328.6953 -7977.9087 8328.6846 -7977.1797 8328.5225 C
-7977.2095 8328.5869 -7977.2549 8328.6025 -7977.2061 8328.6631 C
-7977.1699 8328.335 -7976.6929 8328.6318 -7976.6235 8328.3193 C
-7975.5762 8328.3799 -7974.6113 8328.29 -7973.5337 8328.2881 C
-7973.7041 8328.3232 -7973.7896 8328.5908 -7973.5869 8328.5693 C
-7973.3755 8328.3604 L
-7973.3408 8328.4521 L
-7973.2021 8328.4033 -7973.0513 8328.2412 -7973.1943 8328.1357 C
-7970.4873 8327.8525 -7967.8242 8328.5107 -7965.1729 8328.4297 C
-7964.5435 8328.5664 -7963.6475 8328.4414 -7962.9629 8328.374 C
-7960.9355 8328.8115 -7959.1079 8329.1641 -7957.0479 8328.8584 C
-7957.3169 8329.7061 -7958.1675 8329.9014 V
f
-8048.2578 8329.7021 m
-8048.1855 8329.8662 -8047.9497 8329.9561 -8048.1377 8330.1748 C
-8048.1611 8330.0205 -8048.2822 8329.8486 -8048.2578 8329.7021 C
f
-8041.9619 8331.3896 m
-8041.9536 8331.3408 -8041.8721 8331.4561 -8041.8521 8331.4824 C
-8041.9297 8331.4951 -8042.0024 8331.6328 -8042.0645 8331.5479 C
-8041.9854 8331.5361 -8041.9976 8331.458 -8041.9619 8331.3896 C
f
-8040.3521 8331.4873 m
-8040.3765 8331.6328 -8040.7207 8331.749 -8040.9238 8331.7666 C
-8040.3521 8331.4873 L
f
-8038.8521 8332.0889 m
-8038.7227 8332.2119 -8038.7583 8332.2793 -8038.9326 8332.2754 C
-8038.9453 8332.1982 -8038.8877 8332.1592 -8038.8521 8332.0889 C
f
-8038.7456 8331.7568 m
-8038.6211 8331.7529 -8038.5591 8331.8389 -8038.4985 8331.9229 C
-8038.5029 8331.7969 -8038.7871 8332.001 -8038.7456 8331.7568 C
f
-8035.4893 8332.1807 m
-8035.4111 8332.1689 -8035.2417 8332.0479 -8035.1689 8332.21 C
-8035.2505 8332.0967 -8035.5498 8332.3945 -8035.4893 8332.1807 C
f
-8033.9761 8331.96 m
-8033.9272 8331.9697 -8033.9072 8331.9961 -8033.8506 8331.9561 C
-8033.7607 8332.0225 -8033.8555 8332.1289 -8033.9312 8332.1426 C
-8033.9761 8331.96 L
f
-8006.4287 8331.374 m
-8006.5923 8331.4463 L
-8006.5684 8331.3018 L
-8006.4287 8331.374 L
f
-7994.3574 8331.3662 m
-7994.1943 8331.2744 -7994.2441 8331.5029 -7994.2168 8331.5244 C
-7994.3643 8331.54 -7994.1621 8331.3447 -7994.3574 8331.3662 C
f
-7987.8486 8330.6377 m
-7987.8984 8330.6416 L
-7987.8818 8330.3428 L
-7987.8486 8330.6377 L
f
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 55)0 A
u
1 Ap
0 J 0 j 1 w 4 M []0 d0 XR
-8022.9727 8332.46 m
-8022.9727 8306.4316 L
-8049 8306.4316 L
-8049 8332.46 L
-8022.9727 8332.46 L
n
0 Ap
0 R
0.7084 0.636438 0.515526 0.381872 K
1.125 w-8049 8315.1064 m
-8022.9727 8315.1064 l
S
0.64 0.650477 0.701045 0.510735 K
-8049 8323.7842 m
-8022.9727 8323.7842 l
S
0.597742 0.537865 0.64184 0.350469 K
0.375 w-8049 8319.4453 m
-8022.9727 8319.4453 l
S
0 O
0.597742 0.537865 0.64184 0.350469 k
1 w-8027.5742 8319.4717 m
-8027.3442 8319.2002 -8027.6914 8318.9141 -8028 8318.7031 c
-8028.1118 8318.626 -8028.5215 8318.8389 -8028.7466 8318.6729 c
-8029.0439 8318.4551 -8029.1826 8318.3682 -8029.4824 8318.374 c
-8029.6455 8318.3779 -8030.0435 8318.5078 -8030.1895 8318.5381 c
-8030.5679 8318.6143 -8030.8022 8318.8115 -8031.3672 8318.7148 c
-8031.7344 8318.6514 -8031.8286 8318.5605 -8031.9233 8318.6084 c
-8032.1118 8318.75 -8032.2202 8318.9736 -8032.4258 8319.0225 c
-8032.9575 8319.1494 -8033.3535 8319.1934 -8033.8818 8319.1826 c
-8034.3047 8319.1729 -8035.4185 8319.2412 -8036.2866 8319.1416 c
-8036.6226 8319.1016 -8036.6025 8318.6768 -8036.7695 8318.6729 c
-8036.8618 8318.6709 -8036.7646 8318.9863 -8036.8306 8319.0068 c
-8037.1694 8319.1133 -8037.4702 8317.9629 -8037.6943 8318.0322 c
-8037.8047 8318.0674 -8037.5562 8318.6133 -8037.6729 8318.6416 c
-8037.8975 8318.6973 -8038.2178 8317.6787 -8038.4321 8317.7412 c
-8038.5635 8317.7783 -8038.2886 8318.1982 -8038.4375 8318.2666 c
-8038.6655 8318.3711 -8038.9087 8317.4951 -8039.1064 8317.5938 C
-8039.1543 8317.6416 -8038.7295 8318.3975 -8039.1685 8318.3389 c
-8039.2871 8318.3213 -8039.5054 8317.7734 -8039.5801 8317.7998 c
-8039.6919 8317.8398 -8039.3535 8318.2617 -8039.4897 8318.3877 C
-8039.7681 8318.6143 -8040.3711 8317.623 -8040.4575 8317.6943 c
-8040.5791 8317.7959 -8040.1279 8318.5576 -8040.2695 8318.626 C
-8040.4497 8318.8896 -8041.0142 8318.0127 -8041.0889 8318.0615 c
-8041.1777 8318.1201 -8040.9058 8318.498 -8040.8799 8318.6934 c
-8040.8545 8318.8877 -8040.9966 8319.0215 -8041.2144 8318.9697 c
-8041.4736 8318.9072 -8041.8696 8318.1016 -8041.9727 8318.1953 C
-8042.0791 8318.251 -8041.8682 8318.5381 -8041.7954 8318.7725 c
-8041.7583 8318.8877 -8041.8882 8319.0615 -8042.0298 8319.0615 c
-8042.3135 8319.1094 -8042.6255 8318.458 -8042.7065 8318.5625 c
-8042.7524 8318.6221 -8042.5898 8318.9502 -8042.7295 8319.0479 c
-8042.8994 8319.166 -8043.3115 8318.6982 -8043.4521 8318.7529 C
-8043.5361 8318.8018 -8043.4126 8319.0566 -8043.4927 8319.1133 c
-8043.7295 8319.2793 -8044.0039 8318.8809 -8044.0513 8318.9287 C
-8044.1167 8318.9512 -8044.1201 8318.9961 -8044.2793 8319.1006 c
-8044.4736 8319.2275 -8044.5254 8319.3086 -8044.5425 8319.4248 c
-8044.5654 8319.543 -8044.3135 8319.835 -8044.1655 8319.8096 c
-8043.8223 8319.75 -8043.8662 8320.3096 -8043.6328 8320.1758 c
-8043.5679 8320.1396 -8043.6592 8319.7188 -8043.4199 8319.7256 c
-8043.0488 8319.7383 -8042.9858 8320.2813 -8042.7817 8320.2705 c
-8042.6406 8320.2637 -8042.8521 8319.6436 -8042.6328 8319.7207 c
-8042.4751 8319.7764 -8042.0063 8320.7617 -8041.9795 8320.6699 c
-8041.8975 8320.4023 -8042.0703 8319.8584 -8041.9409 8319.8682 c
-8041.7568 8319.8828 -8041.5078 8320.7773 -8041.2544 8320.8975 c
-8041.1826 8320.9326 -8041.3774 8320.0605 -8041.1958 8320.0566 C
-8041.0898 8320.1064 -8040.7578 8320.9092 -8040.6274 8320.958 C
-8040.5591 8320.9424 -8040.5879 8320.585 -8040.5176 8320.5645 c
-8040.4688 8320.5498 -8040.2817 8321.0254 -8040.21 8320.9834 c
-8040.1055 8320.9229 -8040.2471 8320.4521 -8040.0889 8320.3828 c
-8039.9175 8320.3086 -8039.4878 8321.3525 -8039.3486 8321.2578 c
-8039.2769 8321.21 -8039.3574 8320.6699 -8039.21 8320.7061 c
-8039.0718 8320.7383 -8038.9414 8321.0742 -8038.8081 8321.1025 c
-8038.7295 8321.1182 -8038.7935 8320.6514 -8038.7495 8320.6338 c
-8038.5889 8320.5752 -8038.2329 8321.1318 -8038.0688 8320.9834 c
-8037.8584 8320.7949 -8037.9395 8320.4297 -8037.8345 8320.4424 c
-8037.6274 8320.4658 -8037.4912 8320.7031 -8037.4146 8320.6436 c
-8037.2642 8320.5283 -8037.3281 8320.2393 -8037.0527 8320.1523 c
-8036.8975 8320.1025 -8036.7935 8320.3945 -8036.7495 8320.3906 c
-8036.6738 8320.3877 -8036.6782 8320.29 -8036.6665 8320.1846 c
-8036.6328 8319.9209 -8036.6064 8319.8594 -8036.4878 8319.8369 c
-8036.0854 8319.8135 -8035.5625 8319.7441 -8035.1807 8319.7354 c
-8034.6274 8319.7207 -8033.2607 8319.6973 -8033.1182 8319.6973 c
-8033 8319.6729 -8032.7432 8319.8545 -8032.6689 8319.9209 c
-8032.4678 8320.1055 -8032.2998 8320.3193 -8031.9858 8320.5801 c
-8031.8906 8320.6611 -8031.8081 8320.6406 -8031.7378 8320.6162 c
-8031.5249 8320.5449 -8031.4585 8320.4932 -8031.2202 8320.4619 c
-8030.9175 8320.4189 -8030.4272 8320.5088 -8030.1245 8320.6025 c
-8029.6035 8320.7617 -8029.5264 8320.7842 -8029.0977 8320.7354 c
-8028.6992 8320.6895 -8028.0586 8320.6182 -8028.0479 8320.2705 c
-8028.0415 8320.0557 -8027.9414 8319.9033 -8027.5742 8319.4717 c
f
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 56)0 A
u
1 Ap
0 J 0 j 1 w 4 M []0 d0 XR
-8022.9722 8332.46 m
-8022.9722 8306.4326 L
-8049 8306.4326 L
-8049 8332.46 L
-8022.9722 8332.46 L
n
0 Ap
0 R
0.597742 0.537865 0.64184 0.350469 K
0.375 w-8031.6455 8319.4492 m
-8022.9736 8319.4492 l
S
-8035.9839 8332.46 m
-8035.9839 8323.7842 l
S
0.7084 0.636438 0.515526 0.381872 K
1.125 w-8031.7202 8315.1104 m
-8022.9727 8315.1104 l
S
-8040.3232 8332.459 m
-8040.3232 8323.1055 l
S
0.64 0.650477 0.701045 0.510735 K
-8031.6504 8332.459 m
-8031.6504 8330.0469 l
-8028.9937 8329.8232 -8027.3096 8328.1201 v
-8025.6064 8326.3936 -8025.3774 8323.7881 y
-8022.9727 8323.7881 l
S
*u
1 D
0 O
0.7084 0.636438 0.515526 0.381872 k
1 w-8039.8418 8316.6455 m
-8039.8418 8316.71 -8039.8218 8316.751 -8039.7783 8316.751 c
-8039.6943 8316.751 -8039.4634 8316.4141 -8039.3994 8316.4141 c
-8039.3154 8316.4141 -8039.2729 8316.4561 -8039.2729 8316.5615 c
-8039.2729 8316.6455 -8039.5264 8317.5527 y
-8039.5264 8317.5938 -8039.5264 8317.5938 -8039.5049 8317.5938 c
-8039.4414 8317.5938 -8039.0615 8317.0469 -8038.9351 8317.0469 c
-8038.9146 8317.0469 -8038.8936 8317.0674 -8038.8936 8317.0889 c
-8039.1675 8317.9951 -8039.1675 8318.1855 v
-8039.1675 8318.249 -8039.1675 8318.2705 -8039.1465 8318.2705 c
-8039.1055 8318.2705 -8038.6826 8317.7002 -8038.5562 8317.7002 c
-8038.5352 8317.7002 -8038.5137 8317.7207 -8038.5137 8317.7422 c
-8038.5137 8317.8057 -8038.7666 8318.5439 -8038.7666 8318.7119 c
-8038.7666 8318.7549 -8038.7666 8318.7549 -8038.7446 8318.7549 c
-8038.6826 8318.7549 -8038.4722 8318.5439 -8038.4297 8318.5439 c
-8038.4082 8318.5439 -8038.3882 8318.5654 -8038.3882 8318.5859 c
-8038.3882 8318.6064 -8038.4927 8318.9658 -8038.4927 8319.0498 c
-8038.4927 8319.0713 -8038.4927 8319.0713 -8038.4722 8319.0713 c
-8038.4297 8319.0713 -8038.0918 8318.7119 -8038.0078 8318.7119 c
-8037.9658 8318.7119 -8037.9233 8318.7549 -8037.9233 8318.8389 c
-8037.9233 8318.9873 -8038.1138 8319.7041 -8038.1138 8319.7461 c
-8038.1138 8319.8301 -8038.0918 8319.8721 -8038.0498 8319.8721 c
-8037.9658 8319.8721 -8037.7119 8319.5557 -8037.6494 8319.5557 c
-8037.5854 8319.5557 -8037.5439 8319.5762 -8037.5439 8319.6406 c
-8037.5854 8320.0615 L
-8037.5854 8320.126 -8037.5854 8320.1455 -8037.5654 8320.1455 c
-8037.5225 8320.1455 -8037.2915 8319.8516 -8037.2065 8319.8516 c
-8037.1006 8319.8516 -8037.1006 8320.3369 -8037.1006 8320.3994 c
-8037.1006 8320.5049 -8037.0166 8320.5889 -8036.8896 8320.5889 c
-8036.8057 8320.5889 -8036.4678 8320.3574 -8036.4473 8320.3574 c
-8036.3623 8320.3574 -8036.3198 8320.7998 -8036.2568 8320.7998 c
-8036.1943 8320.7998 -8035.9199 8320.6729 -8035.8564 8320.6729 c
-8035.6455 8320.6729 -8035.6035 8320.7588 -8035.6035 8320.9268 c
-8035.6255 8321.0742 L
-8035.6255 8321.1162 -8035.6035 8321.1162 -8035.5835 8321.1162 c
-8035.4985 8321.1162 -8035.2241 8320.8418 -8035.1392 8320.8418 c
-8034.9287 8320.8418 -8032.8198 8322.9092 -8032.5454 8323.1826 c
-8032.3984 8323.3506 -8032.3984 8323.6465 -8032.3984 8323.7734 c
-8032.3984 8324.6377 -8032.3984 8324.7217 -8032.2295 8324.8057 c
-8031.5977 8325.0596 -8031.5127 8325.207 -8030.7334 8326.4932 c
-8030.6479 8326.6406 -8029.7407 8327.2529 -8029.5942 8327.2529 c
-8029.4878 8327.2529 -8029.1094 8326.999 -8029.0239 8326.999 c
-8028.9194 8326.999 -8028.8135 8327.0625 -8028.8135 8327.2305 c
-8028.8135 8327.6738 -8029.3408 8328.1807 -8029.9312 8328.1807 c
-8030.7534 8328.1807 -8031.0913 8327.4834 -8031.1338 8327.085 c
-8031.1543 8326.9365 -8031.2393 8326.8516 -8031.3447 8326.8516 c
-8031.3862 8326.8516 -8031.4287 8326.8721 -8031.4702 8326.9365 c
-8031.9561 8327.7373 -8032.9473 8328.1807 -8033.7065 8328.1807 c
-8034.7393 8328.1807 -8035.8774 8327.5479 -8036.3418 8327.2744 c
-8036.7842 8327.0215 -8037.4814 8326.8516 -8037.8809 8326.8516 c
-8038.3242 8326.8516 -8038.3662 8326.999 -8038.3662 8327.2529 c
-8038.3662 8327.4004 -8037.9023 8327.8418 -8037.9023 8327.9697 c
-8037.9023 8328.0957 -8038.0498 8328.1807 -8038.4082 8328.1807 c
-8038.8936 8328.1807 -8039.5679 8327.4629 -8039.5679 8326.6836 c
-8039.5679 8326.0713 -8038.7666 8325.5449 -8038.3022 8325.5449 c
-8037.3755 8325.5449 -8037.0942 8325.9033 -8036.5264 8326.3672 c
-8036.4414 8326.4297 -8036.3774 8326.4521 -8036.3359 8326.4521 c
-8036.1895 8326.4521 -8036.1895 8325.3545 -8036.1895 8325.2295 c
-8036.1895 8325.0801 -8036.2729 8325.0176 -8036.3774 8325.0176 c
-8038.7822 8325.0176 -8043.6592 8323.7939 -8045.3672 8317.6377 c
-8045.4297 8317.4258 -8045.5361 8317.3213 -8045.6406 8317.3213 c
-8045.7881 8317.3213 -8046.7793 8318.1641 -8046.7793 8319.7461 c
-8046.7793 8321.5801 -8045.5767 8322.5498 -8044.9873 8322.5498 c
-8044.8398 8322.5498 -8044.6494 8322.5293 -8044.6494 8322.3809 c
-8044.6494 8322.3184 -8044.6929 8322.2549 -8044.7759 8322.1494 c
-8045.1143 8321.8135 -8045.3672 8321.1797 -8045.3672 8320.8633 c
-8045.3672 8320.6514 -8045.2607 8320.4834 -8045.1143 8320.4834 c
-8044.9033 8320.4834 -8044.5654 8321.4326 -8044.46 8321.5801 c
-8044.3335 8321.791 -8043.9546 8322.1709 -8043.2378 8322.6982 c
-8042.4995 8323.2236 -8041.0654 8324.5322 -8041.0654 8325.7969 c
-8041.0654 8327.1689 -8042.1191 8328.0752 -8042.9209 8328.0752 c
-8043.7007 8328.0752 -8044.6714 8327.5479 -8045.0713 8327.0625 c
-8045.7041 8326.3252 -8046.3154 8325.7549 -8046.8218 8325.7549 c
-8047.1592 8325.7549 -8047.3066 8325.9658 -8047.3066 8326.1768 c
-8047.3066 8326.5137 -8047.0537 8326.7461 -8046.5479 8326.7881 c
-8045.9575 8326.8311 -8045.8936 8327.2529 -8045.8936 8327.5889 c
-8045.8936 8327.8633 -8046.4209 8328.1807 -8046.8433 8328.1807 c
-8047.4751 8328.1807 -8048.2974 8327.4834 -8048.2974 8325.6504 c
-8048.2974 8324.1523 -8047.0537 8323.6895 -8046.5679 8323.6895 c
-8046.1265 8323.6895 -8045.4722 8323.7734 -8045.0928 8324.1104 c
-8043.8066 8325.3135 -8043.1318 8325.5225 -8042.5835 8325.5225 c
-8042.3721 8325.5225 -8042.2881 8325.5225 -8042.2881 8325.6709 c
-8042.2881 8325.9873 -8043.0474 8326.1768 -8043.1318 8326.1982 c
-8043.3423 8326.2607 -8043.5103 8326.4932 -8043.5103 8326.7041 c
-8043.5103 8327.1895 -8043.2378 8327.21 -8042.8774 8327.21 c
-8042.5215 8327.21 -8041.8042 8326.8516 -8041.8042 8325.6504 c
-8041.8042 8324.6592 -8042.9424 8323.499 -8043.4058 8323.2676 c
-8043.7007 8323.0977 -8044.5874 8323.1201 -8044.9458 8323.0771 c
-8045.6406 8322.9922 -8047.4121 8322.0449 -8047.4121 8319.5557 c
-8047.4336 8318.1426 -8046.1265 8316.8154 -8045.8511 8316.626 c
-8045.6826 8316.5186 -8045.5986 8316.3926 -8045.5986 8316.2236 c
-8045.5986 8316.0127 -8045.6626 8313.082 -8045.9995 8313.082 c
-8046.4424 8313.082 -8046.5054 8313.082 -8046.5054 8313.2734 c
-8046.21 8314.3682 -8046.21 8314.6006 v
-8046.21 8314.917 -8046.4424 8316.3926 -8047.3066 8316.3926 c
-8047.5806 8316.3926 -8048.0449 8316.1602 -8048.0449 8315.8447 c
-8048.0449 8315.5498 -8047.3486 8314.3477 -8047.3486 8314.0732 c
-8047.3486 8313.5879 -8047.3921 8313.5674 -8048.0654 8312.9561 c
-8048.2559 8312.8086 -8048.3193 8312.6826 -8048.3193 8312.4912 c
-8048.3193 8312.3232 -8048.2134 8312.1953 -8048.0449 8312.1953 c
-8047.8975 8312.1953 -8047.3281 8312.4717 -8047.2017 8312.4912 c
-8047.0752 8312.4912 -8046.8433 8312.5127 -8046.6538 8312.5127 c
-8046.2734 8312.5127 -8046.0845 8312.3857 -8046.0845 8312.2598 c
-8046.0845 8312.0273 -8046.0845 8311.3535 -8046.9263 8309.8975 c
-8047.1167 8309.5605 -8048.2974 8308.2324 -8048.2974 8307.8945 c
-8048.2974 8307.7256 -8048.2134 8307.7061 -8048.1089 8307.7061 c
-8047.9185 8307.7061 -8047.4966 8308.127 -8047.3706 8308.2744 c
-8046.1265 8309.6025 -8045.3042 8311.0361 -8044.9238 8312.3018 c
-8044.8398 8312.6182 -8044.7344 8312.5342 -8044.5654 8312.5557 c
-8042.4155 8313.0615 -8040.3271 8315.5703 -8040.3271 8315.5918 c
-8040.4326 8315.8652 -8040.4326 8315.9287 v
-8040.4326 8316.0557 -8040.3271 8316.0771 -8040.3057 8316.0771 c
-8040.2432 8316.0771 -8040.0527 8315.8652 -8040.0103 8315.8652 c
-8039.9058 8315.8652 -8039.7783 8315.9502 -8039.7783 8316.0977 C
-8039.8418 8316.6455 l
f
0 D
-8043.1104 8315.1494 m
-8042.5215 8315.1494 -8042.0986 8315.2549 -8041.6982 8315.5283 c
-8041.6553 8315.5498 -8041.6138 8315.5703 -8041.5928 8315.5703 c
-8041.5498 8315.5703 -8041.5498 8315.5498 -8041.5498 8315.5068 c
-8041.5498 8315.0859 -8043.4272 8313.126 -8044.5654 8313.126 c
-8044.6289 8313.126 -8044.6714 8313.167 -8044.6714 8313.2295 c
-8044.6714 8313.4199 -8044.5874 8315.4229 -8044.2495 8315.4229 c
-8044.1865 8315.4229 -8044.1016 8315.4014 -8044.0386 8315.3604 c
-8043.7007 8315.2119 -8043.4902 8315.1494 -8043.1104 8315.1494 c
f
-8042.5835 8317.9111 m
-8042.5835 8317.4893 -8042.5625 8317.0254 -8041.8662 8317.0254 c
-8041.2334 8317.0254 -8040.6431 8317.6797 -8040.4961 8317.8271 c
-8040.4326 8317.8691 -8040.3906 8317.8896 -8040.3486 8317.8896 c
-8040.3271 8317.8896 -8040.2847 8317.8477 -8040.2847 8317.8057 c
-8040.2847 8317.3623 -8041.6553 8315.6973 -8043.0049 8315.6973 c
-8043.2578 8315.6973 -8044.2705 8315.8652 -8044.2705 8316.4141 c
-8044.2705 8316.667 -8043.8906 8318.0381 -8043.2793 8319.1133 c
-8041.9087 8321.6016 -8037.7119 8323.1602 -8035.8145 8323.1602 c
-8034.9072 8323.1826 -8034.6118 8322.8662 -8034.4863 8322.8447 c
-8034.4648 8322.8447 -8034.4438 8322.8242 -8034.4233 8322.8242 c
-8034.3174 8322.8242 -8034.1904 8322.8877 -8034.1904 8323.0352 c
-8034.1904 8323.0566 -8034.2119 8323.0566 v
-8034.3594 8324.1943 -8034.4014 8324.5957 -8034.4014 8325.8594 c
-8034.4014 8327.2529 -8034.4014 8327.3789 -8033.4321 8327.3789 c
-8032.1455 8327.3789 -8031.8506 8326.3037 -8031.8506 8326.0713 c
-8031.8506 8325.6504 -8032.4399 8325.3545 -8032.5889 8325.3545 c
-8032.7358 8325.3545 -8032.9058 8325.4619 -8032.9058 8325.6504 c
-8032.9058 8325.9453 -8032.9473 8326.0928 -8033.2207 8326.0928 c
-8033.4951 8326.0928 -8033.4951 8325.7344 -8033.4951 8325.6279 c
-8033.4951 8325.376 -8033.3896 8325.123 -8033.1782 8324.9961 c
-8032.7998 8324.7432 -8032.7998 8324.3428 -8032.7998 8324.1318 c
-8032.7998 8324.0264 -8032.7998 8323.8994 -8032.8198 8323.7939 c
-8032.8418 8323.626 -8034.7817 8321.5801 -8035.0977 8321.5801 c
-8035.2446 8321.5801 -8035.5615 8321.7266 -8036.4258 8321.7266 c
-8038.5767 8321.7266 -8039.5474 8319.999 -8039.7378 8319.4717 c
-8039.9897 8318.7549 -8040.7915 8318.459 -8041.0225 8318.459 c
-8041.2129 8318.459 -8041.2129 8318.502 -8041.2129 8318.9023 c
-8041.2129 8318.9873 -8041.4238 8319.3232 y
-8041.4238 8319.5137 -8040.3906 8319.7666 -8040.3906 8319.9561 c
-8040.3906 8320.126 -8040.5801 8320.1455 -8040.7271 8320.1455 c
-8040.8115 8320.1455 -8041.8882 8320.1455 -8042.3306 8319.3232 c
-8042.5415 8318.9229 -8042.5835 8318.3545 -8042.5835 8317.9111 c
f
1 D
-8038.4927 8315.6553 m
-8038.4927 8315.6113 -8038.5137 8315.5918 -8038.5352 8315.5918 c
-8038.5986 8315.5918 -8038.7666 8315.9287 -8038.8506 8315.9287 c
-8038.9146 8315.9287 -8038.9995 8315.8447 -8039.0415 8315.7383 c
-8039.0615 8315.6553 -8039.1255 8315.1904 -8039.21 8315.1904 c
-8039.2524 8315.1904 -8039.4209 8315.4229 -8039.4634 8315.4229 c
-8039.6104 8315.4229 -8039.7158 8315.1904 -8039.7158 8314.9814 c
-8039.7158 8314.875 -8039.7783 8314.875 -8039.9263 8314.875 c
-8040.5166 8314.875 -8042.1406 8312.7031 -8042.5625 8310.9521 c
-8042.6055 8310.7842 -8042.5835 8310.6367 -8042.8994 8310.5303 c
-8045.0713 8309.7939 -8047.5176 8307.6416 -8047.5176 8307.5156 c
-8047.5176 8307.3682 -8047.4336 8307.2842 -8047.3066 8307.2842 c
-8047.2432 8307.2842 -8047.1592 8307.2842 -8046.6538 8307.6201 c
-8045.7681 8308.2109 -8043.7217 8309.498 -8042.8994 8309.498 c
-8042.6265 8309.498 -8042.6055 8309.1396 -8042.6055 8308.8857 c
-8042.6055 8308.6953 -8042.6265 8308.4639 -8042.6265 8308.3174 c
-8042.6465 8308.043 -8042.9634 8307.7256 -8042.9634 8307.5576 c
-8042.9634 8307.4102 -8042.8154 8307.3047 -8042.6465 8307.3047 c
-8042.4575 8307.3047 -8042.3306 8307.3262 -8042.1606 8307.5156 c
-8041.8662 8307.8525 -8041.7402 8308.001 -8041.4238 8308.001 c
-8041.1914 8308.001 -8040.1377 8307.2842 -8039.8838 8307.2842 c
-8039.5679 8307.2842 -8039.1895 8307.7686 -8039.1895 8308.0645 c
-8039.1895 8308.8018 -8040.0942 8309.3926 -8040.6431 8309.3926 c
-8041.0225 8309.3926 -8041.4438 8309.2666 -8041.6353 8309.0342 c
-8041.6982 8308.9697 -8041.7607 8308.9287 -8041.8242 8308.9287 c
-8041.9937 8308.9287 -8042.1191 8309.3926 -8042.1191 8309.4346 c
-8042.1191 8309.8574 -8039.2729 8309.9189 -8038.9146 8309.9189 c
-8038.7666 8309.9189 -8038.6401 8309.835 -8038.5352 8309.666 c
-8038.3447 8309.3721 -8037.1855 8308.1494 -8035.6255 8308.1494 c
-8033.79 8308.1494 -8032.0825 8309.4121 -8032.0825 8311.3105 c
-8032.0825 8311.417 -8032.1245 8311.9639 -8032.1245 8311.9863 c
-8032.1245 8312.0498 -8031.0063 8313.7988 -8029.6782 8313.7988 c
-8028.6245 8313.7988 -8028.2656 8313.21 -8028.2656 8312.7236 c
-8028.2656 8312.4912 -8028.3711 8311.8389 -8028.8984 8311.8389 c
-8029.1094 8311.8389 -8029.2144 8312.0498 -8029.2144 8312.4287 c
-8029.2144 8312.5127 -8029.0039 8312.8926 -8029.0039 8312.998 c
-8029.0039 8313.04 -8029.0239 8313.0615 -8029.0879 8313.0615 c
-8029.4258 8313.0615 -8029.9521 8312.7031 -8030.1846 8312.0498 c
-8030.4595 8311.333 -8030.8594 8310.6367 -8031.1958 8310.2354 c
-8031.5127 8309.8779 -8031.6182 8309.2861 -8031.6182 8308.9492 c
-8031.6182 8308.4639 -8031.1338 8307.3047 -8029.4878 8307.3047 c
-8028.2871 8307.3047 -8027.4434 8308.043 -8027.4434 8308.6543 c
-8027.4434 8309.2666 -8027.7598 8309.6455 -8028.2026 8309.6455 c
-8028.6455 8309.6455 -8028.9824 8309.3076 -8028.9824 8308.9697 c
-8028.9824 8308.2959 -8029.1514 8308.1494 -8029.4878 8308.1494 c
-8029.6992 8308.1494 -8029.8896 8308.2744 -8029.8896 8308.5908 c
-8029.8896 8308.8232 -8029.8896 8309.2021 -8028.3711 8310.4678 c
-8027.8857 8310.8682 -8027.4214 8311.5654 -8027.4214 8312.3447 c
-8027.4214 8313.1045 -8028.4561 8314.3047 -8029.6362 8314.3047 c
-8030.8594 8314.3047 -8031.6401 8313.5254 -8032.2515 8312.8086 c
-8032.5454 8312.4717 -8033.9814 8310.7842 -8034.0439 8310.7617 c
-8034.2334 8310.6143 -8034.3174 8310.4893 -8034.3174 8310.3623 c
-8034.3174 8310.2568 -8034.2119 8310.1514 -8034.0854 8310.1514 c
-8033.8535 8310.1514 -8032.9058 8311.1006 -8032.8198 8311.1006 c
-8032.7568 8311.1006 -8032.7153 8311.0361 -8032.7153 8310.9521 c
-8032.7153 8310.1934 -8033.8535 8308.7178 -8035.6255 8308.7178 c
-8037.1006 8308.7178 -8037.9863 8309.835 -8037.9863 8309.8779 c
-8037.9863 8310.0039 -8037.8394 8310.1289 -8037.5225 8310.1934 c
-8033.6426 8310.9316 -8030.3955 8314.4814 -8030.3955 8319.0977 c
-8030.3955 8319.2041 -8030.2256 8319.2305 -8030.0786 8319.2305 c
-8029.7202 8319.2305 -8029.0879 8319.3096 -8029.0879 8319.0361 c
-8029.0879 8318.9297 -8029.1294 8318.8037 -8029.1934 8318.6768 c
-8029.5518 8318.1064 -8029.8682 8317.9326 -8029.8682 8316.9814 c
-8029.8682 8316.5186 -8029.4878 8315.9922 -8028.8984 8315.9922 c
-8027.8657 8315.9922 -8027.4214 8317.0254 -8027.4214 8317.2568 c
-8027.4214 8317.4258 -8027.5073 8317.4893 -8027.5903 8317.4893 c
-8027.7178 8317.4893 -8028.2241 8316.9619 -8028.3711 8316.9619 c
-8028.5615 8316.9619 -8028.7085 8317.0039 -8028.7085 8317.4893 c
-8028.7085 8317.8271 -8027.4214 8321.5381 -8027.4214 8322.3389 c
-8027.4214 8322.9092 -8027.7598 8323.6055 -8028.6455 8324.1104 c
-8028.6875 8324.1318 -8028.7085 8324.1523 -8028.7085 8324.1943 c
-8028.7085 8324.2783 -8028.5615 8324.3848 -8028.4126 8324.4258 c
-8027.8018 8324.5957 -8027.4214 8324.7012 -8027.4214 8325.6504 c
-8027.4214 8326.0088 -8027.7598 8326.6836 -8028.0127 8326.6836 c
-8028.2026 8326.6836 -8028.2026 8326.6406 -8028.2026 8326.2822 c
-8028.2026 8326.1348 -8028.2446 8326.0293 -8028.3926 8325.9238 c
-8028.7085 8325.7129 -8028.7295 8325.6709 -8028.8135 8325.1865 c
-8028.8774 8324.8701 -8029.0039 8324.7842 -8030.1426 8324.1523 c
-8030.5854 8323.8789 -8030.6904 8323.6465 -8030.7744 8323.415 c
-8030.8594 8323.2236 -8030.9233 8323.2236 -8031.4287 8323.2236 c
-8031.9561 8323.2236 -8034.5073 8320.5049 -8034.5073 8320.3779 c
-8034.5073 8320.3154 -8034.3809 8320.0195 -8034.3809 8319.9561 c
-8034.3809 8319.8936 -8034.4014 8319.8516 -8034.4438 8319.8516 c
-8034.4863 8319.8516 -8034.6338 8320.0615 -8034.6758 8320.0615 c
-8034.7817 8320.0615 -8034.7817 8319.8721 -8034.7817 8319.7236 c
-8034.7817 8319.6201 -8034.5703 8319.0498 -8034.5703 8318.9023 c
-8034.5703 8318.8184 -8034.5918 8318.7549 -8034.6338 8318.7549 c
-8034.7178 8318.7549 -8034.9072 8319.2178 -8034.9922 8319.2178 c
-8035.0342 8319.2178 -8035.0762 8319.1768 -8035.0762 8319.0498 c
-8035.0762 8318.9023 -8034.8862 8318.1855 y
-8034.8862 8318.1221 -8034.9072 8318.0166 -8034.9502 8318.0166 c
-8035.0342 8318.0166 -8035.1826 8318.417 -8035.2666 8318.417 c
-8035.3286 8318.417 -8035.3926 8318.333 -8035.3926 8318.1855 c
-8035.3926 8318.1006 -8035.2446 8317.6797 -8035.2446 8317.5742 c
-8035.2446 8317.5107 -8035.2666 8317.4463 -8035.3086 8317.4463 c
-8035.3506 8317.4463 -8035.5835 8318.0596 -8035.7095 8318.0596 c
-8035.7935 8318.0596 -8035.8994 8317.9521 -8035.8994 8317.8477 c
-8035.8994 8317.7637 -8035.7729 8317.4053 -8035.7729 8317.3213 c
-8035.7729 8317.2783 -8035.7729 8317.2568 -8035.7935 8317.2568 c
-8035.8774 8317.2568 -8036.0254 8317.7422 -8036.1104 8317.7422 c
-8036.3418 8317.7422 -8036.3623 8317.3213 -8036.3623 8317.1309 c
-8036.3623 8317.0469 -8036.2998 8316.71 -8036.2998 8316.6455 c
-8036.2998 8316.583 -8036.3198 8316.5615 -8036.3418 8316.5615 c
-8036.4897 8316.5615 -8036.6782 8317.3623 -8036.8271 8317.3623 c
-8037.0386 8317.3623 -8037.0386 8317.1729 -8037.0386 8316.9414 c
-8037.0166 8316.4141 L
-8037.0166 8316.3926 -8037.0386 8316.3721 y
-8037.0586 8316.3721 -8037.1006 8316.3926 -8037.1226 8316.4561 c
-8037.1855 8316.667 -8037.3115 8317.0889 -8037.5225 8317.0889 c
-8037.6694 8317.0889 -8037.8174 8316.9199 -8037.8174 8316.7734 c
-8037.8174 8316.54 -8037.7119 8316.1602 -8037.7119 8315.9287 c
-8037.7119 8315.8652 -8037.7334 8315.8447 -8037.7754 8315.8447 c
-8037.8608 8315.8447 -8037.9863 8316.2861 -8038.0278 8316.3721 c
-8038.0918 8316.4561 -8038.1553 8316.4775 -8038.2192 8316.4775 c
-8038.5352 8316.4775 -8038.5352 8316.1602 -8038.5352 8316.0127 C
-8038.4927 8315.6553 l
f
0 D
-8039.8633 8311.29 m
-8039.8633 8311.0576 -8041.8042 8310.8682 -8041.8662 8310.8682 c
-8041.9722 8310.8682 -8042.0352 8310.9316 -8042.0352 8311.0361 c
-8042.0352 8311.9014 -8040.2847 8314.1367 -8039.8633 8314.1367 c
-8039.7998 8314.1367 -8039.7783 8314.1162 -8039.7783 8314.0527 c
-8040.2002 8312.8086 -8040.2002 8312.5557 v
-8040.2002 8312.1758 -8040.0942 8311.9229 -8039.9058 8311.501 c
-8039.8838 8311.417 -8039.8633 8311.3535 -8039.8633 8311.29 c
f
-8031.1338 8322.7393 m
-8030.9858 8322.7393 -8030.4795 8322.2344 -8030.3325 8322.2344 c
-8030.2065 8322.2344 -8030.0791 8322.3184 -8030.0791 8322.4658 c
-8030.0791 8322.5498 -8030.2695 8322.9922 -8030.2695 8323.0977 c
-8030.2695 8323.4561 -8029.8896 8323.7529 -8029.5098 8323.7529 c
-8029.1094 8323.7529 -8027.9702 8323.4355 -8027.9702 8322.2119 c
-8027.9702 8321.1162 -8028.3926 8321.1162 -8030.0366 8321.1162 c
-8030.3955 8321.1162 -8032.0615 8321.3057 -8032.3145 8321.3057 c
-8032.4399 8321.3057 -8032.4834 8321.1367 -8032.4834 8321.0098 c
-8032.4834 8320.9688 -8032.4834 8320.9268 -8032.4614 8320.9053 c
-8032.3984 8320.5264 -8032.1675 8319.9775 -8032.1675 8319.5977 c
-8032.1675 8315.1494 -8036.2998 8311.29 -8038.7666 8311.29 c
-8039.4209 8311.29 -8039.6519 8312.0918 -8039.6519 8312.5127 c
-8039.6519 8314.2422 -8037.6694 8315.2744 -8037.4175 8315.2744 c
-8037.3545 8315.2744 -8037.3335 8315.2549 -8037.3335 8315.2119 c
-8037.3335 8315.1699 -8037.3545 8315.1279 -8037.3975 8315.0859 c
-8037.5225 8314.917 -8038.0498 8314.3047 -8038.0498 8313.6729 c
-8038.0498 8313.335 -8037.7554 8312.8926 -8036.9951 8312.8926 c
-8035.7305 8312.8926 -8035.1826 8314.2422 -8035.1826 8314.6006 c
-8035.1826 8314.749 -8035.2446 8314.959 -8035.4561 8314.959 c
-8035.6035 8314.959 -8036.0049 8314.3047 -8036.1519 8314.3047 c
-8036.2158 8314.3047 -8036.4473 8314.4316 -8036.5103 8314.4316 c
-8036.5942 8314.4316 -8036.6582 8314.4111 -8036.7422 8314.4111 c
-8036.8057 8314.4111 -8036.8481 8314.4736 -8036.8481 8314.5791 c
-8036.8481 8314.9385 -8036.3623 8315.5068 -8035.8774 8315.7607 c
-8034.9722 8316.2236 -8033.6226 8317.5527 -8033.6226 8319.0078 c
-8033.6226 8319.4287 -8033.6846 8319.8301 -8033.6846 8320.167 c
-8033.6846 8320.7158 -8032.7568 8321.5801 -8031.8081 8322.4658 c
-8031.6401 8322.6133 -8031.3862 8322.7393 -8031.1338 8322.7393 c
f
*U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 57)0 A
u
1 Ap
0 J 0 j 1 w 4 M []0 d0 XR
-8022.9722 8332.46 m
-8022.9722 8306.4326 L
-8049 8306.4326 L
-8049 8332.46 L
-8022.9722 8332.46 L
n
0 Ap
0 R
0.597742 0.537865 0.64184 0.350469 K
0.375 w-8031.6455 8319.4492 m
-8022.9736 8319.4492 l
S
-8035.9839 8332.46 m
-8035.9839 8323.7842 l
S
0.64 0.650477 0.701045 0.510735 K
1.125 w-8031.7202 8315.1104 m
-8022.9727 8315.1104 l
S
-8040.3232 8332.46 m
-8040.3232 8323.1055 l
S
0.7084 0.636438 0.515526 0.381872 K
-8031.6504 8332.46 m
-8031.6504 8330.0469 l
-8028.9937 8329.8232 -8027.3096 8328.1201 v
-8025.6064 8326.3936 -8025.3774 8323.7881 y
-8022.9727 8323.7881 l
S
*u
0 O
0.7084 0.636438 0.515526 0.381872 k
1 w-8039.7783 8316.0977 m
-8039.7783 8315.9502 -8039.9058 8315.8652 -8040.0103 8315.8652 c
-8040.0527 8315.8652 -8040.2432 8316.0771 -8040.3057 8316.0771 c
-8040.3271 8316.0771 -8040.4326 8316.0557 -8040.4326 8315.9287 c
-8040.4326 8315.8652 -8040.3271 8315.5918 y
-8040.3271 8315.5703 -8042.4155 8313.0615 -8044.5654 8312.5557 c
-8044.7344 8312.5342 -8044.8398 8312.6182 -8044.9238 8312.3018 c
-8045.3042 8311.0361 -8046.1265 8309.6025 -8047.3706 8308.2744 c
-8047.4966 8308.1279 -8047.9185 8307.7061 -8048.1089 8307.7061 c
-8048.2134 8307.7061 -8048.2974 8307.7256 -8048.2974 8307.8945 c
-8048.2974 8308.2324 -8047.1167 8309.5605 -8046.9263 8309.8975 c
-8046.0845 8311.3535 -8046.0845 8312.0273 -8046.0845 8312.2598 c
-8046.0845 8312.3857 -8046.2734 8312.5127 -8046.6538 8312.5127 c
-8046.8433 8312.5127 -8047.0752 8312.4912 -8047.2017 8312.4912 c
-8047.3281 8312.4717 -8047.8975 8312.1953 -8048.0449 8312.1953 c
-8048.2134 8312.1953 -8048.3193 8312.3232 -8048.3193 8312.4912 c
-8048.3193 8312.6826 -8048.2559 8312.8086 -8048.0654 8312.9561 c
-8047.3921 8313.5674 -8047.3486 8313.5879 -8047.3486 8314.0732 c
-8047.3486 8314.3477 -8048.0449 8315.5498 -8048.0449 8315.8447 c
-8048.0449 8316.1602 -8047.5806 8316.3926 -8047.3066 8316.3926 c
-8046.4424 8316.3926 -8046.21 8314.917 -8046.21 8314.6006 c
-8046.21 8314.3682 -8046.5054 8313.2734 y
-8046.5054 8313.082 -8046.4424 8313.082 -8045.9995 8313.082 c
-8045.6626 8313.082 -8045.5986 8316.0127 -8045.5986 8316.2236 c
-8045.5986 8316.3926 -8045.6826 8316.5186 -8045.8511 8316.626 c
-8046.1265 8316.8154 -8047.4336 8318.1426 -8047.4121 8319.5557 c
-8047.4121 8322.0449 -8045.6406 8322.9922 -8044.9458 8323.0771 c
-8044.5874 8323.1201 -8043.7007 8323.0977 -8043.4058 8323.2676 c
-8042.9424 8323.499 -8041.8042 8324.6592 -8041.8042 8325.6504 c
-8041.8042 8326.8516 -8042.5215 8327.21 -8042.8774 8327.21 c
-8043.2378 8327.21 -8043.5103 8327.1895 -8043.5103 8326.7041 c
-8043.5103 8326.4932 -8043.3423 8326.2607 -8043.1318 8326.1982 c
-8043.0474 8326.1768 -8042.2881 8325.9873 -8042.2881 8325.6709 c
-8042.2881 8325.5225 -8042.3721 8325.5225 -8042.5835 8325.5225 c
-8043.1318 8325.5225 -8043.8066 8325.3135 -8045.0928 8324.1104 c
-8045.4722 8323.7734 -8046.1265 8323.6895 -8046.5679 8323.6895 c
-8047.0537 8323.6895 -8048.2974 8324.1523 -8048.2974 8325.6504 c
-8048.2974 8327.4834 -8047.4751 8328.1807 -8046.8433 8328.1807 c
-8046.4209 8328.1807 -8045.8936 8327.8633 -8045.8936 8327.5889 c
-8045.8936 8327.2529 -8045.9575 8326.8311 -8046.5479 8326.7881 c
-8047.0537 8326.7461 -8047.3066 8326.5137 -8047.3066 8326.1768 c
-8047.3066 8325.9658 -8047.1592 8325.7549 -8046.8218 8325.7549 c
-8046.3154 8325.7549 -8045.7041 8326.3252 -8045.0713 8327.0625 c
-8044.6714 8327.5479 -8043.7007 8328.0752 -8042.9209 8328.0752 c
-8042.1191 8328.0752 -8041.0654 8327.1689 -8041.0654 8325.7969 c
-8041.0654 8324.5322 -8042.4995 8323.2236 -8043.2378 8322.6982 c
-8043.9546 8322.1709 -8044.3335 8321.791 -8044.46 8321.5801 c
-8044.5654 8321.4326 -8044.9033 8320.4834 -8045.1143 8320.4834 c
-8045.2607 8320.4834 -8045.3672 8320.6514 -8045.3672 8320.8633 c
-8045.3672 8321.1797 -8045.1143 8321.8135 -8044.7759 8322.1494 c
-8044.6929 8322.2549 -8044.6494 8322.3184 -8044.6494 8322.3809 c
-8044.6494 8322.5293 -8044.8398 8322.5498 -8044.9873 8322.5498 c
-8045.5767 8322.5498 -8046.7793 8321.5801 -8046.7793 8319.7461 c
-8046.7793 8318.1641 -8045.7881 8317.3213 -8045.6406 8317.3213 c
-8045.5361 8317.3213 -8045.4297 8317.4258 -8045.3672 8317.6377 c
-8043.6592 8323.7939 -8038.7822 8325.0176 -8036.3774 8325.0176 c
-8036.2729 8325.0176 -8036.1895 8325.0801 -8036.1895 8325.2295 c
-8036.1895 8325.3545 -8036.1895 8326.4521 -8036.3359 8326.4521 c
-8036.3774 8326.4521 -8036.4414 8326.4297 -8036.5264 8326.3672 c
-8037.0942 8325.9033 -8037.3755 8325.5449 -8038.3022 8325.5449 c
-8038.7666 8325.5449 -8039.5679 8326.0713 -8039.5679 8326.6836 c
-8039.5679 8327.4629 -8038.8936 8328.1807 -8038.4082 8328.1807 c
-8038.0498 8328.1807 -8037.9023 8328.0957 -8037.9023 8327.9697 c
-8037.9023 8327.8418 -8038.3662 8327.4004 -8038.3662 8327.2529 c
-8038.3662 8326.999 -8038.3242 8326.8516 -8037.8809 8326.8516 c
-8037.4814 8326.8516 -8036.7842 8327.0215 -8036.3418 8327.2744 c
-8035.8774 8327.5479 -8034.7393 8328.1807 -8033.7065 8328.1807 c
-8032.9473 8328.1807 -8031.9561 8327.7373 -8031.4702 8326.9365 c
-8031.4287 8326.8721 -8031.3862 8326.8516 -8031.3447 8326.8516 c
-8031.2393 8326.8516 -8031.1543 8326.9365 -8031.1338 8327.085 c
-8031.0913 8327.4834 -8030.7534 8328.1807 -8029.9312 8328.1807 c
-8029.3408 8328.1807 -8028.8135 8327.6738 -8028.8135 8327.2305 c
-8028.8135 8327.0625 -8028.9194 8326.999 -8029.0239 8326.999 c
-8029.1094 8326.999 -8029.4878 8327.2529 -8029.5942 8327.2529 c
-8029.7407 8327.2529 -8030.6479 8326.6406 -8030.7334 8326.4932 c
-8031.5127 8325.207 -8031.5977 8325.0596 -8032.2295 8324.8057 c
-8032.3984 8324.7217 -8032.3984 8324.6377 -8032.3984 8323.7734 c
-8032.3984 8323.6465 -8032.3984 8323.3506 -8032.5454 8323.1826 c
-8032.8198 8322.9092 -8034.9287 8320.8418 -8035.1392 8320.8418 c
-8035.2241 8320.8418 -8035.4985 8321.1162 -8035.5835 8321.1162 c
-8035.6035 8321.1162 -8035.6255 8321.1162 -8035.6255 8321.0742 C
-8035.6035 8320.9268 l
-8035.6035 8320.7588 -8035.6455 8320.6729 -8035.8564 8320.6729 c
-8035.9199 8320.6729 -8036.1943 8320.7998 -8036.2568 8320.7998 c
-8036.3198 8320.7998 -8036.3623 8320.3574 -8036.4473 8320.3574 c
-8036.4678 8320.3574 -8036.8057 8320.5889 -8036.8896 8320.5889 c
-8037.0166 8320.5889 -8037.1006 8320.5049 -8037.1006 8320.3994 c
-8037.1006 8320.3369 -8037.1006 8319.8516 -8037.2065 8319.8516 c
-8037.2915 8319.8516 -8037.5225 8320.1455 -8037.5654 8320.1455 c
-8037.5854 8320.1455 -8037.5854 8320.126 -8037.5854 8320.0615 C
-8037.5439 8319.6406 l
-8037.5439 8319.5762 -8037.5854 8319.5557 -8037.6494 8319.5557 c
-8037.7119 8319.5557 -8037.9658 8319.8721 -8038.0498 8319.8721 c
-8038.0918 8319.8721 -8038.1138 8319.8301 -8038.1138 8319.7461 c
-8038.1138 8319.7041 -8037.9233 8318.9873 -8037.9233 8318.8389 c
-8037.9233 8318.7549 -8037.9658 8318.7119 -8038.0078 8318.7119 c
-8038.0918 8318.7119 -8038.4297 8319.0713 -8038.4722 8319.0713 c
-8038.4927 8319.0713 -8038.4927 8319.0713 -8038.4927 8319.0498 c
-8038.4927 8318.9658 -8038.3882 8318.6064 -8038.3882 8318.5869 c
-8038.3882 8318.5654 -8038.4082 8318.5439 -8038.4297 8318.5439 c
-8038.4722 8318.5439 -8038.6826 8318.7549 -8038.7446 8318.7549 c
-8038.7666 8318.7549 -8038.7666 8318.7549 -8038.7666 8318.7119 c
-8038.7666 8318.5439 -8038.5137 8317.8057 -8038.5137 8317.7422 c
-8038.5137 8317.7207 -8038.5352 8317.7002 -8038.5562 8317.7002 c
-8038.6826 8317.7002 -8039.1055 8318.2705 -8039.1465 8318.2705 c
-8039.1675 8318.2705 -8039.1675 8318.249 -8039.1675 8318.1855 c
-8039.1675 8317.9951 -8038.8936 8317.0889 y
-8038.8936 8317.0674 -8038.9146 8317.0469 -8038.9351 8317.0469 c
-8039.0615 8317.0469 -8039.4414 8317.5938 -8039.5049 8317.5938 c
-8039.5264 8317.5938 -8039.5264 8317.5938 -8039.5264 8317.5527 c
-8039.2729 8316.6455 -8039.2729 8316.5615 v
-8039.2729 8316.4561 -8039.3154 8316.4141 -8039.3994 8316.4141 c
-8039.4634 8316.4141 -8039.6943 8316.751 -8039.7783 8316.751 c
-8039.8218 8316.751 -8039.8418 8316.71 -8039.8418 8316.6455 c
-8039.7783 8316.0977 L
f
1 D
-8044.0386 8315.3604 m
-8044.1016 8315.4014 -8044.1865 8315.4229 -8044.2495 8315.4229 c
-8044.5874 8315.4229 -8044.6714 8313.4199 -8044.6714 8313.2295 c
-8044.6714 8313.167 -8044.6289 8313.126 -8044.5654 8313.126 c
-8043.4272 8313.126 -8041.5498 8315.0869 -8041.5498 8315.5068 c
-8041.5498 8315.5498 -8041.5498 8315.5703 -8041.5928 8315.5703 c
-8041.6138 8315.5703 -8041.6553 8315.5498 -8041.6982 8315.5283 c
-8042.0986 8315.2549 -8042.5215 8315.1494 -8043.1104 8315.1494 c
-8043.4902 8315.1494 -8043.7007 8315.2119 -8044.0386 8315.3604 c
f
-8042.3306 8319.3232 m
-8041.8882 8320.1455 -8040.8115 8320.1455 -8040.7271 8320.1455 c
-8040.5801 8320.1455 -8040.3906 8320.126 -8040.3906 8319.9561 c
-8040.3906 8319.7666 -8041.4238 8319.5137 -8041.4238 8319.3232 c
-8041.2129 8318.9873 -8041.2129 8318.9023 v
-8041.2129 8318.5029 -8041.2129 8318.46 -8041.0225 8318.46 c
-8040.7915 8318.46 -8039.9897 8318.7549 -8039.7378 8319.4717 c
-8039.5474 8319.999 -8038.5767 8321.7266 -8036.4258 8321.7266 c
-8035.5615 8321.7266 -8035.2446 8321.5801 -8035.0977 8321.5801 c
-8034.7817 8321.5801 -8032.8418 8323.626 -8032.8198 8323.7939 c
-8032.7998 8323.8994 -8032.7998 8324.0264 -8032.7998 8324.1318 c
-8032.7998 8324.3428 -8032.7998 8324.7432 -8033.1782 8324.9961 c
-8033.3896 8325.123 -8033.4951 8325.376 -8033.4951 8325.6279 c
-8033.4951 8325.7344 -8033.4951 8326.0928 -8033.2207 8326.0928 c
-8032.9473 8326.0928 -8032.9058 8325.9453 -8032.9058 8325.6504 c
-8032.9058 8325.4619 -8032.7358 8325.3545 -8032.5889 8325.3545 c
-8032.4399 8325.3545 -8031.8506 8325.6504 -8031.8506 8326.0713 c
-8031.8506 8326.3037 -8032.1455 8327.3789 -8033.4321 8327.3789 c
-8034.4014 8327.3789 -8034.4014 8327.2529 -8034.4014 8325.8594 c
-8034.4014 8324.5957 -8034.3594 8324.1943 -8034.2119 8323.0566 c
-8034.1904 8323.0566 -8034.1904 8323.0352 y
-8034.1904 8322.8877 -8034.3174 8322.8242 -8034.4233 8322.8242 c
-8034.4438 8322.8242 -8034.4648 8322.8447 -8034.4863 8322.8447 c
-8034.6118 8322.8662 -8034.9072 8323.1826 -8035.8145 8323.1602 c
-8037.7119 8323.1602 -8041.9087 8321.6016 -8043.2793 8319.1133 c
-8043.8906 8318.0381 -8044.2705 8316.667 -8044.2705 8316.4141 c
-8044.2705 8315.8652 -8043.2578 8315.6973 -8043.0049 8315.6973 c
-8041.6553 8315.6973 -8040.2847 8317.3623 -8040.2847 8317.8057 c
-8040.2847 8317.8477 -8040.3271 8317.8896 -8040.3486 8317.8896 c
-8040.3906 8317.8896 -8040.4326 8317.8691 -8040.4961 8317.8271 c
-8040.6431 8317.6797 -8041.2334 8317.0254 -8041.8662 8317.0254 c
-8042.5625 8317.0254 -8042.5835 8317.4893 -8042.5835 8317.9111 c
-8042.5835 8318.3545 -8042.5415 8318.9229 -8042.3306 8319.3232 c
f
0 D
-8038.5352 8316.0127 m
-8038.5352 8316.1602 -8038.5352 8316.4775 -8038.2192 8316.4775 c
-8038.1553 8316.4775 -8038.0918 8316.4561 -8038.0278 8316.3721 c
-8037.9863 8316.2861 -8037.8608 8315.8447 -8037.7754 8315.8447 c
-8037.7334 8315.8447 -8037.7119 8315.8652 -8037.7119 8315.9287 c
-8037.7119 8316.1602 -8037.8174 8316.54 -8037.8174 8316.7734 c
-8037.8174 8316.9199 -8037.6694 8317.0889 -8037.5225 8317.0889 c
-8037.3115 8317.0889 -8037.1855 8316.667 -8037.1226 8316.4561 c
-8037.1006 8316.3926 -8037.0586 8316.3721 -8037.0386 8316.3721 c
-8037.0166 8316.3926 -8037.0166 8316.4141 V
-8037.0386 8316.9414 l
-8037.0386 8317.1729 -8037.0386 8317.3623 -8036.8271 8317.3623 c
-8036.6782 8317.3623 -8036.4897 8316.5615 -8036.3418 8316.5615 c
-8036.3198 8316.5615 -8036.2998 8316.583 -8036.2998 8316.6455 c
-8036.2998 8316.71 -8036.3623 8317.0469 -8036.3623 8317.1309 c
-8036.3623 8317.3213 -8036.3418 8317.7422 -8036.1104 8317.7422 c
-8036.0254 8317.7422 -8035.8774 8317.2568 -8035.7935 8317.2568 c
-8035.7729 8317.2568 -8035.7729 8317.2783 -8035.7729 8317.3213 c
-8035.7729 8317.4053 -8035.8994 8317.7637 -8035.8994 8317.8477 c
-8035.8994 8317.9521 -8035.7935 8318.0596 -8035.7095 8318.0596 c
-8035.5835 8318.0596 -8035.3506 8317.4463 -8035.3086 8317.4463 c
-8035.2666 8317.4463 -8035.2446 8317.5107 -8035.2446 8317.5742 c
-8035.2446 8317.6797 -8035.3926 8318.1006 -8035.3926 8318.1855 c
-8035.3926 8318.333 -8035.3286 8318.417 -8035.2666 8318.417 c
-8035.1826 8318.417 -8035.0342 8318.0166 -8034.9502 8318.0166 c
-8034.9072 8318.0166 -8034.8862 8318.1221 -8034.8862 8318.1855 c
-8035.0762 8318.9023 -8035.0762 8319.0498 v
-8035.0762 8319.1768 -8035.0342 8319.2178 -8034.9922 8319.2178 c
-8034.9072 8319.2178 -8034.7178 8318.7549 -8034.6338 8318.7549 c
-8034.5918 8318.7549 -8034.5703 8318.8184 -8034.5703 8318.9023 c
-8034.5703 8319.0498 -8034.7817 8319.6201 -8034.7817 8319.7236 c
-8034.7817 8319.8721 -8034.7817 8320.0615 -8034.6758 8320.0615 c
-8034.6338 8320.0615 -8034.4863 8319.8516 -8034.4438 8319.8516 c
-8034.4014 8319.8516 -8034.3809 8319.8936 -8034.3809 8319.9561 c
-8034.3809 8320.0195 -8034.5073 8320.3154 -8034.5073 8320.3779 c
-8034.5073 8320.5049 -8031.9561 8323.2236 -8031.4287 8323.2236 c
-8030.9233 8323.2236 -8030.8594 8323.2236 -8030.7744 8323.415 c
-8030.6904 8323.6465 -8030.5854 8323.8789 -8030.1426 8324.1523 c
-8029.0039 8324.7842 -8028.8774 8324.8701 -8028.8135 8325.1865 c
-8028.7295 8325.6709 -8028.7085 8325.7129 -8028.3926 8325.9238 c
-8028.2446 8326.0293 -8028.2026 8326.1348 -8028.2026 8326.2822 c
-8028.2026 8326.6406 -8028.2026 8326.6836 -8028.0127 8326.6836 c
-8027.7598 8326.6836 -8027.4214 8326.0088 -8027.4214 8325.6504 c
-8027.4214 8324.7012 -8027.8018 8324.5957 -8028.4126 8324.4258 c
-8028.5615 8324.3848 -8028.7085 8324.2783 -8028.7085 8324.1943 c
-8028.7085 8324.1523 -8028.6875 8324.1318 -8028.6455 8324.1104 c
-8027.7598 8323.6055 -8027.4214 8322.9092 -8027.4214 8322.3389 c
-8027.4214 8321.5381 -8028.7085 8317.8271 -8028.7085 8317.4893 c
-8028.7085 8317.0039 -8028.5615 8316.9619 -8028.3711 8316.9619 c
-8028.2241 8316.9619 -8027.7178 8317.4893 -8027.5903 8317.4893 c
-8027.5073 8317.4893 -8027.4214 8317.4258 -8027.4214 8317.2568 c
-8027.4214 8317.0254 -8027.8657 8315.9922 -8028.8984 8315.9922 c
-8029.4878 8315.9922 -8029.8682 8316.5186 -8029.8682 8316.9814 c
-8029.8682 8317.9326 -8029.5518 8318.1064 -8029.1934 8318.6768 c
-8029.1294 8318.8037 -8029.0879 8318.9297 -8029.0879 8319.0361 c
-8029.0879 8319.3096 -8029.7202 8319.2305 -8030.0786 8319.2305 c
-8030.2256 8319.2305 -8030.3955 8319.2041 -8030.3955 8319.0977 c
-8030.3955 8314.4814 -8033.6426 8310.9316 -8037.5225 8310.1934 c
-8037.8394 8310.1289 -8037.9863 8310.0039 -8037.9863 8309.8779 c
-8037.9863 8309.835 -8037.1006 8308.7178 -8035.6255 8308.7178 c
-8033.8535 8308.7178 -8032.7153 8310.1934 -8032.7153 8310.9521 c
-8032.7153 8311.0361 -8032.7568 8311.1006 -8032.8198 8311.1006 c
-8032.9058 8311.1006 -8033.8535 8310.1514 -8034.0854 8310.1514 c
-8034.2119 8310.1514 -8034.3174 8310.2568 -8034.3174 8310.3623 c
-8034.3174 8310.4893 -8034.2334 8310.6143 -8034.0439 8310.7617 c
-8033.9814 8310.7842 -8032.5454 8312.4717 -8032.2515 8312.8086 c
-8031.6401 8313.5254 -8030.8594 8314.3047 -8029.6362 8314.3047 c
-8028.4561 8314.3047 -8027.4214 8313.1045 -8027.4214 8312.3447 c
-8027.4214 8311.5654 -8027.8857 8310.8682 -8028.3711 8310.4678 c
-8029.8896 8309.2021 -8029.8896 8308.8232 -8029.8896 8308.5908 c
-8029.8896 8308.2744 -8029.6992 8308.1494 -8029.4878 8308.1494 c
-8029.1514 8308.1494 -8028.9824 8308.2959 -8028.9824 8308.9697 c
-8028.9824 8309.3076 -8028.6455 8309.6455 -8028.2026 8309.6455 c
-8027.7598 8309.6455 -8027.4434 8309.2666 -8027.4434 8308.6543 c
-8027.4434 8308.0439 -8028.2871 8307.3047 -8029.4878 8307.3047 c
-8031.1338 8307.3047 -8031.6182 8308.4639 -8031.6182 8308.9492 c
-8031.6182 8309.2861 -8031.5127 8309.8779 -8031.1958 8310.2354 c
-8030.8594 8310.6367 -8030.4595 8311.333 -8030.1846 8312.0498 c
-8029.9521 8312.7031 -8029.4258 8313.0615 -8029.0879 8313.0615 c
-8029.0239 8313.0615 -8029.0039 8313.04 -8029.0039 8312.998 c
-8029.0039 8312.8926 -8029.2144 8312.5127 -8029.2144 8312.4287 c
-8029.2144 8312.0498 -8029.1094 8311.8389 -8028.8984 8311.8389 c
-8028.3711 8311.8389 -8028.2656 8312.4912 -8028.2656 8312.7236 c
-8028.2656 8313.21 -8028.6245 8313.7988 -8029.6782 8313.7988 c
-8031.0063 8313.7988 -8032.1245 8312.0498 -8032.1245 8311.9863 c
-8032.1245 8311.9639 -8032.0825 8311.417 -8032.0825 8311.3105 c
-8032.0825 8309.4121 -8033.79 8308.1494 -8035.6255 8308.1494 c
-8037.1855 8308.1494 -8038.3447 8309.3721 -8038.5352 8309.666 c
-8038.6401 8309.835 -8038.7666 8309.9189 -8038.9146 8309.9189 c
-8039.2729 8309.9189 -8042.1191 8309.8574 -8042.1191 8309.4346 c
-8042.1191 8309.3926 -8041.9937 8308.9287 -8041.8242 8308.9287 c
-8041.7607 8308.9287 -8041.6982 8308.9697 -8041.6353 8309.0342 c
-8041.4438 8309.2666 -8041.0225 8309.3926 -8040.6431 8309.3926 c
-8040.0942 8309.3926 -8039.1895 8308.8018 -8039.1895 8308.0645 c
-8039.1895 8307.7686 -8039.5679 8307.2842 -8039.8838 8307.2842 c
-8040.1377 8307.2842 -8041.1914 8308.001 -8041.4238 8308.001 c
-8041.7402 8308.001 -8041.8662 8307.8525 -8042.1606 8307.5156 c
-8042.3306 8307.3262 -8042.4575 8307.3047 -8042.6465 8307.3047 c
-8042.8154 8307.3047 -8042.9634 8307.4102 -8042.9634 8307.5576 c
-8042.9634 8307.7256 -8042.6465 8308.0439 -8042.6265 8308.3174 c
-8042.6265 8308.4639 -8042.6055 8308.6953 -8042.6055 8308.8857 c
-8042.6055 8309.1396 -8042.6265 8309.498 -8042.8994 8309.498 c
-8043.7217 8309.498 -8045.7681 8308.2119 -8046.6538 8307.6201 c
-8047.1592 8307.2842 -8047.2432 8307.2842 -8047.3066 8307.2842 c
-8047.4336 8307.2842 -8047.5176 8307.3682 -8047.5176 8307.5156 c
-8047.5176 8307.6416 -8045.0713 8309.7939 -8042.8994 8310.5303 c
-8042.5835 8310.6367 -8042.6055 8310.7842 -8042.5625 8310.9521 c
-8042.1406 8312.7031 -8040.5166 8314.876 -8039.9263 8314.876 c
-8039.7783 8314.876 -8039.7158 8314.876 -8039.7158 8314.9814 c
-8039.7158 8315.1904 -8039.6104 8315.4229 -8039.4634 8315.4229 c
-8039.4209 8315.4229 -8039.2524 8315.1904 -8039.21 8315.1904 c
-8039.1255 8315.1904 -8039.0615 8315.6553 -8039.0415 8315.7383 c
-8038.9995 8315.8447 -8038.9146 8315.9287 -8038.8506 8315.9287 c
-8038.7666 8315.9287 -8038.5986 8315.5918 -8038.5352 8315.5918 c
-8038.5137 8315.5918 -8038.4927 8315.6113 -8038.4927 8315.6553 c
-8038.5352 8316.0127 L
f
1 D
-8039.9058 8311.501 m
-8040.0942 8311.9229 -8040.2002 8312.1758 -8040.2002 8312.5557 c
-8040.2002 8312.8086 -8039.7783 8314.0527 y
-8039.7783 8314.1162 -8039.7998 8314.1367 -8039.8633 8314.1367 c
-8040.2847 8314.1367 -8042.0352 8311.9014 -8042.0352 8311.0361 c
-8042.0352 8310.9316 -8041.9722 8310.8682 -8041.8662 8310.8682 c
-8041.8042 8310.8682 -8039.8633 8311.0576 -8039.8633 8311.29 c
-8039.8633 8311.3535 -8039.8838 8311.417 -8039.9058 8311.501 c
f
-8031.8081 8322.4658 m
-8032.7568 8321.5801 -8033.6846 8320.7158 -8033.6846 8320.167 c
-8033.6846 8319.8301 -8033.6226 8319.4287 -8033.6226 8319.0078 c
-8033.6226 8317.5527 -8034.9722 8316.2236 -8035.8774 8315.7607 c
-8036.3623 8315.5068 -8036.8481 8314.9385 -8036.8481 8314.5791 c
-8036.8481 8314.4736 -8036.8057 8314.4111 -8036.7422 8314.4111 c
-8036.6582 8314.4111 -8036.5942 8314.4316 -8036.5103 8314.4316 c
-8036.4473 8314.4316 -8036.2158 8314.3047 -8036.1519 8314.3047 c
-8036.0049 8314.3047 -8035.6035 8314.96 -8035.4561 8314.96 c
-8035.2446 8314.96 -8035.1826 8314.749 -8035.1826 8314.6006 c
-8035.1826 8314.2422 -8035.7305 8312.8926 -8036.9951 8312.8926 c
-8037.7554 8312.8926 -8038.0498 8313.335 -8038.0498 8313.6729 c
-8038.0498 8314.3047 -8037.5225 8314.917 -8037.3975 8315.0869 c
-8037.3545 8315.1279 -8037.3335 8315.1699 -8037.3335 8315.2119 c
-8037.3335 8315.2549 -8037.3545 8315.2744 -8037.4175 8315.2744 c
-8037.6694 8315.2744 -8039.6519 8314.2422 -8039.6519 8312.5127 c
-8039.6519 8312.0918 -8039.4209 8311.29 -8038.7666 8311.29 c
-8036.2998 8311.29 -8032.1675 8315.1494 -8032.1675 8319.5977 c
-8032.1675 8319.9775 -8032.3984 8320.5264 -8032.4614 8320.9053 c
-8032.4834 8320.9268 -8032.4834 8320.9688 -8032.4834 8321.0098 c
-8032.4834 8321.1367 -8032.4399 8321.3057 -8032.3145 8321.3057 c
-8032.0615 8321.3057 -8030.3955 8321.1162 -8030.0366 8321.1162 c
-8028.3926 8321.1162 -8027.9702 8321.1162 -8027.9702 8322.2119 c
-8027.9702 8323.4355 -8029.1094 8323.7529 -8029.5098 8323.7529 c
-8029.8896 8323.7529 -8030.2695 8323.4561 -8030.2695 8323.0977 c
-8030.2695 8322.9922 -8030.0791 8322.5498 -8030.0791 8322.4658 c
-8030.0791 8322.3184 -8030.2065 8322.2344 -8030.3325 8322.2344 c
-8030.4795 8322.2344 -8030.9858 8322.7393 -8031.1338 8322.7393 c
-8031.3862 8322.7393 -8031.6401 8322.6133 -8031.8081 8322.4658 c
f
*U
U
%AI8_EndBrushPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Brush Manager Order)
(Adobe Brush Manager Order)
( Adobe Calligraphic Brush Tool/ 2pt. \305\270\277\370/ Adobe Calligraphic ) -
(Brush Tool/ 5pt. \305\270\277\370/ Adobe Calligraphic Brush Tool/ 5pt. \306\362\270) -
(\351/ Adobe Calligraphic Brush Tool/ 3pt. \277\370/ Adobe Calligraphic ) -
(Brush Tool/ 7pt. \277\370/ Adobe Calligraphic Brush Tool/ 15pt. \277\370/ ) -
(Adobe ArtOnPath Brush Tool/ \270\361\305\272/ Adobe ArtOnPath Brush Tool/ ) -
(\305\327\300\314\306\333 \274\261/ Adobe ArtOnPath Brush Tool/ \262\311 \275\272\306\367\305\251/ Adobe Patter) -
(nOnPath Brush Tool/ \273\241\260\243\273\366 \310\255\273\354\307\245 \272\352\267\257\275\254/ Adobe PatternOnPath ) -
(Brush Tool/ \260\355\265\361/) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(15pt. \677\770)
(1 15 15 100 100 15 15 0 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(2pt. \705\670\677\770)
(1 2 2 26 74 15 15 0 1 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(3pt. \677\770)
(1 3 3 100 100 0 0 0 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(5pt. \705\670\677\770)
(1 5 5 10 90 -65 35 0 1 1 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(5pt. \706\762\670\751)
(1 5 5 0 0 90 90 0 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(7pt. \677\770)
(1 7 7 100 100 0 0 0 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(\662\711 \675\672\706\767\705\651)
(1 / Unnamed Brush Pat 12/ / / / / 0 1 /  1 1 1 0 1 0 0 1) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(\670\761\705\672)
(1 / Unnamed Brush Pat 4/ / / / / 0 1 /  1 1 1.2 0 1 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(\705\727\700\714\706\733 \674\661)
(1 / Unnamed 20/ / / / / 0 1 /  1 1 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe PatternOnPath Brush Tool)
(\660\755\665\761)
(1 / Unnamed Brush Pat 55/ Unnamed Brush Pat 57/ Unnamed Brush ) -
(Pat 56/ / / 5 0.717647 0.556863 0.176471 /  1 0 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe PatternOnPath Brush Tool)
(\673\641\660\643\673\766 \710\655\673\754\707\645 \672\752\667\657\675\654)
(1 / Unnamed Brush Pat 158/ Unnamed Brush Pat 160/ Unnamed Brus) -
(h Pat 160/ Unnamed Brush Pat 162/ Unnamed Brush Pat 161/ 5 0.0) -
(196078 0.027451 0.0313726 /  1 0 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
1 1 1 1 ([\670\702\703\747\702\757\661\742]) 0 Xs
([\670\702\703\747\702\757\661\742])
Pc
0 0 0 0 k
(\710\762\673\766)
Pc
0 0 0 1 k
(\660\713\701\644)
Pc
0 1 1 0 k
(CMYK \673\641\660\655)
Pc
0 0 1 0 k
(CMYK \663\753\666\773)
Pc
1 0 1 0 k
(CMYK \663\754\673\766)
Pc
1 0 0 0 k
(CMYK \673\747\700\714\676\710)
Pc
1 1 0 0 k
(CMYK \706\704\666\773)
Pc
0 1 0 0 k
(CMYK \670\666\701\650\705\670)
Pc
0.15 1 0.9 0.1 k
(C=15 M=100 Y=90 K=10)
Pc
0 0.9 0.85 0 k
(C=0 M=90 Y=85 K=0)
Pc
0 0.8 0.95 0 k
(C=0 M=80 Y=95 K=0)
Pc
0 0.5 1 0 k
(C=0 M=50 Y=100 K=0)
Pc
0 0.35 0.85 0 k
(C=0 M=35 Y=85 K=0)
Pc
0.05 0 0.9 0 k
(C=5 M=0 Y=90 K=0)
Pc
0.2 0 1 0 k
(C=20 M=0 Y=100 K=0)
Pc
0.5 0 1 0 k
(C=50 M=0 Y=100 K=0)
Pc
0.75 0 1 0 k
(C=75 M=0 Y=100 K=0)
Pc
0.85 0.1 1 0.1 k
(C=85 M=10 Y=100 K=10)
Pc
0.9 0.3 0.95 0.3 k
(C=90 M=30 Y=95 K=30)
Pc
0.75 0 0.75 0 k
(C=75 M=0 Y=75 K=0)
Pc
0.8 0.1 0.45 0 k
(C=80 M=10 Y=45 K=0)
Pc
0.7 0.15 0 0 k
(C=70 M=15 Y=0 K=0)
Pc
0.85 0.5 0 0 k
(C=85 M=50 Y=0 K=0)
Pc
1 0.95 0.05 0 k
(C=100 M=95 Y=5 K=0)
Pc
1 1 0.25 0.25 k
(C=100 M=100 Y=25 K=25)
Pc
0.75 1 0 0 k
(C=75 M=100 Y=0 K=0)
Pc
0.5 1 0 0 k
(C=50 M=100 Y=0 K=0)
Pc
0.35 1 0.35 0.1 k
(C=35 M=100 Y=35 K=10)
Pc
0.1 1 0.5 0 k
(C=10 M=100 Y=50 K=0)
Pc
0 0.95 0.2 0 k
(C=0 M=95 Y=20 K=0)
Pc
0.25 0.25 0.4 0 k
(C=25 M=25 Y=40 K=0)
Pc
0.4 0.45 0.5 0.05 k
(C=40 M=45 Y=50 K=5)
Pc
0.5 0.5 0.6 0.25 k
(C=50 M=50 Y=60 K=25)
Pc
0.55 0.6 0.65 0.4 k
(C=55 M=60 Y=65 K=40)
Pc
0.25 0.4 0.65 0 k
(C=25 M=40 Y=65 K=0)
Pc
0.3 0.5 0.75 0.1 k
(C=30 M=50 Y=75 K=10)
Pc
0.35 0.6 0.8 0.25 k
(C=35 M=60 Y=80 K=25)
Pc
0.4 0.65 0.9 0.35 k
(C=40 M=65 Y=90 K=35)
Pc
0.4 0.7 1 0.5 k
(C=40 M=70 Y=100 K=50)
Pc
0.5 0.7 0.8 0.7 k
(C=50 M=70 Y=80 K=70)
Pc
Bb
2 (\674\661\707\774 \661\727\666\763\665\760\676\760\706\656) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(\674\661\707\774 \661\727\666\763\665\760\676\760\706\656)
Pc
Bb
2 (\660\713\701\644\673\766\700\670\667\716 \710\761\671\714\707\717\660\724 \707\717\661\742) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(\660\713\701\644\673\766\700\670\667\716 \710\761\671\714\707\717\660\724 \707\717\661\742)
Pc
Bb
0 0 0 0 Bh
2 (\671\746\673\747\707\774 \661\727\666\763\665\760\676\760\706\656) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(\671\746\673\747\707\774 \661\727\666\763\665\760\676\760\706\656)
Pc
Bb
0 0 0 0 Bh
2 (\677\666\700\672 \660\713\701\644\673\766 \672\761\663\727\706\703) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(\677\666\700\672 \660\713\701\644\673\766 \672\761\663\727\706\703)
Pc
Bb
2 (\673\747\670\667\700\707 \700\717\670\764) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(\673\747\670\667\700\707 \700\717\670\764)
Pc
Bb
0 0 0 0 Bh
2 (\661\670\670\656\673\766 \671\746\673\747\707\774) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(\661\670\670\656\673\766 \671\746\673\747\707\774)
Pc
(\671\660\660\755\661\742 \706\720\705\717) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(\671\660\660\755\661\742 \706\720\705\717)
Pc
1 0.68 0 0.54 (PANTONE 282 C) 0 x
(PANTONE 282 C)
Pc
0 0 0 1 k
(C=0 M=0 Y=0 K=100)
Pc
0 0 0 0.899994 k
(C=0 M=0 Y=0 K=90)
Pc
0 0 0 0.799988 k
(C=0 M=0 Y=0 K=80)
Pc
0 0 0 0.699997 k
(C=0 M=0 Y=0 K=70)
Pc
0 0 0 0.599991 k
(C=0 M=0 Y=0 K=60)
Pc
0 0 0 0.5 k
(C=0 M=0 Y=0 K=50)
Pc
0 0 0 0.399994 k
(C=0 M=0 Y=0 K=40)
Pc
0 0 0 0.299988 k
(C=0 M=0 Y=0 K=30)
Pc
0 0 0 0.199997 k
(C=0 M=0 Y=0 K=20)
Pc
0 0 0 0.099991 k
(C=0 M=0 Y=0 K=10)
Pc
0 0 0 0.049988 k
(C=0 M=0 Y=0 K=5)
Pc
0 1 1 0 k
(C=0 M=100 Y=100 K=0)
Pc
0 0.75 1 0 k
(C=0 M=75 Y=100 K=0)
Pc
0 0.1 0.95 0 k
(C=0 M=10 Y=95 K=0)
Pc
0.85 0.1 1 0 k
(C=85 M=10 Y=100 K=0)
Pc
1 0.9 0 0 k
(C=100 M=90 Y=0 K=0)
Pc
0.6 0.9 0.000031 0.000031 k
(C=60 M=90 Y=0 K=0)
Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 0 79 128 255 0 50 Lb
(\267\271\300\314\276\356 1) Ln
0 A
u
u
*u
0 D
0 O
1 0.68 0 0.54 (PANTONE 282 C) 0 x
0 J 0 j 1 w 4 M []0 d0 XR
111.5747 123.2471 m
111.5825 123.2051 111.5889 123.1602 111.5957 123.1123 c
111.6123 123.0039 111.6187 122.9092 111.6113 122.835 c
111.6055 122.7617 111.5825 122.6904 111.5435 122.6221 c
111.4644 122.4873 111.3579 122.3896 111.2217 122.3193 c
111.0864 122.2529 110.9282 122.2021 110.75 122.1816 c
110.5073 122.1416 110.3013 122.1572 110.1318 122.2217 c
109.9316 122.29 109.7832 122.4346 109.6899 122.6504 c
109.6528 122.7412 109.627 122.8135 109.6147 122.8711 c
109.6006 122.9258 109.5869 123.0068 109.5713 123.1123 c
110.0879 123.1768 L
110.6909 123.2646 L
111.5532 123.3662 l
111.5581 123.333 111.5654 123.29 111.5747 123.2471 c
f
1 D
111.25 124.4541 m
111.2109 124.4463 111.1519 124.4395 111.0713 124.4258 c
111.0342 124.4209 110.7583 124.3779 110.248 124.292 c
109.7397 124.208 109.3735 124.1533 109.1543 124.1172 c
108.0645 123.9697 L
108.0308 123.9629 107.9214 123.9541 107.7314 123.9404 c
107.5439 123.9258 107.3926 123.9063 107.2773 123.8916 c
106.8965 123.8643 L
106.8984 123.835 106.9175 123.7549 106.9487 123.6221 c
106.9805 123.4795 107.0029 123.3662 107.0161 123.2832 c
107.021 123.2451 107.0278 123.1553 107.0371 123.0088 c
107.0439 122.8643 107.0552 122.7568 107.0659 122.6836 c
107.1899 122.7002 107.3745 122.7334 107.6201 122.7861 c
107.8677 122.835 108.0562 122.873 108.1851 122.8896 c
108.3462 122.916 108.5098 122.9463 108.6748 122.9756 c
108.8423 123.0039 109.0107 123.0322 109.1777 123.0557 c
109.1802 123.0205 109.1875 122.9775 109.1948 122.9258 c
109.2041 122.873 109.2124 122.8135 109.2207 122.7412 c
109.2251 122.7285 109.2373 122.6553 109.2612 122.5322 c
109.2832 122.4014 109.3071 122.2998 109.3345 122.2236 c
109.4136 121.9824 109.4849 121.8047 109.5488 121.6963 c
109.6387 121.5459 109.7681 121.4063 109.9351 121.2842 c
110.1006 121.1572 110.2729 121.085 110.4482 121.0537 c
110.627 121.0254 110.8262 121.0254 111.0454 121.0557 c
111.3462 121.0986 111.5913 121.2266 111.7788 121.4346 c
111.9653 121.6436 112.0698 121.8994 112.0923 122.2021 c
112.1025 122.3359 112.1025 122.4678 112.084 122.5986 c
112.0674 122.7285 112.0508 122.8584 112.0322 122.9854 c
112.0293 123.0039 112.0073 123.127 111.9634 123.3662 c
111.9194 123.6025 111.8882 123.7764 111.874 123.8828 c
111.7998 124.5537 l
111.6138 124.5127 111.4302 124.4775 111.25 124.4541 c
f
*U
*u
0 D
112.3931 119.251 m
112.4419 119.002 112.4512 118.8145 112.4189 118.6865 c
112.377 118.5068 112.2466 118.3691 112.0293 118.2793 c
111.9121 118.2314 111.7959 118.1914 111.6836 118.1729 c
111.0024 118.0303 110.5996 118.2666 110.4692 118.8877 c
110.4551 118.9619 110.4453 119.0234 110.4395 119.0635 c
110.9512 119.165 L
111.5083 119.2725 L
112.3506 119.4453 l
112.3599 119.4023 112.374 119.3408 112.3931 119.251 c
f
1 D
108.3369 116.583 m
108.3442 116.5518 108.3584 116.4541 108.3784 116.2979 c
108.3975 116.1445 108.4175 116.0186 108.4365 115.9336 c
108.7861 116.2676 L
108.9224 116.3975 109.1367 116.6113 109.4302 116.9004 c
109.8721 117.3408 110.2358 117.6865 110.519 117.9375 c
110.6597 117.6133 110.8613 117.3721 111.1255 117.2197 c
111.3901 117.0635 111.687 117.0264 112.0244 117.0918 c
112.2686 117.1436 112.4644 117.2393 112.6025 117.3721 c
112.7407 117.5088 112.8506 117.6963 112.9302 117.9336 c
112.9795 118.0771 112.9941 118.2344 112.9741 118.3857 c
112.9521 118.54 112.9097 118.7813 112.8438 119.1035 c
112.8018 119.2783 112.7617 119.4453 112.7217 119.6162 c
112.6836 119.7813 112.6436 119.9492 112.6104 120.1221 c
112.5234 120.6123 L
112.3911 120.5869 112.0625 120.5039 111.5435 120.374 c
111.3398 120.3242 111.147 120.2783 110.9653 120.2393 c
109.6841 119.9658 L
109.6294 119.9561 109.4326 119.9209 109.0996 119.8672 c
108.7671 119.8096 108.4946 119.7549 108.2813 119.7129 c
107.8086 119.6416 L
107.6699 119.6221 L
107.6758 119.5947 107.7007 119.5088 107.7402 119.376 c
107.7803 119.2432 107.8096 119.1367 107.8252 119.0586 c
107.8311 119.0234 107.8413 118.9453 107.8584 118.8057 c
107.8765 118.6631 107.8926 118.5566 107.9082 118.4707 c
107.9604 118.4873 108.0708 118.5166 108.2441 118.5732 c
108.415 118.623 108.5488 118.6611 108.6426 118.6826 c
108.832 118.7275 L
110.0913 119.002 L
110.1104 119.0049 110.1279 118.9971 110.1396 118.9736 c
110.1387 118.96 110.1279 118.9424 110.1079 118.917 c
109.7905 118.6367 L
109.4517 118.3359 L
108.1709 117.2109 l
108.2432 116.9834 108.2993 116.7725 108.3369 116.583 c
f
*U
*u
0 D
110.0273 113.8291 m
110.2759 114.1709 110.6479 114.4346 111.147 114.623 c
111.4131 114.7197 111.6797 114.7959 111.9443 114.8535 c
112.2144 114.9072 112.4678 114.917 112.7144 114.8955 c
112.9619 114.8721 113.1978 114.7842 113.4312 114.6377 c
113.5723 114.5449 113.6787 114.4482 113.7485 114.3535 c
113.8159 114.2588 113.8848 114.124 113.9487 113.9521 c
114.1274 113.4814 114.0576 113.0361 113.7427 112.626 c
113.4819 112.2803 113.0991 112.0146 112.5972 111.8252 c
112.334 111.7275 112.0767 111.6553 111.8223 111.6094 c
111.5674 111.5674 111.3257 111.5596 111.0898 111.5928 c
110.791 111.6377 110.5356 111.7354 110.3232 111.8867 c
110.1138 112.04 109.9565 112.2471 109.8555 112.5215 c
109.6768 112.9932 109.7349 113.4316 110.0273 113.8291 c
f
1 D
113.4238 110.9033 m
113.5864 111.001 113.7446 111.1221 113.8965 111.2666 c
114.0493 111.4053 114.1763 111.5645 114.2754 111.7393 c
114.3608 111.8936 114.4341 112.083 114.4912 112.3174 c
114.5669 112.5977 114.5933 112.8799 114.5649 113.1729 c
114.5361 113.4668 114.4688 113.7607 114.3574 114.0596 c
114.2236 114.4189 114.0459 114.7393 113.8267 115.0146 c
113.6133 115.292 113.3418 115.5146 113.0225 115.6943 c
112.6997 115.8701 112.3579 115.9697 111.9941 115.9932 c
111.6328 116.0098 111.2739 115.9521 110.9219 115.8174 c
110.5645 115.6826 110.2607 115.5117 110.0117 115.3037 c
109.7607 115.0898 109.563 114.8232 109.4204 114.5 c
109.2773 114.1846 109.2124 113.8389 109.2251 113.4814 c
109.2373 113.1123 109.311 112.7588 109.4414 112.4014 c
109.5806 112.0342 109.7559 111.7119 109.9707 111.4463 c
110.187 111.1758 110.4551 110.9561 110.7788 110.7783 c
111.1016 110.6025 111.4492 110.501 111.8159 110.4863 c
112.1836 110.4619 112.54 110.5244 112.8896 110.6494 c
113.085 110.7236 113.2617 110.8096 113.4238 110.9033 c
f
*U
*u
0 D
116.3936 109.4912 m
116.4448 109.4297 116.5107 109.3389 116.5879 109.2188 c
116.665 109.1045 116.7134 109.0293 116.7314 109.0107 c
116.7871 108.9443 116.8618 108.8584 116.9575 108.7549 c
117.0537 108.6572 117.1118 108.5908 117.1318 108.5654 c
117.0269 108.4873 116.8784 108.3799 116.6831 108.2451 c
116.4888 108.1143 116.3628 108.0244 116.3096 107.9814 C
116.0669 107.7881 L
115.5469 107.3682 l
115.624 107.2734 115.7515 107.1025 115.9297 106.8682 c
116.106 106.6299 116.2041 106.499 116.2183 106.4854 c
116.3003 106.3799 116.4326 106.2168 116.624 105.9941 c
116.812 105.7744 116.9136 105.6533 116.9233 105.6416 C
117.7222 106.2783 l
117.8335 106.3682 117.9258 106.4424 117.9917 106.5078 c
118.269 106.75 118.4224 106.8828 118.4517 106.9063 c
118.5024 106.8447 118.5679 106.75 118.646 106.6338 c
118.7241 106.5156 118.7739 106.4424 118.7915 106.4209 c
118.8364 106.3643 118.9092 106.2861 119.0107 106.1768 c
119.1079 106.0693 119.1719 106.0059 119.1943 105.9727 c
119.0879 105.8896 118.9893 105.8164 118.897 105.7549 c
118.5757 105.5439 118.4077 105.4326 118.3813 105.4092 C
117.0488 104.3779 l
116.8052 104.1816 116.585 104.0039 116.3916 103.8311 c
115.7163 103.2529 115.355 102.9443 115.3066 102.9072 c
115.2554 102.9736 115.1924 103.0615 115.1152 103.1729 c
115.0381 103.2881 114.9922 103.3594 114.9746 103.3809 c
114.918 103.4492 114.8359 103.5459 114.7295 103.6602 c
114.6216 103.7744 114.5601 103.8477 114.5435 103.8623 C
115.3657 104.4326 L
116.1973 105.0654 L
116.4717 105.2783 L
115.8003 106.1553 L
115.0942 107.0127 L
114.4072 106.4658 l
114.252 106.3447 114.042 106.1602 113.7759 105.9277 c
113.5068 105.6982 113.335 105.5518 113.2559 105.4854 c
113.2085 105.5439 113.1445 105.6318 113.0684 105.7471 c
112.9941 105.8623 112.9453 105.9277 112.9272 105.9521 c
112.8706 106.0273 112.7891 106.1172 112.687 106.2314 c
112.5815 106.3398 112.52 106.4092 112.5024 106.4277 c
112.7144 106.5957 112.9795 106.7979 113.2969 107.0244 c
114.0142 107.5391 114.4629 107.8662 114.6382 108.0127 c
114.8896 108.209 115.1108 108.3945 115.3037 108.5576 c
115.9858 109.1436 116.3486 109.4561 116.3936 109.4912 c
f
*U
*u
118.3223 101.4443 m
118.3472 101.8623 118.5195 102.291 118.8354 102.7129 c
119.0059 102.9424 119.1899 103.1514 119.3823 103.3408 c
119.5796 103.5273 119.7871 103.6816 120.0044 103.793 c
120.2251 103.9072 120.4727 103.9639 120.749 103.9639 c
120.918 103.9639 121.0576 103.9404 121.1655 103.8994 c
121.2759 103.8564 121.4038 103.7783 121.5532 103.6689 c
121.958 103.3643 122.1416 102.959 122.0991 102.4385 c
122.0664 102.0088 121.8872 101.5801 121.5693 101.1465 c
121.4014 100.9268 121.2227 100.7227 121.0332 100.5498 c
120.8433 100.3721 120.6406 100.2373 120.4292 100.1396 c
120.1479 100.0166 119.8813 99.96 119.6221 99.9717 c
119.3643 99.9834 119.1187 100.0752 118.8862 100.248 c
118.4805 100.5498 118.2905 100.9502 118.3223 101.4443 c
f
1 D
122.7617 100.8213 m
122.8467 100.9902 122.915 101.1797 122.9653 101.3838 c
123.0171 101.5801 123.0361 101.7842 123.0244 101.9873 c
123.0142 102.1582 122.9731 102.3604 122.894 102.5908 c
122.8057 102.8691 122.6714 103.1152 122.4902 103.3496 c
122.311 103.582 122.0908 103.7881 121.8359 103.9795 c
121.5283 104.21 121.2085 104.3857 120.8779 104.4971 c
120.5464 104.6104 120.1978 104.6582 119.8291 104.6299 c
119.4634 104.6084 119.123 104.5059 118.8071 104.3232 c
118.4907 104.1436 118.2231 103.9043 117.9966 103.5986 c
117.769 103.2959 117.6079 102.9824 117.5146 102.6699 c
117.4175 102.3564 117.3945 102.0234 117.4482 101.6816 c
117.5005 101.334 117.6299 101.0088 117.8364 100.7109 c
118.0449 100.4121 118.3003 100.1514 118.6021 99.9268 c
118.9194 99.6924 119.2417 99.5186 119.5674 99.4072 c
119.8955 99.2979 120.2427 99.2529 120.6089 99.2822 c
120.9736 99.3096 121.3174 99.417 121.6372 99.5947 c
121.958 99.7793 122.2285 100.0215 122.4502 100.3193 c
122.5752 100.4854 122.6772 100.6533 122.7617 100.8213 c
f
*U
*u
0 D
123.6016 100.0732 m
124.7114 101.959 l
124.7466 101.9453 124.7944 101.9189 124.8535 101.8838 c
124.9141 101.8408 124.9497 101.8193 124.9639 101.8174 c
125.0269 101.7881 125.082 101.7725 125.1333 101.7607 c
125.1831 101.751 125.2231 101.7412 125.2515 101.7314 c
125.2705 101.1797 125.2871 100.7529 125.3027 100.4639 c
125.3096 100.3574 125.3379 99.9385 125.3857 99.2041 c
125.4141 98.7744 125.4448 98.3525 125.479 97.9287 C
126.1934 98.5381 l
126.9448 99.168 127.6636 99.8076 128.3521 100.4453 C
128.4219 100.4004 l
128.4546 100.3721 128.4907 100.3574 128.5249 100.3428 c
128.5581 100.3291 128.5947 100.3096 128.6362 100.2959 c
128.7432 100.2529 128.8374 100.2197 128.9204 100.2061 c
128.6689 99.3623 128.4736 98.666 128.3232 98.1328 c
128.1743 97.5996 128.0615 97.1992 127.9834 96.9268 C
127.6611 95.6973 l
127.6577 95.6729 127.6494 95.6299 127.6353 95.5596 c
127.6221 95.4854 127.606 95.4365 127.5918 95.3955 c
127.5166 95.4316 127.4146 95.4795 127.2856 95.541 c
127.1621 95.6094 127.084 95.6455 127.0571 95.6592 c
126.9824 95.6895 126.877 95.7256 126.7432 95.7656 c
126.6079 95.8154 126.5278 95.8389 126.5015 95.8486 c
126.6812 96.2842 126.8555 96.7891 127.0205 97.3682 c
127.187 97.9502 127.3452 98.5088 127.5039 99.0449 c
127.1919 98.7744 126.8828 98.5029 126.5737 98.2324 c
126.2646 97.9639 125.9556 97.6895 125.6484 97.4219 c
125.4409 97.2373 125.1392 96.958 124.7397 96.585 c
124.6685 96.623 124.6162 96.6494 124.5811 96.6689 c
124.5645 96.6729 124.5313 96.6846 124.4829 96.6895 C
124.415 97.9785 l
124.3916 98.3955 124.3716 98.7842 124.3501 99.1377 c
124.3228 99.5264 124.2954 99.915 124.272 100.3076 C
123.6392 99.1826 L
123.2568 98.4541 L
122.938 97.8223 L
122.7397 97.415 l
122.6489 97.4785 122.5825 97.5146 122.541 97.5381 c
122.4985 97.5566 122.4663 97.5713 122.439 97.583 c
122.3467 97.6211 122.2388 97.6514 122.1182 97.6777 c
122.1348 97.7158 122.1563 97.7588 122.1846 97.7959 c
122.1865 97.8076 122.2168 97.8408 122.2666 97.9004 c
122.334 98.0068 122.436 98.1563 122.5693 98.3672 c
122.6665 98.5264 122.7759 98.6963 122.894 98.8818 c
123.0142 99.0693 123.1416 99.2793 123.2788 99.5137 c
123.417 99.751 123.5244 99.9385 123.6016 100.0732 c
f
*U
*u
131.2808 99.6445 m
131.2529 99.5361 131.2197 99.4268 131.1787 99.2979 c
131.0732 98.9951 131.0083 98.7979 130.9893 98.7197 c
130.9492 98.5693 130.8823 98.3389 130.79 98.04 c
130.6978 97.7393 130.6323 97.5117 130.5908 97.3623 c
130.5518 97.1992 130.4951 96.958 130.4263 96.6279 c
130.355 96.3057 130.2998 96.0596 130.2568 95.8984 c
130.2358 95.8154 130.1929 95.5947 130.1255 95.2451 c
130.0977 95.1025 130.0684 94.9697 130.0366 94.8467 c
129.9634 94.8662 129.8599 94.9014 129.731 94.9463 c
129.6006 94.9932 129.5215 95.0186 129.4927 95.0264 c
129.3071 95.0742 129.0967 95.1113 128.8682 95.1543 c
128.9346 95.415 129.0273 95.7295 129.1445 96.1025 c
129.4063 96.9482 129.5674 97.4785 129.6255 97.6992 C
129.7212 98.0781 L
129.9443 98.9873 l
129.9775 99.1143 130.0068 99.249 130.0366 99.374 c
130.0649 99.5029 130.0977 99.6924 130.1357 99.9385 c
130.2168 99.915 130.3232 99.8818 130.457 99.8369 c
130.5884 99.791 130.668 99.7627 130.6948 99.7559 c
130.7808 99.7334 130.8921 99.7061 131.0303 99.6885 c
131.1704 99.6631 131.252 99.6445 131.2808 99.6445 c
f
*U
*u
132.2397 94.3486 m
132.1904 94.3662 L
131.915 94.4365 l
131.8149 94.4531 131.7036 94.4531 131.5815 94.4463 c
131.6938 94.9102 131.8076 95.4482 131.9214 96.0596 c
132.0342 96.6729 132.1348 97.2646 132.2197 97.8369 C
132.3848 98.9873 L
132.4214 99.3271 l
132.5352 99.2842 132.6426 99.2607 132.7378 99.249 c
132.8335 99.2344 132.9414 99.2256 133.0654 99.2344 c
133.2139 99.0166 133.5039 98.5928 133.938 97.9639 c
134.2266 97.543 134.5171 97.1182 134.8076 96.6875 c
135.1733 96.1455 135.4619 95.7158 135.6694 95.3955 C
135.9126 96.9717 L
136.02 97.7676 l
136.0371 97.8652 136.0488 98.0068 136.0669 98.2012 c
136.0771 98.3936 136.0938 98.54 136.1104 98.6377 C
136.1221 98.7744 l
136.1934 98.7559 136.2549 98.7393 136.3047 98.7227 c
136.3564 98.708 136.4004 98.6963 136.4385 98.6943 c
136.4727 98.6865 136.5259 98.6846 136.5996 98.6846 c
136.6719 98.6846 136.7285 98.6807 136.7651 98.6729 C
136.6851 98.2822 l
136.6709 98.1748 136.6494 98.0615 136.6211 97.9502 c
136.5522 97.6445 136.5107 97.4551 136.499 97.3799 c
136.4668 97.1641 136.4243 96.9268 136.3755 96.6689 c
136.3247 96.4189 136.2847 96.2119 136.2549 96.0381 C
136.1436 95.3154 L
135.9194 93.7988 L
135.8447 93.8271 l
135.7754 93.8486 135.7051 93.8701 135.6362 93.8799 c
135.5488 93.8936 135.4448 93.8994 135.3335 93.8896 c
135.0469 94.3564 134.8369 94.6895 134.7065 94.8867 c
134.48 95.2451 134.2646 95.5791 134.0581 95.8887 c
133.9019 96.1182 133.6782 96.4434 133.3828 96.8652 C
132.7256 97.8037 L
132.5625 96.8408 L
132.4629 96.1924 l
132.4399 96.0381 132.395 95.6514 132.3291 95.041 c
132.3008 94.7939 132.2729 94.5645 132.2397 94.3486 c
f
*U
*u
142.1797 98.4688 m
142.1533 98.2891 142.1357 98.1182 142.1201 97.9541 c
142.1035 97.792 142.0942 97.6143 142.0874 97.4131 C
142.0435 96.7061 L
141.9961 95.9102 l
141.978 95.3721 141.9351 94.9834 141.8643 94.7471 c
141.752 94.3623 141.5195 94.0645 141.1699 93.832 c
140.9814 93.709 140.7686 93.6143 140.5313 93.5645 c
140.291 93.5107 140.0459 93.4893 139.7891 93.4961 c
139.2881 93.5166 138.8662 93.6094 138.5234 93.792 c
138.1108 94.0098 137.8506 94.3369 137.7383 94.7822 c
137.7271 94.8154 137.7192 94.877 137.7109 94.9551 c
137.6992 95.0332 137.6919 95.0967 137.688 95.1592 c
137.6821 95.2158 137.6787 95.2686 137.6763 95.3154 c
137.6763 95.3584 137.6763 95.415 137.6812 95.4814 c
137.6821 95.5635 137.6851 95.6279 137.6851 95.6729 C
137.6992 96.5713 L
137.7241 97.4717 L
137.7412 98.3076 L
137.7383 98.6084 l
137.8081 98.6064 137.9185 98.6025 138.0625 98.583 c
138.207 98.5635 138.2993 98.5547 138.3354 98.5547 c
138.5293 98.5469 138.7251 98.5596 138.9243 98.5781 C
138.8774 98.2256 l
138.8721 98.04 138.8516 97.7588 138.8184 97.3799 c
138.7881 97.0029 138.771 96.7197 138.7642 96.5381 C
138.7544 96.2119 l
138.7471 96.0244 138.7427 95.8467 138.7402 95.667 c
138.7368 95.4854 138.75 95.3057 138.7783 95.126 c
138.8066 94.9463 138.8384 94.7939 138.8823 94.6807 c
138.9243 94.5645 139.0068 94.4463 139.1279 94.3174 c
139.3433 94.1064 139.6138 93.9932 139.9424 93.9814 c
140.2871 93.9736 140.5542 94.0313 140.752 94.1523 c
140.9473 94.2783 141.1177 94.498 141.2588 94.8154 c
141.3208 94.9551 141.3643 95.1543 141.3867 95.4072 c
141.4092 95.6611 141.4248 95.9668 141.438 96.3105 c
141.4448 96.5547 141.4463 96.9102 141.4438 97.4004 c
141.438 97.8818 141.4399 98.2461 141.4473 98.4902 c
141.5352 98.4717 141.5977 98.4619 141.6367 98.4541 c
141.6733 98.4453 141.7339 98.4434 141.8159 98.4404 c
141.8892 98.4404 141.9463 98.4404 141.9912 98.4434 c
142.0337 98.4453 142.0986 98.4541 142.1797 98.4688 c
f
*U
*u
143.4473 96.2959 m
143.5381 98.4854 l
143.5781 98.4902 143.6309 98.4902 143.7031 98.4834 c
143.7734 98.4736 143.8164 98.4736 143.8301 98.4736 c
143.8984 98.4834 143.9551 98.4902 144.0078 98.5088 c
144.0527 98.5264 144.0957 98.5303 144.123 98.5449 c
144.4004 98.0576 144.6143 97.6895 144.7646 97.4502 c
144.8223 97.3506 145.0439 96.9883 145.4336 96.3682 c
145.6553 96.0049 145.8809 95.6455 146.1074 95.29 C
146.4551 96.1592 l
146.8193 97.0713 147.1572 97.9717 147.4678 98.8555 C
147.5488 98.8506 l
147.5918 98.8408 147.6309 98.8408 147.667 98.8486 c
147.7051 98.8506 147.7441 98.8525 147.7861 98.8555 c
147.9023 98.8672 148 98.8838 148.0791 98.9131 c
148.2568 98.0449 148.4072 97.3467 148.5244 96.7959 c
148.6455 96.2607 148.7354 95.8535 148.7949 95.5791 C
149.085 94.3369 l
149.0918 94.3174 149.1035 94.2783 149.125 94.2041 c
149.1484 94.1357 149.1602 94.0811 149.1641 94.0459 c
149.082 94.0361 148.9697 94.0313 148.8252 94.0313 c
148.6836 94.0244 148.5967 94.0244 148.5684 94.0225 c
148.4854 94.0127 148.377 94.0029 148.2383 93.9736 c
148.1006 93.9463 148.0186 93.9346 147.9863 93.9297 c
147.9463 94.3936 147.8604 94.9268 147.7344 95.5146 c
147.6074 96.1025 147.4883 96.6729 147.373 97.2275 c
147.2246 96.8369 147.0781 96.4521 146.9326 96.0693 c
146.7871 95.6846 146.6426 95.3018 146.5 94.9199 c
146.4023 94.6592 146.2666 94.2686 146.0869 93.7539 c
146.0059 93.7539 145.9512 93.7539 145.9102 93.752 c
145.8936 93.7471 145.8574 93.7432 145.8115 93.7256 C
145.1484 94.8291 l
144.9287 95.1875 144.7285 95.5225 144.5449 95.8232 c
144.3389 96.1563 144.1348 96.4854 143.9268 96.8203 C
143.8984 95.5332 L
143.9023 94.7139 L
143.917 94.0029 L
143.9316 93.5498 l
143.8242 93.5615 143.7461 93.5645 143.7012 93.5615 c
143.6553 93.5615 143.6172 93.5596 143.5879 93.5518 c
143.4873 93.5459 143.377 93.5225 143.2598 93.4893 c
143.2559 93.5264 143.2559 93.5713 143.2617 93.624 c
143.2598 93.6357 143.2705 93.6807 143.2852 93.7568 c
143.2988 93.875 143.3154 94.0596 143.3369 94.3066 c
143.3477 94.4932 143.3613 94.6973 143.3799 94.917 c
143.4004 95.1357 143.4121 95.3799 143.4248 95.6514 c
143.4355 95.9268 143.4414 96.1426 143.4473 96.2959 c
f
*U
*u
152.4336 98.96 m
152.3633 99.2158 152.3125 99.3887 152.2793 99.4971 c
152.3652 99.542 152.4258 99.5732 152.458 99.5869 c
152.4932 99.5947 152.5371 99.6084 152.5957 99.6279 c
152.791 99.6924 152.9844 99.6826 153.1768 99.6084 c
153.2578 99.5811 153.3369 99.5068 153.418 99.3887 c
153.498 99.2793 153.5527 99.1729 153.582 99.0781 c
153.627 98.9307 153.6484 98.7939 153.6367 98.6592 c
153.627 98.5146 153.5879 98.3857 153.5137 98.2773 c
153.4414 98.1611 153.3604 98.0781 153.2656 98.0283 c
153.1738 97.9785 153.0508 97.9268 152.8926 97.8799 c
152.8652 97.8701 152.8301 97.8604 152.7813 97.8408 c
152.5449 98.5596 l
152.542 98.5752 152.5039 98.7109 152.4336 98.96 c
f
1 D
154.4785 98.623 m
154.6426 98.9033 154.6777 99.1943 154.5801 99.5029 c
154.46 99.874 154.2295 100.1064 153.8867 100.1963 c
153.6035 100.2764 153.2637 100.2529 152.8691 100.1299 c
151.8799 99.7959 L
151.0938 99.5664 L
151.1602 99.3545 151.2695 99.0449 151.4219 98.6328 c
151.5723 98.2236 151.6816 97.9131 151.748 97.708 c
151.7549 97.6777 151.8369 97.4072 151.9912 96.8984 c
152.1416 96.3906 152.2539 96.0244 152.3223 95.8037 c
152.3721 95.6455 152.4189 95.4814 152.4668 95.3018 c
152.5137 95.126 152.5488 94.9697 152.5713 94.835 c
153.1641 95.0479 L
154.1846 95.3486 L
154.2725 95.377 154.3574 95.4072 154.4414 95.4404 c
154.5234 95.4766 154.5898 95.5049 154.6348 95.5332 c
154.8115 95.6279 154.9502 95.7178 155.0498 95.8057 c
155.1797 95.9219 155.2813 96.0459 155.3516 96.1924 c
155.5098 96.5381 155.5342 96.8818 155.4229 97.2324 c
155.3174 97.5664 155.1035 97.8037 154.7813 97.9404 c
154.6309 98 154.4678 98.0322 154.2969 98.0322 c
154.127 98.04 153.9648 98.0234 153.8184 97.9785 c
153.8008 98.0322 l
154.1055 98.1865 154.333 98.3838 154.4785 98.623 c
f
0 D
152.9043 97.4404 m
152.9316 97.4521 152.9658 97.4648 153.0078 97.4854 c
153.0508 97.5 153.0898 97.5146 153.125 97.5264 c
153.4297 97.626 153.6836 97.6162 153.8867 97.5098 c
154.0918 97.4004 154.248 97.1748 154.3564 96.8369 c
154.4238 96.623 154.4277 96.4033 154.3613 96.1709 c
154.3281 96.0459 154.2656 95.9385 154.1738 95.8604 c
154.083 95.7754 153.9746 95.7158 153.8457 95.6729 c
153.501 95.583 L
153.2129 96.4434 l
152.9043 97.4404 L
f
*U
*u
155.082 100.8213 m
155.0381 100.9092 l
155.1504 100.9619 155.3242 101.042 155.5605 101.1396 c
155.7969 101.2373 155.9736 101.3193 156.0908 101.376 c
156.2988 101.4756 156.5762 101.6133 156.9219 101.8008 c
157.2656 101.9854 157.4775 102.0947 157.5459 102.1279 c
157.5684 102.0371 157.6055 101.9404 157.6563 101.833 c
157.6689 101.8076 157.6836 101.7783 157.7031 101.751 c
157.7207 101.7148 157.7412 101.6816 157.7676 101.6367 C
157.8174 101.5684 l
157.6543 101.4873 157.4014 101.376 157.0576 101.2432 c
156.7168 101.1064 156.4619 100.999 156.2969 100.9189 C
156.6152 100.2373 L
156.9629 99.5068 L
158.4141 100.2861 l
158.4375 100.2129 158.459 100.1494 158.4785 100.0947 c
158.4941 100.0439 158.5137 99.999 158.5293 99.9639 c
158.5586 99.9092 158.582 99.8652 158.6055 99.8311 c
158.6289 99.8008 158.6543 99.7676 158.6836 99.7334 c
158.5586 99.6729 158.3623 99.5869 158.0977 99.4805 c
157.834 99.3701 157.6348 99.2842 157.5 99.2197 C
157.1787 99.0693 L
157.5742 98.2373 L
157.9844 97.4248 l
158.4424 97.6494 158.9297 97.9248 159.4453 98.2441 c
159.4648 98.1514 159.502 98.0576 159.5547 97.9502 c
159.5693 97.9268 159.582 97.8936 159.6016 97.8652 c
159.6201 97.8369 159.6406 97.7959 159.666 97.7588 C
159.7168 97.6846 l
159.5869 97.6211 159.3887 97.5303 159.123 97.415 c
158.8555 97.3057 158.6563 97.2158 158.5205 97.1475 C
157.7637 96.749 L
157.1953 96.4521 L
157.0332 96.8311 L
156.4688 98.0615 L
155.9951 99.0547 L
155.6211 99.8125 l
155.54 99.9834 155.4766 100.1045 155.4297 100.1885 c
155.1992 100.6064 155.082 100.8174 155.082 100.8213 c
f
*U
*u
161.6035 98.8242 m
161.5586 98.7979 L
161.3154 98.6592 l
161.2344 98.5928 161.1533 98.5186 161.0703 98.4268 c
160.8223 98.8271 160.5176 99.2842 160.1602 99.7979 c
159.8066 100.3096 159.4541 100.7959 159.1074 101.2646 C
158.4033 102.1865 L
158.1895 102.4521 l
158.2988 102.5039 158.3916 102.5635 158.4697 102.6201 c
158.5469 102.6768 158.625 102.7529 158.709 102.8447 c
158.9668 102.7979 159.4727 102.7031 160.2256 102.5684 c
160.7266 102.4805 161.2324 102.3877 161.7422 102.2979 c
162.3877 102.1729 162.8965 102.0752 163.2676 101.999 C
162.3184 103.2813 L
161.8281 103.9189 l
161.7734 103.9971 161.6807 104.1084 161.5527 104.2529 c
161.4258 104.3994 161.3301 104.5107 161.2695 104.5938 C
161.1816 104.6982 l
161.2461 104.7314 161.3008 104.7646 161.3486 104.7881 c
161.3945 104.8145 161.4336 104.8428 161.4629 104.8643 c
161.4922 104.8828 161.5303 104.9189 161.582 104.9756 c
161.6348 105.0225 161.6768 105.0576 161.7051 105.082 C
161.9297 104.751 l
161.9932 104.667 162.0566 104.5723 162.1191 104.4678 c
162.2871 104.21 162.3926 104.0488 162.4395 103.9873 c
162.5723 103.8047 162.7109 103.6104 162.8574 103.3994 c
163.0039 103.1836 163.1221 103.0088 163.2227 102.874 C
163.6641 102.2822 L
164.582 101.0537 L
164.5078 101.0186 l
164.4414 100.9902 164.3809 100.9541 164.3281 100.915 c
164.2539 100.8574 164.1787 100.7842 164.1055 100.7041 c
163.5732 100.8242 163.1875 100.9092 162.9531 100.96 c
162.543 101.0498 162.1533 101.1299 161.7871 101.1982 c
161.5117 101.2529 161.123 101.3193 160.6172 101.4043 C
159.4902 101.5918 L
160.0547 100.8027 L
160.4521 100.2822 l
160.543 100.1514 160.7852 99.8525 161.1738 99.3701 c
161.3301 99.1797 161.4707 99 161.6035 98.8242 c
f
*U
*u
162.3047 105.6416 m
162.2363 105.7021 l
162.3184 105.7998 162.4512 105.9346 162.6328 106.1152 c
162.8164 106.2959 162.9502 106.4326 163.0391 106.5322 c
163.1934 106.7021 163.3984 106.9346 163.6514 107.2334 c
163.9043 107.5322 164.0547 107.707 164.1094 107.7646 c
164.1641 107.6924 164.2334 107.6143 164.3203 107.5391 c
164.3418 107.5176 164.3691 107.4971 164.3955 107.4727 c
164.4238 107.4541 164.458 107.4248 164.4971 107.3975 C
164.5703 107.3496 l
164.4492 107.2139 164.252 107.0176 163.9863 106.7646 c
163.7178 106.5156 163.5225 106.3193 163.3984 106.1836 C
163.9473 105.6689 L
164.54 105.124 L
165.5996 106.3799 l
165.6504 106.3213 165.6953 106.2734 165.7285 106.2314 c
165.7656 106.1885 165.7988 106.1553 165.8291 106.127 c
165.874 106.0869 165.9141 106.0557 165.9473 106.0342 c
165.9795 106.0127 166.0156 105.9912 166.0547 105.9707 c
165.9619 105.8662 165.8125 105.7139 165.6055 105.5156 c
165.4014 105.3193 165.248 105.1631 165.1504 105.0537 C
164.9043 104.793 L
165.584 104.1729 L
166.2637 103.5635 l
166.6094 103.9473 166.957 104.3779 167.3145 104.8662 c
167.3701 104.793 167.4404 104.7148 167.5254 104.6396 c
167.5479 104.6221 167.5723 104.6006 167.6025 104.5723 c
167.6309 104.5537 167.6641 104.5273 167.7041 104.5039 C
167.7773 104.4521 l
167.6797 104.3477 167.5293 104.1885 167.3242 103.9873 c
167.1201 103.7744 166.9668 103.6201 166.8682 103.5068 C
166.3105 102.8623 L
165.8945 102.3711 L
165.6035 102.6631 L
164.6221 103.5967 L
163.8105 104.3428 L
163.1797 104.9072 l
163.0469 105.0303 162.9414 105.1221 162.8672 105.1836 c
162.4951 105.4893 162.3086 105.6416 162.3047 105.6416 c
f
*U
*u
164.5547 108.2314 m
164.4766 108.2832 l
164.5469 108.3848 164.6582 108.5439 164.8135 108.7471 c
164.9678 108.9482 165.0801 109.1045 165.1523 109.2139 c
165.2842 109.4082 165.4512 109.6689 165.6611 110.001 c
165.8682 110.3301 165.9941 110.5313 166.0371 110.5928 c
166.1035 110.5313 166.1836 110.4619 166.2783 110.3965 c
166.3027 110.3818 166.332 110.3652 166.3623 110.3447 c
166.3955 110.3252 166.4316 110.3086 166.4746 110.2822 C
166.5527 110.249 l
166.4492 110.0908 166.2861 109.873 166.0566 109.5811 c
165.8291 109.2949 165.6641 109.0771 165.5605 108.9229 C
166.1777 108.4912 L
166.8398 108.0342 L
167.708 109.4346 l
167.7676 109.3838 167.8164 109.3389 167.8594 109.3018 c
167.9014 109.2666 167.9404 109.2373 167.9707 109.2139 c
168.0234 109.1768 168.0684 109.1533 168.1055 109.1357 c
168.1387 109.1221 168.1777 109.1045 168.2207 109.0908 c
168.1416 108.9727 168.0146 108.8018 167.8398 108.5771 c
167.665 108.3516 167.5361 108.1768 167.4512 108.0527 C
167.248 107.7646 L
167.9404 107.2979 L
169.2363 106.4873 l
169.1953 106.4277 169.1309 106.3398 169.0391 106.2285 c
168.9512 106.1152 168.8936 106.041 168.8701 106.0088 c
168.8262 105.9404 168.7676 105.8467 168.7012 105.7266 c
168.6328 105.6006 168.5908 105.5273 168.5723 105.499 C
168.2432 105.7549 L
167.1387 106.5322 L
166.2324 107.1572 L
165.5273 107.6289 l
165.375 107.7314 165.2598 107.8037 165.1758 107.8545 c
164.7666 108.1025 164.5566 108.2256 164.5547 108.2314 c
f
*U
*u
166.8828 112.2471 m
166.9766 112.1963 167.0781 112.1406 167.1895 112.0693 c
167.4648 111.8984 167.6406 111.7939 167.7129 111.7559 c
167.8525 111.6777 168.0586 111.5674 168.3291 111.4082 c
168.5996 111.249 168.8066 111.1357 168.9473 111.0596 c
169.0918 110.9814 169.3154 110.875 169.6172 110.7275 c
169.918 110.5908 170.1445 110.4746 170.2969 110.3984 c
170.3721 110.3584 170.5742 110.2666 170.9004 110.124 c
171.0342 110.0625 171.1553 110.0049 171.2656 109.9482 c
171.2324 109.876 171.1758 109.7852 171.1006 109.6689 c
171.0264 109.5557 170.9834 109.4844 170.9688 109.458 c
170.8789 109.29 170.791 109.0908 170.7051 108.8779 c
170.4658 109.001 170.1768 109.1621 169.8398 109.3613 c
169.0781 109.8135 168.5967 110.0908 168.3975 110.1943 C
168.0479 110.3799 L
167.2168 110.7998 l
167.0967 110.8604 166.9766 110.9199 166.8584 110.9814 c
166.7363 111.0361 166.5605 111.1104 166.334 111.207 c
166.373 111.2754 166.4307 111.375 166.5039 111.4912 c
166.5801 111.6094 166.625 111.6777 166.6387 111.7061 c
166.6777 111.7822 166.7266 111.8867 166.7803 112.0166 c
166.834 112.1475 166.8711 112.2256 166.8828 112.2471 c
f
*U
*u
172.5645 115.3154 m
172.6309 115.3936 L
173.1504 115.0205 l
173.1758 114.7939 173.1699 114.5518 173.127 114.3037 c
173.0879 114.0596 173.0225 113.8135 172.9297 113.5732 c
172.8496 113.3604 172.7686 113.1826 172.6875 113.0381 c
172.6777 113.0264 172.6133 112.9219 172.4932 112.7256 c
172.4297 112.6299 172.3389 112.5215 172.2207 112.4053 c
172.0996 112.29 171.9902 112.1963 171.8906 112.1221 c
171.793 112.0498 171.6787 111.9863 171.5527 111.9268 c
171.4551 111.8867 171.3398 111.8418 171.2119 111.8037 c
170.9629 111.7354 170.7148 111.7061 170.4688 111.7207 c
170.2197 111.7354 169.9668 111.79 169.71 111.8867 c
169.292 112.0479 168.9512 112.2393 168.6914 112.4717 c
168.4355 112.7021 168.2305 113.0068 168.084 113.3936 c
167.9648 113.7207 167.918 114.0664 167.9434 114.4463 c
167.9707 114.8174 168.0527 115.1846 168.1895 115.5449 c
168.2822 115.7891 168.4023 116.0166 168.5508 116.2363 c
168.6992 116.46 168.8633 116.6494 169.041 116.8057 c
169.123 116.749 169.2217 116.6807 169.3398 116.6025 c
169.4551 116.5244 169.5693 116.4541 169.6709 116.3838 C
169.6357 116.292 l
169.4082 116.2344 169.1992 116.126 169.0186 115.9697 c
168.834 115.8105 168.6982 115.6182 168.6133 115.3955 c
168.4141 114.8721 168.4727 114.3838 168.7939 113.9385 c
169.0742 113.5479 169.4902 113.2471 170.0391 113.0381 c
170.2988 112.9365 170.5557 112.877 170.8164 112.8506 c
171.0801 112.8252 171.3262 112.8467 171.5645 112.915 c
171.7998 112.9834 172.0078 113.1123 172.1914 113.292 c
172.375 113.4668 172.5117 113.6729 172.6035 113.917 c
172.6836 114.124 172.7168 114.3535 172.709 114.6113 c
172.7012 114.8682 172.6514 115.0986 172.5645 115.3154 c
f
*U
*u
169.2324 118.7363 m
169.334 118.708 169.4512 118.6748 169.5723 118.6318 c
169.8789 118.5283 170.0723 118.4619 170.1523 118.4424 c
170.3066 118.4023 170.5322 118.3359 170.8311 118.2393 c
171.1309 118.1475 171.3574 118.0771 171.5117 118.0342 c
171.6719 117.999 171.9121 117.9404 172.2383 117.8672 c
172.5645 117.7979 172.8086 117.7393 172.9727 117.6963 c
173.0547 117.6768 173.2744 117.6348 173.625 117.5615 c
173.7666 117.5322 173.9004 117.5049 174.0195 117.4707 c
174.002 117.3975 173.9678 117.2959 173.9219 117.166 c
173.874 117.0381 173.8477 116.957 173.8408 116.9287 c
173.791 116.7441 173.748 116.5381 173.7109 116.3057 c
173.4512 116.376 173.1348 116.4668 172.7607 116.5879 c
171.918 116.8525 171.3867 117.0166 171.168 117.0713 C
170.7881 117.1729 L
169.8818 117.3975 l
169.7529 117.4307 169.623 117.4668 169.4922 117.4951 c
169.3633 117.5205 169.1758 117.5566 168.9316 117.5928 c
168.9531 117.6748 168.9873 117.7813 169.0352 117.9111 c
169.082 118.0469 169.1084 118.1279 169.1172 118.1533 c
169.1416 118.2393 169.1621 118.3525 169.1865 118.4873 c
169.21 118.6299 169.2256 118.708 169.2324 118.7363 c
f
*U
*u
173.7539 120.3408 m
173.3711 120.165 172.916 120.1201 172.3926 120.1982 c
172.1104 120.2393 171.8408 120.3076 171.583 120.3877 c
171.3242 120.4736 171.0938 120.5869 170.8906 120.7246 c
170.6885 120.8691 170.5225 121.0557 170.3945 121.3057 c
170.3145 121.4521 170.2676 121.5889 170.2549 121.7002 c
170.2422 121.8193 170.249 121.9658 170.2773 122.1533 c
170.3555 122.6504 170.6309 123.0039 171.1064 123.2119 c
171.5049 123.3828 171.9688 123.4307 172.499 123.3467 c
172.7734 123.3047 173.0342 123.2412 173.2773 123.1553 c
173.5195 123.0654 173.7344 122.9512 173.9238 122.8135 c
174.1631 122.6221 174.3398 122.4111 174.4473 122.1816 c
174.5586 121.9443 174.5908 121.6787 174.5469 121.3975 c
174.4727 120.8916 174.207 120.5439 173.7539 120.3408 c
f
1 D
172.2275 124.5537 m
172.0381 124.5459 171.8408 124.5205 171.6387 124.4697 c
171.4355 124.4209 171.248 124.3447 171.0742 124.2354 c
170.9258 124.1533 170.7676 124.0205 170.6045 123.8447 c
170.4023 123.6338 170.2402 123.3955 170.1211 123.1299 c
170 122.8643 169.916 122.5703 169.8672 122.2578 c
169.8086 121.876 169.8066 121.5107 169.8633 121.167 c
169.9141 120.8232 170.0391 120.4922 170.2344 120.1816 c
170.4258 119.8691 170.6758 119.6162 170.9834 119.417 c
171.2891 119.2275 171.6309 119.1035 172.001 119.042 c
172.3779 118.9854 172.7285 118.9854 173.0508 119.0469 c
173.3711 119.1084 173.6738 119.251 173.9551 119.4541 c
174.2363 119.665 174.4609 119.9287 174.6289 120.2529 c
174.793 120.5771 174.9063 120.9209 174.9629 121.2959 c
175.0254 121.6885 175.0273 122.0518 174.9736 122.3896 c
174.918 122.7314 174.791 123.0557 174.5957 123.3662 c
174.4014 123.6836 174.1465 123.9346 173.835 124.1318 c
173.5215 124.3311 173.1846 124.4561 172.8184 124.5127 c
172.6113 124.5459 172.4141 124.5576 172.2275 124.5537 c
f
*U
*u
0 D
129.9902 113.5928 m
129.9966 114.9648 L
129.9395 115.0049 l
129.6597 114.8457 129.354 114.6875 129.0215 114.5352 c
128.9751 114.6133 128.9253 114.6875 128.873 114.749 c
128.8213 114.8174 128.7549 114.8818 128.6768 114.957 C
128.6768 115.0205 l
129.0664 115.1475 129.4727 115.3037 129.8955 115.4873 c
130.2212 115.6328 130.6147 115.8252 131.0825 116.0664 C
131.2397 116.002 l
131.2397 115.6611 131.2319 115.251 131.2168 114.7891 c
131.1787 113.7021 131.1587 113.0186 131.1587 112.7393 C
131.1587 112.2393 l
131.1587 112.0342 131.1665 111.7236 131.1846 111.3037 c
131.1987 110.8896 131.208 110.5742 131.208 110.3584 C
131.1323 110.3682 l
130.9722 110.3818 130.853 110.3877 130.7729 110.3965 c
130.6948 110.3984 130.6216 110.4014 130.5557 110.4014 c
130.4692 110.4014 130.3442 110.3965 130.186 110.3818 c
130.0244 110.3682 129.9287 110.3584 129.8955 110.3584 C
129.9478 111.0107 l
129.9478 111.4082 129.9546 111.915 129.9692 112.5264 c
129.9795 113.1445 129.9902 113.4951 129.9902 113.5928 c
f
*U
*u
138.0439 113.4268 m
137.9243 113.1396 137.7334 112.998 137.4766 112.998 c
137.2324 112.998 137.0537 113.1064 136.9395 113.3271 c
136.8706 113.4668 136.8203 113.6758 136.7905 113.9619 c
136.7666 114.3369 L
136.7666 114.6416 136.8105 114.9102 136.9004 115.1279 c
137.0215 115.4404 137.2109 115.5986 137.4688 115.5986 c
137.7632 115.5986 137.9668 115.4219 138.0791 115.0713 c
138.1455 114.8682 138.1802 114.5781 138.1802 114.1943 c
138.1802 113.8955 138.1328 113.6377 138.0439 113.4268 c
f
1 D
136.063 110.6455 m
136.082 110.5889 136.1011 110.5313 136.1221 110.4619 c
136.1436 110.3965 136.1782 110.3564 136.2158 110.3516 c
136.2549 110.3389 136.2847 110.3301 136.3071 110.3154 c
136.4077 110.2871 136.4824 110.2666 136.5332 110.2588 c
136.582 110.2588 136.666 110.2549 136.7832 110.2549 c
137.1792 110.2549 137.5581 110.3447 137.9194 110.5313 c
138.2803 110.7217 138.5708 110.9717 138.7881 111.2969 c
139.0044 111.6221 139.1646 111.9863 139.2642 112.3896 c
139.3633 112.7959 139.4131 113.2158 139.4131 113.6494 c
139.4131 113.9482 139.3755 114.2412 139.2969 114.5283 c
139.2188 114.8174 139.104 115.0713 138.9463 115.2842 c
138.7642 115.5166 138.5327 115.6943 138.2583 115.8076 c
137.981 115.9189 137.6787 115.9736 137.3506 115.9736 c
137.0898 115.9736 136.8516 115.9404 136.6387 115.8623 c
136.4229 115.7822 136.2266 115.6689 136.0557 115.5 c
135.8335 115.2744 135.686 115.0615 135.6104 114.8535 c
135.5356 114.6416 135.4966 114.374 135.4966 114.0547 c
135.4966 113.5928 135.6543 113.2178 135.9678 112.9434 c
136.2847 112.6592 136.6743 112.5264 137.1431 112.5264 c
137.5547 112.5264 137.8862 112.6592 138.1362 112.9434 c
138.1953 112.915 L
138.1953 112.8301 L
138.1953 112.3037 138.0864 111.8271 137.8682 111.4053 c
137.5957 110.875 137.2202 110.6094 136.7402 110.6094 c
136.623 110.6094 136.4941 110.6494 136.3496 110.7275 c
136.269 110.7725 136.1577 110.8486 136.0068 110.9561 c
135.9478 110.8965 l
136.0098 110.7803 136.0488 110.6943 136.063 110.6455 c
f
*U
*u
0 D
143.9219 114.1025 m
144.2109 114.5352 144.4043 114.8232 144.5 114.957 c
144.5566 114.957 L
144.5566 112.6074 L
143.0117 112.6074 L
142.9697 112.6592 l
143.376 113.2822 143.6953 113.7607 143.9219 114.1025 c
f
1 D
142.397 112.3291 m
142.4067 112.2471 142.4092 112.1729 142.4092 112.1074 c
142.4092 112.0313 142.4082 111.9658 142.4009 111.9082 c
142.4009 111.8936 142.394 111.832 142.376 111.7158 c
144.5654 111.7158 L
144.5654 111.4463 144.5566 111.1924 144.54 110.96 c
144.5234 110.7275 144.5078 110.5313 144.4883 110.3584 c
144.5176 110.3584 144.6094 110.3682 144.7617 110.3818 c
144.9141 110.3965 145.0342 110.4014 145.125 110.4014 c
145.2402 110.4014 145.3398 110.3984 145.4209 110.3916 c
145.501 110.3818 145.5898 110.373 145.6855 110.3682 c
145.7598 110.3584 L
145.7432 110.501 L
145.7188 110.8545 L
145.6934 111.7158 L
146.4023 111.6641 L
146.3848 111.8174 146.3779 111.9199 146.373 111.9658 c
146.3711 112.0068 146.3691 112.0693 146.3691 112.1475 c
146.3691 112.2451 146.3711 112.3252 146.3779 112.4014 c
146.3848 112.4736 146.3916 112.5479 146.4023 112.626 c
145.6934 112.5762 L
145.709 114.1592 L
145.7266 114.9814 L
145.7266 115.0205 145.7383 115.2227 145.7598 115.5986 c
145.7666 115.6914 145.7666 115.8105 145.7666 115.9541 c
145.6074 115.9189 145.4268 115.8975 145.2246 115.8975 c
145.1484 115.8975 145.0547 115.9072 144.9492 115.9189 c
144.8428 115.9355 144.7764 115.9482 144.75 115.9482 c
144.6738 115.9541 L
144.5566 115.7607 144.4004 115.5117 144.207 115.2227 c
144.1016 115.0615 143.9355 114.8174 143.7129 114.4951 c
143.1104 113.585 L
142.376 112.5127 l
142.3809 112.4736 142.3877 112.4072 142.397 112.3291 c
f
*U
*u
0 D
150.7324 112.7754 m
150.8555 113.0547 151.0449 113.2021 151.2988 113.2021 c
151.5898 113.2021 151.791 113.0381 151.9023 112.7178 c
151.9688 112.5127 152.002 112.2324 152.002 111.875 c
152.002 111.5596 151.96 111.29 151.8779 111.0742 c
151.7598 110.7568 151.5713 110.6025 151.3086 110.6025 c
151.0137 110.6025 150.8105 110.7803 150.6992 111.1279 c
150.6309 111.3369 150.5986 111.626 150.5986 112.0068 c
150.5986 112.3057 150.6426 112.5615 150.7324 112.7754 c
f
1 D
152.4111 115.9072 m
152.2998 115.9355 152.1602 115.9482 151.9932 115.9482 c
151.9551 115.9482 151.9063 115.9482 151.8438 115.9482 c
151.7832 115.9404 151.666 115.9238 151.4883 115.8936 c
151.3125 115.8643 151.1465 115.8174 150.9854 115.7607 c
150.8271 115.6943 150.6758 115.6133 150.5332 115.5068 c
150.1299 115.1943 149.8262 114.749 149.6211 114.1709 c
149.4482 113.6729 149.3633 113.1357 149.3633 112.5547 c
149.3633 112.2607 149.3965 111.9795 149.4668 111.7158 c
149.5361 111.4463 149.6504 111.1973 149.8066 110.9697 c
149.9609 110.7451 150.168 110.5596 150.4307 110.4268 c
150.542 110.3701 150.6826 110.3252 150.8555 110.2871 c
151.0244 110.2549 151.1807 110.2373 151.3262 110.2373 c
151.8818 110.2373 152.3516 110.4053 152.7285 110.749 c
153.1084 111.0811 153.2969 111.5313 153.2969 112.083 c
153.2969 112.5791 153.1348 112.9648 152.8125 113.249 c
152.4902 113.5361 152.0801 113.6758 151.5859 113.6758 c
151.2051 113.6758 150.8906 113.54 150.6416 113.2588 c
150.584 113.292 L
150.584 113.5615 150.6143 113.8232 150.6816 114.085 c
150.7158 114.2178 150.7588 114.374 150.8125 114.5576 c
150.8652 114.7324 150.9541 114.9033 151.0801 115.0664 c
151.2051 115.2227 151.3369 115.3506 151.4756 115.4385 c
151.6494 115.5518 151.8262 115.6045 152.0117 115.6045 c
152.0996 115.6045 152.1875 115.5986 152.2734 115.5908 c
152.3594 115.5811 152.4395 115.5615 152.5137 115.5352 c
152.5625 115.583 l
152.5137 115.6875 152.4609 115.7939 152.4111 115.9072 c
f
*U
1 Ap
0 D
78.3506 148.6206 m
80.2354 148.6206 81.7637 150.1519 81.7637 152.0303 c
81.7637 153.9189 80.2354 155.4448 78.3506 155.4448 c
76.4648 155.4448 74.936 153.9189 74.936 152.0303 c
74.936 150.1519 76.4648 148.6206 78.3506 148.6206 c
f
204.0156 149.7319 m
205.9004 149.7319 207.4287 151.2627 207.4287 153.1445 c
207.4287 155.0303 205.9004 156.5586 204.0156 156.5586 c
202.1309 156.5586 200.6035 155.0303 200.6035 153.1445 c
200.6035 151.2627 202.1309 149.7319 204.0156 149.7319 c
f
0 Ap
80.7446 177.5054 m
84.2124 182.1592 l
83.2134 182.8296 l
84.6401 184.7393 l
85.6411 184.0781 l
89.1567 188.8003 l
90.6436 187.8003 l
82.2124 176.4844 l
80.7446 177.5054 l
f
u
92.459 179.6006 m
90.1069 181.1709 L
88.4487 178.9463 L
90.7988 177.3755 L
92.459 179.6006 L
f
U
u
95.9819 184.1919 m
94.5308 185.1631 L
85.9609 173.6602 L
87.4116 172.6885 L
95.9819 184.1919 L
f
U
*u
u
89.041 178.4673 m
87.2393 176.6099 85.1133 175.7642 83.9268 176.5625 c
82.5229 177.501 82.9609 180.3774 84.9019 182.9839 c
86.8457 185.5923 89.5596 186.9478 90.9634 186.0088 c
92.1377 185.2222 92.0264 183.0903 90.8271 180.8892 c
F
U
u
1 D
88.5698 180.5313 m
89.5586 181.8579 89.8535 183.2705 89.2319 183.6826 c
88.6108 184.1021 87.3066 183.3608 86.3223 182.0332 c
85.333 180.7139 85.0381 179.3018 85.6572 178.8823 c
86.2793 178.4673 87.585 179.2046 88.5698 180.5313 c
f
U
*U
*u
u
0 D
89.8916 172.1865 m
88.2139 173.3096 88.5459 176.4775 90.6284 179.2729 c
92.7085 182.0713 95.7554 183.4268 97.4297 182.3086 c
99.105 181.1875 98.7744 178.0127 96.6914 175.2192 c
94.6089 172.4238 91.5635 171.0684 89.8916 172.1865 c
f
U
u
1 D
95.1836 176.2241 m
96.4795 177.9653 96.7852 179.873 95.8687 180.4912 c
94.9502 181.1025 93.1543 180.1929 91.8594 178.4512 c
90.5635 176.71 90.2549 174.8066 91.1758 174.1909 c
92.0938 173.5771 93.8896 174.4849 95.1836 176.2241 c
f
U
*U
u
0 D
117.7324 199.5977 m
113.623 205.4878 L
111.667 204.2534 L
115.7778 198.3604 L
117.7324 199.5977 L
f
U
108.3867 192.937 m
118.1367 199.0713 l
121.3779 194.4277 l
119.3364 193.1431 l
117.106 196.3423 l
109.3945 191.4873 l
108.3867 192.937 l
f
*u
u
105.5898 196.3564 m
104.3809 198.0957 104.8706 200.4243 106.6855 201.5684 c
108.5015 202.7134 110.9561 202.2324 112.1646 200.4956 c
113.374 198.7637 112.8848 196.4297 111.0713 195.2832 c
109.2549 194.1411 106.8013 194.6221 105.5898 196.3564 c
f
U
u
1 D
109.9741 196.856 m
110.749 197.3442 110.8872 198.4463 110.2808 199.3154 c
109.6758 200.1777 108.5557 200.4863 107.7813 199.998 c
107.0068 199.5122 106.8691 198.4102 107.4746 197.5435 c
108.0811 196.6782 109.1982 196.3706 109.9741 196.856 c
f
U
*U
u
0 D
140.5225 210.9609 m
134.8237 210.9609 l
134.8237 197.6709 l
143.9619 197.6709 l
143.9619 204.3975 l
144.7617 204.3975 l
144.7617 197.6709 l
147.2285 197.6709 l
147.2285 210.9609 l
144.7969 210.9609 l
144.7969 206.3003 l
143.998 206.3003 l
143.998 210.918 l
141.5645 210.918 l
141.5645 199.4082 l
136.9434 199.4082 l
136.9434 209.4756 l
140.5225 209.4756 l
140.5225 210.9609 l
f
U
u
194.0742 188.1509 m
201.0996 178.5791 l
191.1484 172.0229 l
191.9072 170.9854 l
190.375 169.9785 l
182.3145 180.958 l
183.8428 181.9722 l
185.2803 180.0122 l
191.5459 184.1401 l
193.002 182.1592 l
186.709 178.0078 l
187.3027 177.2002 l
193.6289 181.3701 l
195.0313 179.4624 l
188.6973 175.2856 l
189.6357 173.9375 l
198.0625 179.4893 l
192.4961 187.1421 l
194.0742 188.1509 l
f
U
169.5586 205.8315 m
175.6504 201.9971 l
174.8281 200.8198 l
168.7646 204.6348 l
169.5586 205.8315 l
f
167.2373 204.7695 m
175.4746 199.5854 l
174.4727 198.1426 l
166.2617 203.3076 l
167.2373 204.7695 l
f
177.3379 200.8862 m
179.6289 199.4482 l
177.2129 195.9771 l
178.4609 195.1855 l
177.334 193.5674 l
176.0879 194.3564 l
174.9434 192.7192 l
172.709 194.124 l
177.3379 200.8862 l
f
164.0771 198.8486 m
174.6348 192.2056 l
171.9785 188.3901 l
169.6602 189.8452 l
171.1914 192.0488 l
162.9531 197.2305 l
164.0771 198.8486 l
f
*u
166.3135 201.3979 m
167.2822 202.7959 169.4854 203.0352 171.2285 201.936 c
172.9746 200.8389 173.6006 198.8228 172.6289 197.4224 c
171.6602 196.0269 169.4551 195.7852 167.7129 196.8843 c
165.9688 197.9795 165.3418 200.0005 166.3135 201.3979 c
f
1 D
168.4238 197.9033 m
169.1016 197.4746 170.123 197.8042 170.7012 198.6377 c
171.2793 199.4673 171.1992 200.4883 170.5205 200.917 c
169.8398 201.3438 168.8193 201.0142 168.2402 200.1875 c
167.6631 199.3491 167.7432 198.332 168.4238 197.9033 c
f
*U
*u
0 D
72.9995 126.8799 m
84.4893 130.2803 L
84.9561 128.7119 L
80.208 127.3018 L
81.978 121.3281 L
86.7261 122.7334 L
87.1904 121.1631 L
75.7017 117.7607 L
75.2358 119.3359 L
80.6084 120.9209 L
78.8384 126.8965 L
73.4673 125.3037 L
72.9995 126.8799 l
f
*U
*u
80.2813 113.292 m
80.7881 114.3037 81.6318 115.1113 82.814 115.708 c
84.2915 116.4668 85.5874 116.6865 86.7021 116.376 c
87.8164 116.0596 88.6548 115.3535 89.2163 114.2471 c
89.7954 113.1064 89.8691 112.0166 89.4365 110.9697 c
89.0068 109.9209 88.1631 109.0791 86.9087 108.4414 c
85.7183 107.835 84.5239 107.5859 83.3218 107.6885 c
82.1167 107.792 81.1899 108.4873 80.5425 109.7637 c
79.8594 111.1074 79.772 112.2822 80.2813 113.292 c
f
1 D
86.4028 118.0713 m
85.0093 118.2666 83.5913 117.9951 82.1465 117.2627 c
80.5479 116.4424 79.4365 115.3535 78.8159 113.9814 c
78.208 112.4912 78.3242 110.9199 79.1606 109.2803 c
80.0552 107.5156 81.3643 106.4775 83.0884 106.1553 c
84.5562 105.8828 86.0898 106.1553 87.6841 106.9707 c
89.1567 107.7168 90.1865 108.6826 90.772 109.873 c
91.5225 111.3984 91.4185 113.1045 90.459 114.9932 c
89.542 116.7939 88.1904 117.8193 86.4028 118.0713 c
f
0 D
90.4814 114.9424 m
F
*U
*u
96.4238 104.9521 m
F
1 D
85.0688 100.0283 m
92.7148 105.9912 L
88.8442 95.1875 L
89.9614 93.752 L
99.4126 101.1182 L
98.4639 102.3379 L
90.811 96.3682 L
94.7417 107.1104 L
93.563 108.6191 L
84.1123 101.2529 l
85.0688 100.0283 L
f
*U
*u
0 D
104.5542 96.8535 m
F
1 D
100.5928 97.9785 m
98.9956 97.7793 97.5459 96.917 96.2437 95.3916 c
94.9409 93.8604 94.3389 92.292 94.438 90.6924 c
94.6196 89.333 95.2495 88.1865 96.3315 87.2646 c
97.168 86.5557 97.9878 86.1172 98.791 85.9658 c
99.2661 85.8643 99.9082 85.8721 100.7168 85.9707 c
100.0137 84.542 L
100.8091 83.8721 L
104.9678 88.75 L
100.9634 92.1611 L
100.0903 91.1387 L
102.9453 88.7002 L
102.0249 87.6436 101.0879 87.1104 100.1426 87.0889 c
99.1938 87.0732 98.3086 87.4131 97.4839 88.1172 c
96.4097 89.0342 95.9229 90.0342 96.0269 91.1221 c
96.1313 92.21 96.645 93.2969 97.5679 94.3799 c
98.6367 95.6328 99.7314 96.335 100.8501 96.4697 c
101.9653 96.6162 102.9453 96.3252 103.7886 95.6025 c
104.5029 94.9961 104.9653 94.3418 105.1689 93.6377 c
105.3799 92.9346 105.2734 92.1904 104.8564 91.3916 c
106.0791 90.3525 L
106.8926 91.7188 107.0469 93.0244 106.5459 94.2725 c
106.2046 95.1377 105.604 95.9336 104.7476 96.6611 c
103.4961 97.7295 102.1128 98.166 100.5928 97.9785 c
f
*U
*u
0 D
111.4561 91.6357 m
F
1 D
105.6084 81.1445 m
112.1406 91.1904 L
110.7656 92.0811 L
104.2334 82.0381 l
105.6084 81.1445 L
f
*U
*u
0 D
108.0845 79.7773 m
113.8218 90.2949 L
115.2114 89.542 L
112.4121 84.4141 L
120.3379 86.7412 L
122.3057 85.667 L
115.6201 83.8145 L
116.6899 75.084 L
114.8369 76.0908 L
114.0342 83.374 L
111.4741 82.6846 L
109.4727 79.0195 L
108.0845 79.7773 l
f
*U
u
*u
132.5493 84.0332 m
F
1 D
126.7456 78.2041 m
126.4956 76.749 126.498 75.5986 126.7524 74.752 c
127.2158 73.2002 128.4478 72.2549 130.4404 71.9082 c
132.4331 71.5605 133.9126 72.042 134.877 73.3398 c
135.4058 74.0596 135.7954 75.1406 136.0464 76.5947 c
137.1968 83.2227 L
135.5747 83.5049 L
134.3057 76.21 L
134.1592 75.3564 133.9092 74.7002 133.562 74.2373 c
132.9106 73.3975 131.9082 73.0908 130.5542 73.3271 c
129.4214 73.5225 128.6943 74.0928 128.3662 75.0361 c
128.1445 75.6592 128.1055 76.4014 128.2549 77.2568 c
129.5225 84.5537 L
127.8975 84.833 l
126.7456 78.2041 L
f
*U
*u
0 D
143.627 83.126 m
F
1 D
140.7803 71.0752 m
140.5757 80.7773 L
146.9229 71.21 L
148.7412 71.25 L
148.4854 83.2275 L
146.9473 83.1963 L
147.1543 73.4863 L
140.895 83.0684 L
138.9761 83.0234 L
139.2344 71.0459 l
140.7803 71.0752 L
f
*U
*u
0 D
151.5801 83.8994 m
F
1 D
154.4316 72.2334 m
152.3828 84.04 L
150.7676 83.7646 L
152.8184 71.9541 l
154.4316 72.2334 L
f
*U
*u
0 D
153.6895 84.0684 m
155.4004 84.6162 L
161.7998 75.9531 L
161.916 86.7061 L
163.6465 87.2646 L
163.1484 74.5146 L
161.5117 73.9893 L
153.6895 84.0684 l
f
*U
*u
168.4023 89.8711 m
F
1 D
178.002 81.4424 m
177.3252 82.6982 L
170.9258 79.2295 L
168.9932 82.8027 L
174.8086 85.9541 L
174.1484 87.1748 L
168.332 84.0303 L
166.5977 87.2295 L
172.8926 90.6318 L
172.1914 91.9248 L
164.5098 87.7627 L
170.2139 77.2178 l
178.002 81.4424 L
f
*U
*u
0 D
175.793 92.8447 m
178.8809 95.3291 L
179.3125 95.6729 179.709 95.8887 180.0674 95.9717 c
180.749 96.1162 181.3535 95.8604 181.8896 95.1943 c
182.3867 94.5791 182.5566 94.0078 182.4063 93.4932 c
182.252 92.9775 181.877 92.4814 181.2852 92.0078 c
178.3633 89.6533 l
175.793 92.8447 L
f
1 D
182.4346 84.5967 m
179.21 88.5986 L
182.0898 90.915 L
182.6064 91.3301 183.0303 91.5791 183.3652 91.6592 c
183.9551 91.792 184.5117 91.5674 185.0313 90.9824 c
186.3604 89.4893 L
186.6709 89.1357 186.8916 88.9111 187.0176 88.8018 c
187.1465 88.7002 187.2656 88.6221 187.3701 88.5693 c
188.9219 89.8213 L
188.752 90.0273 L
188.4893 89.958 188.2012 90.042 187.8848 90.2686 c
187.6973 90.4033 187.457 90.6533 187.1563 90.999 c
186.1055 92.2119 L
185.6475 92.7373 185.2266 93.0479 184.8486 93.1377 c
184.4697 93.2285 184.04 93.2061 183.5547 93.0596 c
183.7988 93.6074 183.8887 94.1543 183.834 94.6973 c
183.7793 95.2393 183.5254 95.792 183.0752 96.3486 c
182.2129 97.4248 181.1826 97.8037 179.9863 97.4932 c
179.3535 97.3311 178.6875 96.9619 177.9727 96.3906 c
173.6523 92.9063 L
181.1699 83.5781 l
182.4346 84.5967 L
f
*U
*u
0 D
184.8438 103.5771 m
F
1 D
191.1797 93.3174 m
192.3066 93.4512 193.3594 94.0791 194.3418 95.1992 c
195.1797 96.1709 195.7031 97.2041 195.9063 98.2979 c
196.1104 99.4023 195.7148 100.3906 194.7129 101.2646 c
193.9121 101.9658 193.0479 102.2148 192.125 102.0049 c
191.5938 101.8857 190.9922 101.5801 190.3184 101.0918 c
188.9258 100.0771 L
187.9873 99.3955 187.3457 98.9951 187.002 98.8652 c
186.4775 98.6777 185.9922 98.7744 185.5488 99.1592 c
185.1484 99.5068 184.9326 99.9756 184.9033 100.5566 c
184.8799 101.1348 185.1758 101.7842 185.8066 102.5068 c
186.5869 103.3994 187.373 103.8291 188.1709 103.7881 c
188.6016 103.7666 189.0889 103.5684 189.625 103.2119 c
190.6309 104.3623 L
189.625 105.2412 188.6055 105.5439 187.5742 105.2861 c
186.5352 105.0205 185.6084 104.4092 184.7832 103.4658 c
183.8848 102.4326 183.4512 101.4121 183.4805 100.4004 c
183.5127 99.3818 183.9355 98.5264 184.7461 97.8105 c
185.4941 97.1592 186.3086 96.9551 187.1855 97.2041 c
187.6914 97.3467 188.3848 97.7373 189.2617 98.3799 c
190.6064 99.3623 L
191.3369 99.8936 191.9395 100.2197 192.418 100.3574 c
192.8945 100.4854 193.3789 100.3311 193.8691 99.9004 c
194.5273 99.3271 194.6641 98.5693 194.2813 97.6162 c
194.0811 97.126 193.7852 96.6494 193.3857 96.1924 c
192.4932 95.1592 191.5684 94.7139 190.6152 94.8232 c
190.1104 94.8936 189.5879 95.1357 189.0527 95.5547 c
188.0498 94.4014 l
189.0137 93.5381 190.0566 93.1807 191.1797 93.3174 c
f
*U
*u
0 D
189.6816 109.3232 m
F
1 D
200.0449 103.2529 m
190.1396 110.001 L
189.2168 108.6436 L
199.1191 101.8975 l
200.0449 103.2529 L
f
*U
*u
0 D
190.9561 110.915 m
195.4658 119.5322 L
196.7305 118.8721 L
194.8545 115.292 L
204.207 110.3916 L
203.4414 108.9326 L
194.0918 113.834 L
192.2168 110.2549 L
190.9561 110.915 l
f
*U
*u
197.1006 124.542 m
F
1 D
208.2598 120.0967 m
208.7549 121.6436 L
204.1543 123.1123 L
198.7178 129.6025 L
198.1396 127.7939 L
202.5781 122.7598 L
196.043 121.2354 L
195.4668 119.4326 L
203.6611 121.5654 l
208.2598 120.0967 L
f
*U
U
U
u
0 D
124.6162 160.6387 m
124.6162 171.9258 L
149.5547 171.9258 L
149.5547 168.2251 L
150.2578 168.2251 L
150.2578 172.6274 L
123.915 172.6274 L
123.915 159.9346 L
133.1655 159.9346 L
133.1655 160.6387 L
124.6162 160.6387 L
f
u
u
u
u
148.6992 149.2988 m
148.3555 149.0264 L
148.3135 148.3223 148.4736 147.5264 148.2207 146.9033 C
147.9795 146.6309 147.5859 146.645 147.2383 146.6899 C
147.0781 146.8223 147.1074 146.9556 147.1006 147.1519 C
145.9316 147.1519 L
145.8047 145.8135 L
146.5195 145.8677 147.166 145.5151 147.6426 146.2324 C
148.0244 145.9009 148.709 145.6621 148.7305 145.0981 C
148.6416 144.9009 148.4365 144.8677 148.2744 144.7969 C
148.1787 144.1782 148.167 143.5171 147.9863 142.9395 C
148.2383 142.8521 148.5684 142.8799 148.832 142.9111 C
149.4365 145.2612 149.6865 147.7349 149.9004 150.2275 C
150.5762 150.1377 151.333 150.0996 151.9727 149.8481 C
152.0625 149.6797 151.8096 149.5923 151.6797 149.5645 C
151.5469 149.5332 L
150.9883 147.2803 150.2734 145.0859 149.3926 142.9629 C
149.4219 142.9111 L
151.8389 143.0981 L
151.8926 144.1431 151.4082 145.043 151.0703 145.9697 C
151.3945 145.9556 151.666 145.6733 151.9219 145.4365 C
152.9658 144.5103 153.5527 143.3398 153.333 141.9531 C
153.2656 141.6577 153.083 141.3662 152.7734 141.2666 C
152.5449 141.2026 152.2949 141.2451 152.1035 141.3662 C
151.7764 141.6646 151.8535 142.1294 151.8389 142.5649 C
150.8262 142.2925 149.8125 141.8281 148.7813 141.4961 C
148.6855 141.376 148.6855 141.0815 148.4365 141.2119 C
148.2178 141.6294 148.127 142.1147 147.9063 142.5415 C
147.7109 141.9819 147.3047 141.229 146.6279 141.1553 C
146.4082 141.1294 146.0771 141.0625 145.9668 141.3188 C
145.8936 141.6294 145.96 142.1475 145.4805 142.1719 C
145.291 142.2617 145.0391 142.2788 144.9023 142.4609 C
145.4961 142.5957 146.416 142.0815 146.7402 142.9111 C
147.0625 143.6694 146.9531 144.4722 147.0781 145.3184 C
146.6504 145.3799 146.1953 145.4297 145.7461 145.3706 C
145.7168 145.0791 145.6738 144.8677 145.3496 144.7686 C
145.0996 144.7139 144.8203 144.6641 144.5527 144.7188 C
144.3145 145.0146 144.5527 145.3818 144.5527 145.7021 C
144.7031 146.4746 144.7617 147.2852 144.8203 148.1021 C
145.9385 147.5596 L
147.0723 147.5928 L
147.1758 148.2349 147.041 148.7871 147.1074 149.3843 C
144.2705 149.377 L
144.2422 149.4595 144.1943 149.8013 144.1504 149.8721 C
147.1064 149.877 L
147.666 150.438 L
148.0391 150.1138 148.8398 149.9102 148.6992 149.2988 C
f
U
151.9102 139.833 m
151.6914 139.627 151.3301 139.7881 151.0586 139.6982 C
151.4238 139.1123 152.0938 138.917 152.6621 138.6416 C
153.75 138.3721 L
153.7725 138.0615 153.2939 138.0322 153.2705 137.71 C
153.1855 137.5039 153.2188 137.2529 153.1387 137.04 C
152.5215 137.2129 152.043 137.7217 151.543 138.1553 C
151.3809 138.0225 L
146.9629 138.0225 L
146.9346 138.1064 146.8125 138.3428 146.8633 138.4287 C
150.0244 138.4287 L
150.3184 138.6035 150.542 139.333 150.9541 138.6934 C
150.9854 138.6748 150.9922 138.627 151.0361 138.6416 C
150.8516 138.9873 150.6035 139.2217 150.4492 139.6084 C
148.2139 139.6084 L
147.9531 140.0029 L
150.21 140.0029 L
150.874 140.686 L
151.2559 140.4775 151.7266 140.2803 151.9102 139.833 C
f
147.9775 139.5674 m
147.9551 139.2979 147.625 139.3428 147.4414 139.2217 C
146.6035 138.2744 145.5684 137.4229 144.4414 136.9873 C
144.3838 137.04 L
145.2656 138.0771 146.1113 139.1123 146.5137 140.3428 C
147.0137 140.1123 147.5068 139.8857 147.9775 139.5674 C
f
*u
151.9629 136.623 m
152.0059 136.3701 151.6914 136.4072 151.5146 136.4072 C
151.3809 136.3994 151.2344 136.4229 151.1172 136.3779 C
151.7578 135.5264 152.793 135.1963 153.8008 135.0283 C
153.8379 134.7676 153.4551 134.6797 153.375 134.4668 C
153.2637 134.2275 153.2793 133.9336 153.1602 133.6982 C
152.8066 133.6279 152.5059 134.4668 152.2344 133.8252 C
152.2344 131.6709 L
152.4609 131.8271 152.6094 132.1729 152.8438 132.415 C
153.2129 132.0684 153.7051 131.7559 153.9121 131.2988 C
153.5752 131.0693 L
144.6045 131.0791 L
144.457 131.0498 144.4639 131.4365 144.3838 131.5098 C
145.9053 131.4814 L
145.9053 134.4668 L
145.3984 134.1709 144.9355 133.7559 144.3613 133.6396 C
144.3613 133.7471 L
145.293 134.7344 146.0791 135.7793 146.4619 136.9873 C
146.9561 136.7529 147.4844 136.5264 147.9258 136.1914 C
147.874 135.9688 147.5957 135.959 147.418 135.9023 C
147.1182 135.502 146.75 135.1797 146.3809 134.8359 C
147.0703 134.5947 L
150.8125 134.5986 L
151.3516 135 L
151.0137 135.4238 150.7051 135.8643 150.5059 136.3506 C
150.3945 136.4072 L
148.2139 136.4072 L
148.1309 136.4736 148.1113 136.6885 148.0908 136.7793 C
150.3496 136.7793 L
150.9258 137.3643 L
151.3086 137.1904 151.6836 136.9639 151.9629 136.623 C
f
1 D
147.5508 134.2275 m
147.125 134.2275 L
147.125 131.4814 L
147.5508 131.4814 L
147.5508 134.2275 L
f
149.3086 134.2275 m
148.9346 134.2275 L
149.0518 134.1064 148.9492 133.9385 148.8311 133.8477 C
148.8311 131.4814 L
149.3086 131.4814 L
149.3086 134.2275 L
f
150.959 134.2344 m
150.6602 134.2275 L
150.7129 134.042 L
150.6465 133.9736 150.5781 133.9033 150.5059 133.8477 C
150.5059 131.4814 L
150.959 131.4951 L
150.959 134.2344 L
f
*U
u
0 D
133.4922 150.4473 m
133.6025 150.2178 133.2627 150.1655 133.1748 150.0498 C
133.0732 147.0313 134.8003 144.0981 137.5649 142.7358 C
137.52 142.397 137.3721 142.7617 136.8423 142.439 C
136.52 142.2427 136.4907 141.6245 136.2622 141.6147 C
135.5562 141.8379 135.0571 142.6025 134.5869 143.1597 C
133.418 144.7354 133.1313 146.6782 132.8799 148.6377 C
132.6235 145.894 131.873 142.8066 128.9702 141.7026 C
128.5737 141.5723 128.1753 141.376 127.7202 141.4609 C
127.749 141.5581 L
131.2036 143.2588 131.5864 147.1782 131.4463 150.7388 C
132.1382 150.6587 132.8599 150.6748 133.4922 150.4473 C
f
U
*u
129.7817 139.5557 m
130.313 139.5791 131.417 139.3838 131.6416 140.1533 C
132.0234 139.9307 132.5503 139.6689 132.7861 139.2148 C
132.8677 138.9355 132.5503 138.9072 132.4131 138.7881 C
132.4092 136.3662 L
132.2627 136.0283 131.8101 136.0596 131.5093 136.0596 C
131.3779 136.0635 131.2446 136.1064 131.1846 136.2412 C
131.1558 136.3408 131.2729 136.5635 131.0825 136.5586 C
129.7212 136.5586 L
129.6704 136.4541 L
129.6909 131.0215 L
129.5498 130.6924 129.1338 130.7295 128.8198 130.7021 C
128.6553 130.7021 128.4976 130.7705 128.4751 130.9678 C
128.4736 140.1719 L
129.7817 139.5557 L
f
1 D
131.1558 138.3721 m
131.1558 139.1514 L
129.7441 139.1514 L
129.7441 138.3721 L
131.1558 138.3721 L
f
131.1558 137.0635 m
131.1558 137.8447 L
129.7441 137.8447 L
129.7441 137.0635 L
131.1558 137.0635 L
f
*U
*u
0 D
135.9507 139.54 m
136.3247 140.0986 L
136.7192 139.7949 137.2715 139.627 137.4917 139.1123 C
137.4844 138.8613 137.2041 138.8291 137.0679 138.6865 C
137.0581 131.3291 L
136.9204 130.8701 136.4097 130.7295 136.001 130.7021 C
135.8174 130.6377 135.7363 130.7988 135.7363 130.9453 C
135.7363 131.4248 L
135.4336 131.6963 135.0288 131.7559 134.6694 131.9004 C
134.3525 131.7393 133.9839 131.6064 133.6104 131.6611 C
133.4189 131.8604 133.4863 132.1543 133.479 132.4072 C
132.0376 132.4619 L
131.8848 132.1016 132.1787 131.4248 131.5601 131.3936 C
131.3467 131.3584 131.0674 131.2393 130.8682 131.3936 C
130.7876 131.5547 L
130.7876 136.0781 L
131.1914 135.9873 131.6055 135.7393 132.0137 135.5752 C
133.5005 135.5752 L
133.7944 135.9756 L
133.5884 135.9834 133.3311 136.0322 133.1616 136.2031 C
133.1543 140.0986 L
134.4351 139.54 L
135.9507 139.54 L
f
1 D
135.8447 138.2813 m
135.8447 139.0654 L
134.4351 139.0654 L
134.4351 138.2813 L
135.8447 138.2813 L
f
135.8447 136.9756 m
135.8447 137.7627 L
134.4316 137.7627 L
134.4316 136.9756 L
135.8447 136.9756 L
f
133.46 134.2773 m
133.46 135.0615 L
132.0483 135.0615 L
132.0483 134.2773 L
133.46 134.2773 L
f
133.46 132.9756 m
133.46 133.7578 L
132.0483 133.7578 L
132.0483 132.9756 L
133.46 132.9756 L
f
134.1392 136.0596 m
134.3916 135.9688 134.6709 135.7295 v
135.3569 135.1465 134.7231 134.9092 y
134.7231 132.1943 l
135.103 132.1592 135.4517 132.1016 v
135.7988 132.0498 135.8984 132.2939 y
135.8984 136.4834 l
134.4058 136.4834 l
134.4907 136.3193 134.1392 136.0596 y
f
*U
U
0 D
158.7383 168.2251 m
158.7383 156.1699 L
133.1655 156.1699 L
133.1655 159.9346 L
150.2578 159.9346 L
150.2578 168.2251 L
158.7383 168.2251 L
f
U
*u
133.1655 168.2251 m
149.5547 168.2251 L
149.5547 160.6387 L
133.1655 160.6387 L
133.1655 168.2251 L
f
1 D
146.832 165.6968 m
141.5625 165.6968 L
141.5625 167.2061 L
140.8799 167.2061 L
140.8799 165.6968 L
135.9478 165.6968 L
135.9478 165.0146 L
140.7397 165.0146 L
139.8701 162.9819 135.9678 162.7446 Y
136.0322 162.0576 L
140.3481 162.3608 141.2188 164.4863 Y
142.4331 162.2285 146.6426 162.0151 Y
146.6875 162.7163 L
143.1465 163.0601 142.0571 164.3037 141.7158 165.0146 C
146.832 165.0146 L
146.832 165.6968 L
f
*U
U
U
u
0 D
102.835 130.7256 m
103.9971 129.6279 104.6084 127.3018 104.6162 127.2803 C
105.3135 127.458 L
105.2876 127.5625 104.644 130.0068 103.3315 131.249 C
102.835 130.7256 L
f
105.8066 134.0801 m
105.8418 133.9697 106.689 131.4717 108.5386 129.6211 C
109.0479 130.1328 L
107.3203 131.8555 106.4971 134.2773 106.4897 134.3027 C
105.8066 134.0801 L
f
102.0083 154.2505 m
100.3091 154.1748 98.791 153.4639 97.7295 152.2456 c
95.0181 149.1377 96.6011 146.0127 97.8174 144.7925 c
98.6982 143.9155 101.4263 142.6855 103.8047 144.707 c
104.52 145.3115 104.9346 146.1499 104.9736 147.0669 c
105.0078 147.9556 104.6836 148.8296 104.104 149.4072 c
103.6304 149.8862 102.8032 150.1519 102.0962 150.0547 c
101.4766 149.9644 100.9863 149.6348 100.6816 149.0898 C
101.3091 148.7393 L
101.5044 149.083 101.7998 149.2871 102.1934 149.3389 c
102.75 149.417 103.3188 149.1777 103.5923 148.9033 c
104.0342 148.4624 104.2808 147.7871 104.2534 147.1001 c
104.2236 146.3818 103.8989 145.7305 103.3389 145.2544 c
101.1294 143.3799 98.709 144.9199 98.3252 145.2993 c
97.2744 146.3535 95.9106 149.0645 98.2729 151.7725 c
99.2158 152.855 100.5195 153.4639 102.0391 153.5278 c
104.2437 153.625 106.6021 152.5713 108.6802 150.5688 c
111.7798 147.5762 111.7749 142.7002 111.7725 139.7832 c
111.7725 136.8193 110.0815 128.6025 104.9038 127.7256 c
103.6494 127.5098 102.5605 127.7275 101.6685 128.3701 c
100.6519 129.1045 100.1548 130.2354 100.0288 131.04 c
99.8003 132.5283 100.293 133.8643 101.3794 134.7178 c
102.3047 135.4443 103.5225 135.6895 104.4058 135.3174 c
105.3574 134.9258 106.021 134.0615 106.0942 133.126 c
106.1523 132.3789 105.8315 131.7559 105.1943 131.3623 c
104.6865 131.0596 104.1895 130.9619 103.7534 131.0967 c
103.3872 131.2041 103.0923 131.4717 102.9243 131.834 C
102.2715 131.5361 L
102.5215 130.9902 102.9858 130.5791 103.5425 130.4053 c
103.9878 130.2725 104.7012 130.2236 105.5693 130.7471 c
106.439 131.2822 106.8926 132.1709 106.8125 133.1777 c
106.7163 134.3857 105.8809 135.4893 104.6812 135.9854 c
103.5474 136.457 102.0757 136.1787 100.9341 135.2881 c
99.6377 134.2725 99.0479 132.6846 99.3169 130.9346 c
99.5088 129.6963 100.23 128.5176 101.248 127.7852 c
102.2866 127.0361 103.5923 126.7705 105.0244 127.0127 c
110.7227 127.9834 112.4932 136.542 112.4932 139.5518 c
112.4961 142.8115 112.5 147.8867 109.1802 151.0825 c
106.959 153.2295 104.4106 154.3525 102.0083 154.2505 c
f
*u
1 D
68.2192 141.0815 m
68.2192 100.7432 101.0347 67.9307 141.3701 67.9307 c
181.7051 67.9307 214.5176 100.7432 214.5176 141.0815 c
214.5176 181.415 181.7051 214.2305 141.3701 214.2305 c
101.0347 214.2305 68.2192 181.415 68.2192 141.0815 c
f
0 D
68.9395 141.0815 m
68.9395 181.0171 101.4326 213.5078 141.3701 213.5078 c
181.3066 213.5078 213.7969 181.0171 213.7969 141.0815 c
213.7969 101.1416 181.3066 68.6533 141.3701 68.6533 c
101.4326 68.6533 68.9395 101.1416 68.9395 141.0815 c
f
*U
*u
1 D
86.2715 141.0815 m
86.2715 110.7002 110.9883 85.9795 141.3701 85.9795 c
171.748 85.9795 196.4648 110.7002 196.4648 141.0815 c
196.4648 171.4639 171.748 196.1812 141.3701 196.1812 c
110.9883 196.1812 86.2715 171.4639 86.2715 141.0815 c
f
0 D
86.9917 141.0815 m
86.9917 171.0654 111.3853 195.458 141.3701 195.458 c
171.3516 195.458 195.7441 171.0654 195.7441 141.0815 c
195.7441 111.0947 171.3516 86.7002 141.3701 86.7002 c
111.3853 86.7002 86.9917 111.0947 86.9917 141.0815 c
f
*U
110.5117 177.5337 m
108.3633 176.4868 106.8765 174.3545 106.2124 171.374 C
105.835 169.4146 L
105.4087 167.0522 104.8779 164.1162 103.4536 160.9985 c
102.1875 158.2383 100.7119 156.3003 99.4141 154.5962 C
97.7339 152.2798 L
98.3394 151.8838 L
99.9854 154.1602 L
101.3081 155.8975 102.8091 157.8613 104.1084 160.6997 c
105.5708 163.896 106.1108 166.8838 106.5449 169.2842 C
106.9155 171.2148 L
107.5386 174.0156 108.8555 175.9258 110.8281 176.8848 c
112.3799 177.6406 114.4697 177.6006 116.1484 176.7759 c
117.6011 176.0649 118.5708 174.8569 118.8804 173.3779 c
119.2871 171.4141 118.7622 169.2842 117.5396 167.9526 c
116.5249 166.8462 115.104 166.3672 113.4272 166.5708 c
111.0645 166.8486 110.2681 168.4834 110.313 169.9194 c
110.3569 171.3525 111.2607 172.9307 112.8506 173.0181 c
113.9561 173.0845 114.5078 172.5635 114.7754 172.1152 c
115.1543 171.4805 115.1733 170.5986 114.8193 170.0186 C
115.4331 169.6445 L
115.9268 170.4521 115.9116 171.6206 115.394 172.4854 c
114.8716 173.3618 113.9521 173.8076 112.8091 173.7407 c
110.793 173.627 109.646 171.6934 109.5928 169.9404 c
109.5405 168.2681 110.4907 166.1943 113.3418 165.8535 c
115.7637 165.564 117.2515 166.5708 118.0718 167.4644 c
119.4453 168.9614 120.0391 171.3384 119.5864 173.5254 c
119.231 175.2285 118.1235 176.6123 116.4658 177.4272 c
114.5942 178.3423 112.2568 178.3848 110.5117 177.5337 c
f
128.749 191.1006 m
127.543 189.9331 L
126.5322 188.791 124.8428 186.8857 121.7969 184.5259 c
118.293 181.8062 114.1665 179.5503 111.7026 178.2002 C
109.9917 177.2329 L
110.376 176.624 L
112.0483 177.5649 L
114.5327 178.9253 118.6899 181.1997 122.2388 183.9551 c
125.3369 186.3574 127.0557 188.2983 128.0806 189.4521 C
129.0708 190.4565 L
129.6016 190.7246 131.3501 191.1226 133.0762 189.7998 c
133.9409 189.1318 134.4419 188.1987 134.416 187.2959 c
134.3926 186.502 133.9839 185.8125 133.2314 185.3032 c
131.2651 183.9692 128.9326 181.8486 125.8047 178.8613 c
123.2744 176.4443 120.9111 172.9019 119.1836 170.3169 C
118.1709 168.8149 L
118.7632 168.4072 L
119.7832 169.9194 L
121.4912 172.4731 123.8301 175.9795 126.3022 178.3423 c
129.4043 181.3018 131.7104 183.4009 133.6353 184.7085 c
134.5737 185.3438 135.1069 186.2534 135.1362 187.2744 c
135.1694 188.4048 134.5645 189.5654 133.5132 190.373 c
131.5684 191.8662 129.5459 191.5039 128.749 191.1006 C
f
111.3364 173.2979 m
111.6787 172.665 L
111.8379 172.7505 115.582 174.7881 117.0703 176.5557 C
116.5205 177.02 L
115.1191 175.3545 111.374 173.3218 111.3364 173.2979 C
f
114.7935 169.9688 m
115.457 169.689 L
115.4639 169.7061 116.1821 171.3218 119.2417 173.6484 C
118.8062 174.2217 L
115.5649 171.7578 114.8228 170.0396 114.7935 169.9688 C
f
100.9175 149.415 m
101.4922 148.9766 L
101.5674 149.0786 103.3506 151.4551 103.918 153.5161 C
103.2236 153.7085 L
102.6934 151.7769 100.9341 149.436 100.9175 149.415 C
f
104.2617 146.7705 m
104.9751 146.666 L
104.978 146.6948 105.3799 149.2749 107.728 151.6895 C
107.2124 152.1963 L
104.6924 149.6045 104.2783 146.8843 104.2617 146.7705 C
f
165.5791 177.3203 m
163.9209 176.5107 162.8115 175.1221 162.4551 173.416 c
162.002 171.2363 162.5957 168.8604 163.9707 167.3623 c
164.791 166.4644 166.2764 165.4575 168.6982 165.749 c
171.5508 166.0903 172.502 168.1655 172.4502 169.8359 c
172.3965 171.5942 171.249 173.52 169.2305 173.6323 c
168.0898 173.6982 167.1709 173.2549 166.6484 172.3828 c
166.1299 171.5181 166.1143 170.3457 166.6094 169.5376 C
167.2227 169.9121 L
166.8682 170.4971 166.8867 171.3789 167.2695 172.0132 c
167.5361 172.4639 168.0869 172.98 169.1895 172.9141 c
170.7793 172.8237 171.6846 171.251 171.7285 169.8149 c
171.7734 168.3789 170.9785 166.749 168.6113 166.46 c
166.9365 166.2656 165.5137 166.7422 164.501 167.8481 c
163.2783 169.1821 162.752 171.3101 163.1611 173.2744 c
163.4707 174.7544 164.4414 175.9629 165.8965 176.6763 c
167.5752 177.4937 169.6621 177.5366 171.2119 176.7813 c
173.1885 175.8164 174.5049 173.9087 175.125 171.1108 C
175.5 169.1699 L
175.9336 166.7705 176.4736 163.7847 177.9355 160.5957 c
179.2432 157.729 181.0176 155.3667 182.4414 153.4663 C
184.1533 151.0825 L
184.7588 151.4785 L
183.0195 153.8999 L
181.543 155.8687 179.8672 158.103 178.5889 160.894 c
177.168 164.0029 176.6357 166.9404 176.208 169.3008 C
175.8281 171.2646 L
175.166 174.2476 173.6797 176.3774 171.5283 177.4272 c
169.7861 178.2783 167.4512 178.2402 165.5791 177.3203 c
f
148.5273 190.2622 m
147.4775 189.4565 146.8711 188.2983 146.9053 187.168 c
146.9346 186.1514 147.4678 185.2393 148.4053 184.604 c
150.3193 183.3057 152.6309 181.2046 155.7383 178.2378 c
157.9551 176.1196 160.0088 173.1221 161.6602 170.7178 C
163.2393 168.4663 L
163.8174 168.9004 L
162.252 171.1255 L
160.584 173.5581 158.5039 176.5908 156.2354 178.7568 c
153.1016 181.749 150.7656 183.8745 148.8105 185.1963 c
148.0586 185.708 147.6484 186.4004 147.625 187.189 c
147.5996 188.0947 148.0977 189.0278 148.9648 189.6987 c
150.6855 191.0181 152.4414 190.6201 152.9717 190.3594 C
153.9512 189.3594 L
154.9785 188.2012 156.6963 186.2651 159.8037 183.8535 c
163.3672 181.0835 167.5361 178.8042 170.0254 177.4443 C
171.668 176.5225 L
172.0488 177.1338 L
170.3711 178.0767 L
167.8984 179.4272 163.7656 181.6899 160.2441 184.417 c
157.1914 186.7891 155.501 188.6987 154.4902 189.8379 C
153.2939 191.0015 L
152.4922 191.3994 150.4668 191.7617 148.5273 190.2622 c
f
164.9688 176.4556 m
166.457 174.6836 169.8008 172.8525 169.9443 172.7769 C
170.29 173.4092 L
170.2549 173.4282 166.9219 175.2524 165.5195 176.9185 C
164.9688 176.4556 L
f
162.8008 173.5464 m
165.8594 171.2148 166.5781 169.5996 166.585 169.5825 C
167.248 169.8672 L
167.2188 169.938 166.4756 171.6484 163.2363 174.1172 C
162.8008 173.5464 L
f
172.8594 150.9854 m
169.541 147.7803 169.5469 142.7075 169.5488 139.6787 c
169.5488 136.4385 171.3184 127.876 177.0186 126.9082 c
178.4512 126.6641 179.7568 126.9297 180.7959 127.6826 c
181.8125 128.415 182.5342 129.5928 182.7246 130.8271 c
182.9941 132.5781 182.4063 134.1582 181.1104 135.1748 c
179.9688 136.0752 178.4941 136.3525 177.3594 135.8809 c
176.1602 135.3857 175.3242 134.2822 175.2295 133.0732 c
175.1514 132.0615 175.6025 131.1777 176.4717 130.6475 c
177.3379 130.1182 178.0527 130.1689 178.4961 130.3057 c
179.0557 130.4766 179.5205 130.8838 179.7734 131.4248 C
179.1172 131.7324 L
178.9502 131.3652 178.6563 131.1064 178.2891 130.9902 c
177.8496 130.8604 177.3477 130.9502 176.8457 131.2607 c
176.2109 131.6514 175.8887 132.2744 175.9492 133.0166 c
176.0215 133.9619 176.6836 134.8252 177.6328 135.2158 c
178.5195 135.583 179.7402 135.3389 180.667 134.6113 c
181.75 133.7578 182.2402 132.4219 182.0117 130.9385 c
181.8887 130.126 181.3926 129.0029 180.376 128.2666 c
179.4834 127.624 178.3945 127.4033 177.1406 127.624 c
171.9609 128.501 170.2695 136.7178 170.2695 139.4443 c
170.2676 142.5957 170.2617 147.4746 173.3594 150.4644 c
175.4395 152.4663 177.7949 153.5161 179.999 153.4238 c
181.5215 153.3599 182.8223 152.7505 183.7686 151.6704 c
186.1318 148.9526 184.7656 146.249 183.7148 145.1992 c
183.332 144.8135 180.9238 143.2666 178.7031 145.1499 c
178.1436 145.6284 177.8193 146.2803 177.791 146.998 c
177.7617 147.6831 178.0078 148.3555 178.4453 148.7964 c
178.7598 149.1089 179.3867 149.377 179.9297 149.2539 c
180.4258 149.1401 180.8057 148.7275 181.0566 148.0239 C
181.7344 148.2681 L
181.3145 149.4526 180.6055 149.8413 180.0879 149.9595 c
179.2461 150.1494 178.3828 149.749 177.9355 149.3032 c
177.3594 148.7275 177.0332 147.8535 177.0684 146.9668 c
177.1094 146.0459 177.5234 145.207 178.2363 144.6025 c
180.6738 142.5361 183.4785 143.9419 184.2227 144.6904 c
185.4395 145.9038 187.0234 149.0215 184.3125 152.1445 c
183.248 153.3599 181.7285 154.0703 180.0293 154.144 c
177.627 154.2456 175.0811 153.1201 172.8594 150.9854 c
f
178.0293 153.5518 m
178.5996 151.4902 180.3369 149.1279 180.4102 149.0264 C
180.9883 149.4575 L
180.9707 149.4785 179.2578 151.8101 178.7246 153.7437 C
178.0293 153.5518 L
f
174.3135 151.585 m
176.6621 149.1709 177.0625 146.5908 177.0664 146.5649 C
177.7793 146.666 L
177.7617 146.7803 177.3486 149.4951 174.8281 152.0874 C
174.3135 151.585 L
f
176.7305 127.3535 m
177.4268 127.1787 L
177.4336 127.2021 178.0449 129.5244 179.2041 130.6201 C
178.71 131.1445 L
177.3984 129.9053 176.7559 127.458 176.7305 127.3535 C
f
172.9951 130.0244 m
173.5049 129.5166 L
175.3525 131.3623 176.2012 133.8643 176.2363 133.9697 C
175.5527 134.2012 L
175.5459 134.1748 174.7207 131.7539 172.9951 130.0244 C
f
132.6616 184.2041 m
132.812 184.1187 136.4126 182.0693 140.6714 182.0693 c
146.6172 182.0693 149.1543 184.1514 149.2588 184.2393 C
148.7959 184.7915 L
148.7715 184.7705 146.3262 182.7915 140.6714 182.7915 c
136.6113 182.7915 133.0571 184.8076 133.021 184.8267 C
132.6616 184.2041 L
f
176.4717 118.1475 m
176.292 117.3525 L
174.8486 110.9131 170.4629 91.3213 141.3701 91.3213 c
112.0332 91.3213 107.2593 111.3389 105.6904 117.917 C
105.4521 118.8975 L
104.1523 123.9033 100.916 129.0771 100.8828 129.126 C
100.2729 128.7422 L
100.3052 128.6924 103.4834 123.6152 104.7544 118.7129 C
104.9888 117.7529 L
106.5908 111.0361 111.4644 90.6025 141.3701 90.6025 c
161.0566 90.6025 173.041 99.5469 176.9941 117.1943 C
177.1738 117.9834 L
178.2227 122.3662 179.6172 125.1055 182.1641 129.2373 C
181.5508 129.6182 L
178.9629 125.415 177.5439 122.6318 176.4717 118.1475 C
f
*u
1 D
157.8672 153.2363 m
143.8984 153.2363 L
143.7041 153.1724 141.7148 151.6089 141.1807 151.1895 C
140.8042 151.4785 138.6182 153.1563 Y
123.3916 153.2319 L
116.0459 145.2236 L
115.9497 120.7686 L
135.2646 120.7686 135.5591 120.7686 V
135.7524 120.5732 138.1108 118.2109 Y
144.0234 118.2109 L
146.084 120.2725 146.2764 120.4639 V
146.5703 120.4639 165.1172 120.4639 Y
165.1172 145.8135 L
165.0156 146.0693 158.124 153.1274 Y
158.0166 153.2363 L
157.8672 153.2363 L
f
0 D
141.4058 150.4502 m
144.1211 152.5942 L
157.4141 152.5161 157.7139 152.5161 V
157.918 152.3076 164.498 145.5601 Y
164.4023 121.8877 164.3984 121.1865 V
163.709 121.1865 145.9766 121.1865 Y
143.917 119.125 143.7256 118.9326 V
143.4492 118.9326 138.6846 118.9326 138.4097 118.9326 C
138.2168 119.125 135.8569 121.4873 Y
117.3643 121.4873 116.6699 121.4873 V
116.6699 122.1865 116.6699 144.9678 116.6699 144.9746 C
116.7373 144.9199 123.1357 151.8911 123.7065 152.5093 C
124.0161 152.5093 138.3662 152.5093 138.3872 152.5093 C
138.3872 152.5093 l
138.3872 152.4263 140.9639 150.4473 Y
141.1865 150.2749 L
141.4058 150.4502 L
f
*U
123.1895 152.874 m
123.1895 128.5625 L
138.8184 128.5625 138.8481 128.5625 V
138.8481 128.5625 l
138.8481 128.4561 141.0376 126.5176 Y
141.2759 126.3066 L
143.9434 128.6689 143.9482 128.6758 V
143.9512 128.5859 157.9004 128.5625 Y
158.2598 128.5625 L
158.3311 152.8477 L
157.6113 152.8477 L
157.543 129.9814 157.542 129.2852 V
156.8584 129.2852 143.7129 129.3076 Y
143.5098 129.2275 141.8218 127.749 141.2769 127.2686 C
140.8901 127.6104 139.104 129.1924 Y
124.5952 129.2725 123.9092 129.2803 V
123.9092 129.9746 123.9092 152.874 Y
123.1895 152.874 L
f
161.0566 149.1538 m
161.0781 126.4502 161.0801 125.7451 V
160.3887 125.7451 144.8242 125.7451 Y
144.5791 125.6475 142.1436 123.3379 Y
140.0327 123.4209 139.7603 123.4326 V
139.5786 123.6104 137.5259 125.6621 Y
121.0723 125.6621 120.3813 125.6621 V
120.3804 126.3584 120.3589 149.0547 Y
119.6387 149.0547 L
119.6626 124.9424 L
136.9346 124.9424 137.2275 124.9424 V
137.4185 124.749 139.4556 122.7168 Y
142.3901 122.7168 L
142.6377 122.8135 145.0732 125.126 Y
161.7998 125.0273 L
161.7773 149.1538 L
161.0566 149.1538 L
f
121.4819 150.9644 m
121.521 126.6143 L
137.666 126.6143 137.9678 126.6143 V
138.1587 126.4111 140.1938 124.292 Y
142.0884 124.292 L
143.9844 126.4395 144.1768 126.6592 V
144.4941 126.6592 160.1973 126.71 Y
160.1973 150.7817 L
159.4785 150.7817 L
159.4785 128.1211 159.4785 127.4268 V
158.791 127.4229 143.8516 127.3779 Y
141.9556 125.2305 141.7627 125.0146 V
141.5293 125.0146 140.7236 125.0146 140.502 125.0146 C
140.3101 125.2158 138.2734 127.3369 Y
122.9282 127.3369 122.2397 127.3369 V
122.2388 128.0322 122.2026 150.9644 Y
121.4819 150.9644 L
f
162.8184 147.2988 m
162.8184 124.1787 162.8184 123.4795 V
162.127 123.4795 145.0703 123.4795 Y
143.2646 121.6787 143.0752 121.4873 V
142.8086 121.4873 139.3433 121.4873 139.0366 121.4873 C
138.8433 121.7246 137.0869 123.9033 Y
119.126 123.876 118.4326 123.876 V
118.4316 124.5742 118.4102 146.8965 Y
117.689 146.8965 L
117.7134 123.1553 L
136.4053 123.1816 136.7422 123.1816 V
136.936 122.9404 138.6919 120.7686 Y
143.373 120.7686 L
145.1797 122.5703 145.3691 122.7617 V
145.6621 122.7617 163.54 122.7617 Y
163.54 147.2988 L
162.8184 147.2988 L
f
116.0459 121.374 m
116.5737 120.8838 L
123.8125 128.6787 L
123.2847 129.166 L
116.0459 121.374 L
f
157.6279 128.6846 m
164.3936 120.7979 L
164.9395 121.2686 L
158.1748 129.1553 L
157.6279 128.6846 L
f
U
U
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
